//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: wxcrafter.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#ifndef WXCRAFTER_BASE_CLASSES_H
#define WXCRAFTER_BASE_CLASSES_H

#include <wx/settings.h>
#include <wx/xrc/xmlres.h>
#include <wx/xrc/xh_bmp.h>
#include <wx/dialog.h>
#include <wx/iconbndl.h>
#include <wx/artprov.h>
#include <wx/sizer.h>
#include <wx/splitter.h>
#include <wx/panel.h>
#include <wx/textctrl.h>
#include <wx/button.h>
#include <wx/choice.h>
#include <wx/arrstr.h>
#include <wx/pen.h>
#include <wx/aui/auibar.h>
#include <wx/toolbar.h>
#include <wx/imaglist.h>
#include <wx/bitmap.h>
#include <map>
#include <wx/icon.h>
#include <wx/bannerwindow.h>
#include <wx/commandlinkbutton.h>
#include <wx/filepicker.h>
#include <wx/dataview.h>
#include "addfunctionsmodel.h"
#include <wx/scrolwin.h>
#include <wx/statbmp.h>
#include <wx/dirctrl.h>
#include <wx/frame.h>
#include <wx/wizard.h>
#include <vector>
#include "dvtemplatesmodel.h"
#include <wx/stattext.h>
#include <wx/checkbox.h>

class NewProjectDlgBaseClass : public wxDialog
{
protected:
    wxSplitterWindow* m_splitter5;
    wxPanel* m_splitterPageRight;
    wxPanel* m_splitterPageLeft;
    wxTextCtrl* m_txtDescription;
    wxButton* m_button3;
    wxButton* m_button4;

protected:
    virtual void OnOKUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnCreate(wxCommandEvent& event) { event.Skip(); }

public:
    NewProjectDlgBaseClass(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("New Project"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER);
    virtual ~NewProjectDlgBaseClass();
};


class NavBarControlBaseClass : public wxPanel
{
protected:
    wxSplitterWindow* m_splitter;
    wxPanel* m_splitterPage39;
    wxChoice* m_scope;
    wxPanel* m_splitterPage41;
    wxChoice* m_func;

protected:
    virtual void OnScope(wxCommandEvent& event) { event.Skip(); }
    virtual void OnFunction(wxCommandEvent& event) { event.Skip(); }

public:
    NavBarControlBaseClass(wxWindow* parent, wxWindowID id = wxID_ANY, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxWANTS_CHARS|wxTAB_TRAVERSAL|wxTRANSPARENT_WINDOW);
    virtual ~NavBarControlBaseClass();
};


class BuildTabTopPanelBaseClass : public wxPanel
{
protected:
    wxAuiToolBar* m_auibar48;

protected:
    virtual void OnToolPinCommandToolClicked(wxCommandEvent& event) { event.Skip(); }
    virtual void OnAutoScroll(wxCommandEvent& event) { event.Skip(); }
    virtual void OnAutoScrollUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnClearBuildOutput(wxCommandEvent& event) { event.Skip(); }
    virtual void OnClearBuildOutputUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnSaveBuildOutput(wxCommandEvent& event) { event.Skip(); }
    virtual void OnSaveBuildOutputUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnCopyBuildOutput(wxCommandEvent& event) { event.Skip(); }
    virtual void OnCopyBuildOutputUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnPaste(wxCommandEvent& event) { event.Skip(); }
    virtual void OnPasteUI(wxUpdateUIEvent& event) { event.Skip(); }

public:
    BuildTabTopPanelBaseClass(wxWindow* parent, wxWindowID id = wxID_ANY, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxTAB_TRAVERSAL);
    virtual ~BuildTabTopPanelBaseClass();
};


class NewProjImgList : public wxImageList
{
protected:
    // Maintain a map of all bitmaps representd by their name
    std::map<wxString, wxBitmap> m_bitmaps;


protected:

public:
    NewProjImgList();
    const wxBitmap& Bitmap(const wxString &name) const {
        if ( !m_bitmaps.count(name) )
            return wxNullBitmap;
        return m_bitmaps.find(name)->second;
    }
    virtual ~NewProjImgList();
};


class wxcDownloadDlgBaseClass : public wxDialog
{
protected:
    wxPanel* m_panel81;
    wxBannerWindow* m_banner76;
    wxPanel* m_panel75;
    wxCommandLinkButton* m_cmdLnkBtnDownload;
    wxCommandLinkButton* m_cmdLnkBtnContinue;

protected:
    virtual void OnDownloadWxCrafterPlugin(wxCommandEvent& event) { event.Skip(); }
    virtual void OnIgnoreTheError(wxCommandEvent& event) { event.Skip(); }

public:
    wxcDownloadDlgBaseClass(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Plugin is missing"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(500,300), long style = wxDEFAULT_DIALOG_STYLE);
    virtual ~wxcDownloadDlgBaseClass();
};


class AddFunctionsImplBaseDlg : public wxDialog
{
protected:
    wxBannerWindow* m_banner125;
    wxFilePickerCtrl* m_filePicker;
    wxDataViewCtrl* m_dataview;
    wxObjectDataPtr<AddFunctionsModel> m_dataviewModel;

    wxButton* m_button133;
    wxButton* m_button135;
    wxButton* m_button121;
    wxButton* m_button123;

protected:
    virtual void OnCheckAll(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUncheckAll(wxCommandEvent& event) { event.Skip(); }
    virtual void OnOKUI(wxUpdateUIEvent& event) { event.Skip(); }

public:
    AddFunctionsImplBaseDlg(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Add function implementation"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(500,300), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER);
    virtual ~AddFunctionsImplBaseDlg();
};


class WelcomePageBase : public wxPanel
{
protected:
    wxScrolledWindow* m_scrollWin247;
    wxPanel* m_panel191;
    wxStaticBitmap* m_staticBitmap161;
    wxCommandLinkButton* m_cmdLnkBtnWorkspaces;
    wxCommandLinkButton* m_cmdLnkBtnFilesMenu;
    wxCommandLinkButton* m_cmdLnkBtn157;
    wxCommandLinkButton* m_cmdLnkBtn231;
    wxCommandLinkButton* m_cmdLnkBtn155;
    wxCommandLinkButton* m_cmdLnkBtn151;

protected:
    virtual void OnSize(wxSizeEvent& event) { event.Skip(); }
    virtual void OnShowWorkspaceMenu(wxCommandEvent& event) { event.Skip(); }
    virtual void OnRecentProjectUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnShowFileseMenu(wxCommandEvent& event) { event.Skip(); }
    virtual void OnRecentFileUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnNewProject(wxCommandEvent& event) { event.Skip(); }
    virtual void OnOpenWorkspace(wxCommandEvent& event) { event.Skip(); }
    virtual void OnOpenForums(wxCommandEvent& event) { event.Skip(); }
    virtual void OnOpenWiki(wxCommandEvent& event) { event.Skip(); }

public:
    WelcomePageBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxTAB_TRAVERSAL);
    virtual ~WelcomePageBase();
};


class FileExplorerBase : public wxPanel
{
protected:
    wxGenericDirCtrl* m_genericDirCtrl;

protected:
    virtual void OnItemActivated(wxTreeEvent& event) { event.Skip(); }
    virtual void OnContextMenu(wxTreeEvent& event) { event.Skip(); }
    virtual void OnKeyDown(wxTreeEvent& event) { event.Skip(); }

public:
    FileExplorerBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(500,300), long style = wxTAB_TRAVERSAL);
    virtual ~FileExplorerBase();
};


class WorkspaceTabBase : public wxPanel
{
protected:
    enum {
        ID_TOOL_ACTIVE_PROJECT_SETTINGS = 1001,
        ID_TOOL_COLLAPSE_ALL = 1002,
        ID_TOOL_GOTO_ACTIVE_PROJECT = 1003,
        ID_TOOL_LINK_EDITOR = 1004,
    };
protected:
    wxAuiToolBar* m_auibar;
    wxSplitterWindow* m_splitter;
    wxPanel* m_splitterPage308;
    wxChoice* m_choiceActiveProject;
    wxPanel* m_splitterPage312;
    wxChoice* m_workspaceConfig;

protected:
    virtual void OnLinkEditor(wxCommandEvent& event) { event.Skip(); }
    virtual void OnLinkEditorUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnCollapseAll(wxCommandEvent& event) { event.Skip(); }
    virtual void OnCollapseAllUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnGoHome(wxCommandEvent& event) { event.Skip(); }
    virtual void OnGoHomeUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnProjectSettings(wxCommandEvent& event) { event.Skip(); }
    virtual void OnProjectSettingsUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnChoiceActiveProject(wxCommandEvent& event) { event.Skip(); }
    virtual void OnChoiceActiveProjectUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnConfigurationManagerChoice(wxCommandEvent& event) { event.Skip(); }
    virtual void OnConfigurationManagerChoiceUI(wxUpdateUIEvent& event) { event.Skip(); }

public:
    WorkspaceTabBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxTAB_TRAVERSAL);
    virtual ~WorkspaceTabBase();
};


class EditorFrameBase : public wxFrame
{
protected:
    wxPanel* m_mainPanel;
    wxToolBar* m_toolbar;

protected:
    virtual void OnClose(wxCommandEvent& event) { event.Skip(); }
    virtual void OnCloseUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnFind(wxCommandEvent& event) { event.Skip(); }
    virtual void OnFindUI(wxUpdateUIEvent& event) { event.Skip(); }

public:
    EditorFrameBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("EditorFrame"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxDEFAULT_FRAME_STYLE|wxFRAME_NO_TASKBAR|wxFRAME_FLOAT_ON_PARENT);
    virtual ~EditorFrameBase();
};


class NewProjectWizardBase : public wxWizard
{
protected:
    std::vector<wxWizardPageSimple*> m_pages;

    wxWizardPageSimple* m_wizardPageTemplate;
    wxBannerWindow* m_banner386;
    wxDataViewCtrl* m_dataviewTemplates;
    wxObjectDataPtr<DVTemplatesModel> m_dataviewTemplatesModel;

    wxWizardPageSimple* m_wizardPageDetails;
    wxBannerWindow* m_banner398;
    wxStaticText* m_staticText16;
    wxTextCtrl* m_txtProjName;
    wxStaticText* m_staticText18;
    wxTextCtrl* m_textCtrlProjectPath;
    wxButton* m_buttonBrowse;
    wxCheckBox* m_cbSeparateDir;
    wxStaticText* m_stxtFullFileName;
    wxWizardPageSimple* m_wizardPageToolchain;
    wxBannerWindow* m_banner390;
    wxStaticText* m_staticText414;
    wxChoice* m_choiceCompiler;
    wxStaticText* m_staticText418;
    wxChoice* m_choiceDebugger;

protected:
    virtual void OnPageChanging(wxWizardEvent& event) { event.Skip(); }
    virtual void OnFinish(wxWizardEvent& event) { event.Skip(); }
    virtual void OnItemSelected(wxDataViewEvent& event) { event.Skip(); }
    virtual void OnProjectNameChanged(wxCommandEvent& event) { event.Skip(); }
    virtual void OnProjectPathUpdated(wxCommandEvent& event) { event.Skip(); }
    virtual void OnBrowseProjectPath(wxCommandEvent& event) { event.Skip(); }

public:
    NewProjectWizardBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("New Project Wizard"), const wxBitmap& bmp = wxNullBitmap, const wxPoint& pos = wxDefaultPosition, long style = wxDEFAULT_DIALOG_STYLE);
    wxWizardPageSimple* GetFirstPage() const { if(!m_pages.empty()) return m_pages.at(0); return NULL; }
    virtual ~NewProjectWizardBase();
};

#endif
