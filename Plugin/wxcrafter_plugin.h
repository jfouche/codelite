//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//
// copyright            : (C) 2014 The CodeLite Team
// file name            : wxcrafter_plugin.h
//
// -------------------------------------------------------------------------
// A
//              _____           _      _     _ _
//             /  __ \         | |    | |   (_) |
//             | /  \/ ___   __| | ___| |    _| |_ ___
//             | |    / _ \ / _  |/ _ \ |   | | __/ _ )
//             | \__/\ (_) | (_| |  __/ |___| | ||  __/
//              \____/\___/ \__,_|\___\_____/_|\__\___|
//
//                                                  F i l e
//
//    This program is free software; you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation; either version 2 of the License, or
//    (at your option) any later version.
//
//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: wxcrafter.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#ifndef WXCRAFTER_BASE_CLASSES_H
#define WXCRAFTER_BASE_CLASSES_H

#include <wx/settings.h>
#include <wx/xrc/xmlres.h>
#include <wx/xrc/xh_bmp.h>
#include <wx/dialog.h>
#include <wx/iconbndl.h>
#include <wx/artprov.h>
#include <wx/sizer.h>
#include <wx/stc/stc.h>
#include <wx/button.h>
#include <wx/panel.h>
#include <wx/ribbon/bar.h>
#include <wx/ribbon/art.h>
#include <wx/ribbon/page.h>
#include <wx/ribbon/panel.h>
#include <wx/ribbon/buttonbar.h>
#include <wx/splitter.h>
#include <wx/filepicker.h>
#include <wx/stattext.h>
#include "codelite_exports.h"

class WXDLLIMPEXP_SDK EditDlgBase : public wxDialog
{
protected:
    wxStyledTextCtrl* m_stc10;
    wxButton* m_button6;
    wxButton* m_button8;

protected:

public:
    EditDlgBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Edit Text"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER);
    virtual ~EditDlgBase();
};


class WXDLLIMPEXP_SDK DiffSideBySidePanelBase : public wxPanel
{
protected:
    enum {
        ID_TOOL_COPY_DIFF_LEFT_TO_RIGHT = 1001,
        ID_TOOL_COPY_DIFF_RIGHT_TO_LEFT = 1002,
        ID_TOOL_COPY_FILE_LEFT_TO_RIGHT = 1003,
        ID_TOOL_COPY_FILE_RIGHT_TO_LEFT = 1004,
        ID_TOOL_SAVE = 1005,
        ID_VIEW_HORIZONTAL = 1006,
        ID_VIEW_SINGLE = 1007,
        ID_VIEW_VRTICAL = 1008,
    };
protected:
    wxRibbonBar* m_ribbonBar;
    wxRibbonPage* m_ribbonPage43;
    wxRibbonPanel* m_ribbonPanel47;
    wxRibbonButtonBar* m_ribbonButtonBar49;
    wxRibbonPanel* m_ribbonPanel83;
    wxRibbonButtonBar* m_ribbonButtonBar85;
    wxRibbonPanel* m_ribbonPanel121;
    wxRibbonButtonBar* m_ribbonButtonBar123;
    wxSplitterWindow* m_splitter;
    wxPanel* m_splitterPageLeft;
    wxFilePickerCtrl* m_filePickerLeft;
    wxStyledTextCtrl* m_stcLeft;
    wxStaticText* m_staticTextLeft;
    wxPanel* m_splitterPageRight;
    wxFilePickerCtrl* m_filePickerRight;
    wxStyledTextCtrl* m_stcRight;
    wxStaticText* m_staticTextRight;

protected:
    virtual void OnRefreshDiff(wxRibbonButtonBarEvent& event) { event.Skip(); }
    virtual void OnRefreshDiffUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnNextDiffSequence(wxRibbonButtonBarEvent& event) { event.Skip(); }
    virtual void OnNextDiffUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnPrevDiffSequence(wxRibbonButtonBarEvent& event) { event.Skip(); }
    virtual void OnPrevDiffUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnCopyLeftToRightUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnCopyLeftToRight(wxRibbonButtonBarEvent& event) { event.Skip(); }
    virtual void OnCopyLeftToRightMenu(wxRibbonButtonBarEvent& event) { event.Skip(); }
    virtual void OnCopyRightToLeftUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnCopyRightToLeft(wxRibbonButtonBarEvent& event) { event.Skip(); }
    virtual void OnCopyRightToLeftMenu(wxRibbonButtonBarEvent& event) { event.Skip(); }
    virtual void OnCopyFileLeftToRight(wxRibbonButtonBarEvent& event) { event.Skip(); }
    virtual void OnCopyFileFromRight(wxRibbonButtonBarEvent& event) { event.Skip(); }
    virtual void OnSaveChanges(wxRibbonButtonBarEvent& event) { event.Skip(); }
    virtual void OnSaveChangesUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnVertical(wxRibbonButtonBarEvent& event) { event.Skip(); }
    virtual void OnVerticalUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnHorizontal(wxRibbonButtonBarEvent& event) { event.Skip(); }
    virtual void OnHorizontalUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnSingleView(wxRibbonButtonBarEvent& event) { event.Skip(); }
    virtual void OnSingleUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnLeftPickerUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnLeftStcPainted(wxStyledTextEvent& event) { event.Skip(); }
    virtual void OnRightPickerUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnRightStcPainted(wxStyledTextEvent& event) { event.Skip(); }

public:
    DiffSideBySidePanelBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxTAB_TRAVERSAL);
    virtual ~DiffSideBySidePanelBase();
};

#endif
