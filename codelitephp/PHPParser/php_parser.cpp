
/*  A Bison parser, made from php.y
    by GNU Bison version 1.28  */

#define YYBISON 1  /* Identify Bison output.  */

#define yyparse php_parse
#define yylex php_lex
#define yyerror php_error
#define yylval php_lval
#define yychar php_char
#define yydebug php_debug
#define yynerrs php_nerrs
#define	END	257
#define	T_INCLUDE	258
#define	T_INCLUDE_ONCE	259
#define	T_EVAL	260
#define	T_REQUIRE	261
#define	T_REQUIRE_ONCE	262
#define	T_LOGICAL_OR	263
#define	T_LOGICAL_XOR	264
#define	T_LOGICAL_AND	265
#define	T_PRINT	266
#define	T_YIELD	267
#define	T_PLUS_EQUAL	268
#define	T_MINUS_EQUAL	269
#define	T_MUL_EQUAL	270
#define	T_DIV_EQUAL	271
#define	T_CONCAT_EQUAL	272
#define	T_MOD_EQUAL	273
#define	T_AND_EQUAL	274
#define	T_OR_EQUAL	275
#define	T_XOR_EQUAL	276
#define	T_SL_EQUAL	277
#define	T_SR_EQUAL	278
#define	T_BOOLEAN_OR	279
#define	T_BOOLEAN_AND	280
#define	T_IS_EQUAL	281
#define	T_IS_NOT_EQUAL	282
#define	T_IS_IDENTICAL	283
#define	T_IS_NOT_IDENTICAL	284
#define	T_IS_SMALLER_OR_EQUAL	285
#define	T_IS_GREATER_OR_EQUAL	286
#define	T_SL	287
#define	T_SR	288
#define	T_INSTANCEOF	289
#define	T_INC	290
#define	T_DEC	291
#define	T_INT_CAST	292
#define	T_DOUBLE_CAST	293
#define	T_STRING_CAST	294
#define	T_ARRAY_CAST	295
#define	T_OBJECT_CAST	296
#define	T_BOOL_CAST	297
#define	T_UNSET_CAST	298
#define	T_NEW	299
#define	T_CLONE	300
#define	T_EXIT	301
#define	T_IF	302
#define	T_ELSEIF	303
#define	T_ELSE	304
#define	T_ENDIF	305
#define	T_LNUMBER	306
#define	T_DNUMBER	307
#define	T_STRING	308
#define	T_STRING_VARNAME	309
#define	T_VARIABLE	310
#define	T_NUM_STRING	311
#define	T_INLINE_HTML	312
#define	T_CHARACTER	313
#define	T_BAD_CHARACTER	314
#define	T_ENCAPSED_AND_WHITESPACE	315
#define	T_CONSTANT_ENCAPSED_STRING	316
#define	T_ECHO	317
#define	T_DO	318
#define	T_WHILE	319
#define	T_ENDWHILE	320
#define	T_FOR	321
#define	T_ENDFOR	322
#define	T_FOREACH	323
#define	T_ENDFOREACH	324
#define	T_DECLARE	325
#define	T_ENDDECLARE	326
#define	T_AS	327
#define	T_SWITCH	328
#define	T_ENDSWITCH	329
#define	T_CASE	330
#define	T_DEFAULT	331
#define	T_BREAK	332
#define	T_CONTINUE	333
#define	T_GOTO	334
#define	T_FUNCTION	335
#define	T_CONST	336
#define	T_RETURN	337
#define	T_TRY	338
#define	T_CATCH	339
#define	T_THROW	340
#define	T_USE	341
#define	T_INSTEADOF	342
#define	T_GLOBAL	343
#define	T_STATIC	344
#define	T_ABSTRACT	345
#define	T_FINAL	346
#define	T_PRIVATE	347
#define	T_PROTECTED	348
#define	T_PUBLIC	349
#define	T_VAR	350
#define	T_UNSET	351
#define	T_ISSET	352
#define	T_EMPTY	353
#define	T_HALT_COMPILER	354
#define	T_CLASS	355
#define	T_TRAIT	356
#define	T_INTERFACE	357
#define	T_EXTENDS	358
#define	T_IMPLEMENTS	359
#define	T_OBJECT_OPERATOR	360
#define	T_DOUBLE_ARROW	361
#define	T_LIST	362
#define	T_ARRAY	363
#define	T_CALLABLE	364
#define	T_CLASS_C	365
#define	T_TRAIT_C	366
#define	T_METHOD_C	367
#define	T_FUNC_C	368
#define	T_LINE	369
#define	T_FILE	370
#define	T_COMMENT	371
#define	T_DOC_COMMENT	372
#define	T_OPEN_TAG	373
#define	T_OPEN_TAG_WITH_ECHO	374
#define	T_CLOSE_TAG	375
#define	T_WHITESPACE	376
#define	T_START_HEREDOC	377
#define	T_END_HEREDOC	378
#define	T_DOLLAR_OPEN_CURLY_BRACES	379
#define	T_CURLY_OPEN	380
#define	T_PAAMAYIM_NEKUDOTAYIM	381
#define	T_NAMESPACE	382
#define	T_NS_C	383
#define	T_DIR	384
#define	T_DEFINE	385
#define	T_NS_SEPARATOR	386

#line 1 "php.y"


#define YYTOKENTYPE
#include "php_parser_api.h"
#include "php_helpers.h"
#define YYSIZE_T size_t

#ifdef YYSTYPE
#undef YYSTYPE 
#endif

#define YYSTYPE wxString
extern void php_error(char*);
extern int php_lex();
extern void php_less(int count);
bool update_member_initialization(const wxString &expr, const wxString &type);
void consume_method_body();
void consume_define_args();
#define RESET_PARSER() PHPParser.getCurrentEntry().reset();

static wxString last_local_variable_name;
#ifndef YYSTYPE
#define YYSTYPE int
#endif
#include <stdio.h>

#ifndef __cplusplus
#ifndef __STDC__
#define const
#endif
#endif



#define	YYFINAL		913
#define	YYFLAG		-32768
#define	YYNTBASE	161

#define YYTRANSLATE(x) ((unsigned)(x) <= 386 ? yytranslate[x] : 304)

static const short yytranslate[] = {     0,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,    50,   160,     2,   157,    49,    33,     2,   152,
   153,    47,    44,     9,    45,    46,    48,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,    28,   154,    38,
    15,    40,    27,    62,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
    63,     2,   158,    32,     2,   159,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,   155,    31,   156,    52,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     1,     3,     4,     5,     6,
     7,     8,    10,    11,    12,    13,    14,    16,    17,    18,
    19,    20,    21,    22,    23,    24,    25,    26,    29,    30,
    34,    35,    36,    37,    39,    41,    42,    43,    51,    53,
    54,    55,    56,    57,    58,    59,    60,    61,    64,    65,
    66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
    76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
    86,    87,    88,    89,    90,    91,    92,    93,    94,    95,
    96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
   106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
   116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
   126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
   136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
   146,   147,   148,   149,   150,   151
};

#if YYDEBUG != 0
static const short yyprhs[] = {     0,
     0,     2,     5,     6,     8,    12,    14,    15,    20,    22,
    24,    29,    33,    34,    41,    42,    48,    52,    55,    57,
    61,    63,    65,    69,    72,    77,    83,    88,    91,    92,
    94,    96,    98,   103,   105,   108,   112,   118,   127,   133,
   139,   149,   153,   156,   160,   163,   167,   170,   174,   178,
   181,   185,   189,   193,   195,   198,   204,   213,   222,   228,
   230,   231,   246,   250,   254,   256,   257,   259,   262,   271,
   273,   277,   279,   281,   283,   284,   286,   287,   288,   289,
   302,   303,   312,   313,   321,   323,   326,   328,   331,   332,
   335,   337,   338,   341,   342,   345,   347,   351,   352,   355,
   357,   360,   362,   367,   369,   374,   376,   381,   385,   391,
   395,   400,   405,   411,   412,   418,   423,   425,   427,   429,
   434,   435,   440,   441,   447,   448,   451,   452,   456,   458,
   459,   462,   466,   472,   477,   482,   488,   496,   503,   504,
   506,   508,   510,   512,   514,   515,   517,   519,   522,   526,
   530,   535,   539,   541,   543,   546,   551,   555,   561,   563,
   567,   570,   571,   575,   578,   580,   581,   582,   593,   597,
   599,   603,   605,   609,   610,   612,   614,   617,   620,   623,
   627,   629,   633,   635,   637,   641,   646,   650,   651,   653,
   655,   656,   661,   663,   665,   666,   668,   670,   673,   675,
   677,   679,   681,   683,   685,   689,   695,   697,   701,   707,
   712,   716,   718,   719,   721,   725,   727,   734,   738,   743,
   750,   754,   757,   761,   765,   769,   773,   777,   781,   785,
   789,   793,   797,   801,   804,   807,   810,   813,   817,   821,
   825,   829,   833,   837,   841,   845,   849,   853,   857,   861,
   865,   869,   873,   877,   880,   883,   886,   889,   893,   897,
   901,   905,   909,   913,   917,   921,   925,   927,   933,   938,
   940,   943,   946,   949,   952,   955,   958,   961,   964,   967,
   969,   974,   978,   982,   985,   987,   988,   999,  1000,  1012,
  1014,  1017,  1022,  1027,  1029,  1030,  1035,  1039,  1044,  1046,
  1049,  1054,  1061,  1067,  1074,  1081,  1088,  1095,  1100,  1102,
  1104,  1108,  1111,  1113,  1117,  1120,  1122,  1124,  1129,  1131,
  1134,  1135,  1138,  1142,  1146,  1147,  1150,  1152,  1153,  1155,
  1157,  1158,  1162,  1164,  1166,  1168,  1170,  1172,  1174,  1176,
  1178,  1180,  1182,  1184,  1188,  1191,  1193,  1195,  1199,  1202,
  1205,  1208,  1213,  1217,  1219,  1223,  1225,  1227,  1229,  1233,
  1236,  1238,  1242,  1246,  1247,  1250,  1251,  1253,  1259,  1263,
  1267,  1269,  1271,  1273,  1275,  1277,  1279,  1285,  1287,  1290,
  1291,  1295,  1300,  1305,  1309,  1311,  1313,  1314,  1316,  1319,
  1323,  1327,  1329,  1334,  1339,  1341,  1343,  1345,  1347,  1350,
  1352,  1357,  1362,  1364,  1366,  1371,  1372,  1374,  1376,  1378,
  1383,  1388,  1390,  1392,  1396,  1398,  1401,  1405,  1407,  1409,
  1414,  1415,  1416,  1419,  1425,  1429,  1433,  1435,  1442,  1447,
  1452,  1455,  1458,  1461,  1463,  1466,  1468,  1473,  1477,  1481,
  1488,  1492,  1494,  1496,  1498,  1503,  1508,  1511,  1514,  1519,
  1522,  1525,  1527,  1531,  1535
};

static const short yyrhs[] = {   162,
     0,   162,   164,     0,     0,    73,     0,   163,   151,    73,
     0,   173,     0,     0,   150,   152,   165,   153,     0,   181,
     0,   182,     0,   119,   152,   153,   154,     0,   147,   163,
   154,     0,     0,   147,   163,   155,   166,   162,   156,     0,
     0,   147,   155,   167,   162,   156,     0,   106,   168,   154,
     0,   170,   154,     0,     1,     0,   168,     9,   169,     0,
   169,     0,   163,     0,   163,    92,    73,     0,   151,   163,
     0,   151,   163,    92,    73,     0,   170,     9,    73,    15,
   265,     0,   101,    73,    15,   265,     0,   171,   172,     0,
     0,   173,     0,   181,     0,   182,     0,   119,   152,   153,
   154,     0,   174,     0,    73,    28,     0,   155,   171,   156,
     0,    67,   260,   173,   207,   209,     0,    67,   260,    28,
   171,   208,   210,    70,   154,     0,    84,   152,   271,   153,
   206,     0,    83,   173,    84,   260,   154,     0,    86,   152,
   244,   154,   244,   154,   244,   153,   199,     0,    93,   260,
   203,     0,    97,   154,     0,    97,   271,   154,     0,    98,
   154,     0,    98,   271,   154,     0,   102,   154,     0,   102,
   246,   154,     0,   102,   275,   154,     0,   249,   154,     0,
   108,   216,   154,     0,   109,   218,   154,     0,    82,   243,
   154,     0,    77,     0,   271,   154,     0,   116,   152,   179,
   153,   154,     0,    88,   152,   275,    92,   198,   197,   153,
   200,     0,    88,   152,   246,    92,   275,   197,   153,   200,
     0,    90,   152,   202,   153,   201,     0,   154,     0,     0,
   103,   155,   171,   156,   104,   152,   255,    75,   175,   153,
   155,   171,   156,   176,     0,   105,   271,   154,     0,    99,
    73,   154,     0,   177,     0,     0,   178,     0,   177,   178,
     0,   104,   152,   255,    75,   153,   155,   171,   156,     0,
   180,     0,   179,     9,   180,     0,   275,     0,   184,     0,
   188,     0,     0,    33,     0,     0,     0,     0,   100,   185,
   183,    73,   186,   152,   211,   153,   155,   187,   171,   156,
     0,     0,   191,    73,   189,   192,   195,   155,   219,   156,
     0,     0,   193,    73,   190,   194,   155,   219,   156,     0,
   120,     0,   110,   120,     0,   121,     0,   111,   120,     0,
     0,   123,   255,     0,   122,     0,     0,   123,   196,     0,
     0,   124,   196,     0,   255,     0,   196,     9,   255,     0,
     0,   126,   198,     0,   275,     0,    33,   275,     0,   173,
     0,    28,   171,    87,   154,     0,   173,     0,    28,   171,
    89,   154,     0,   173,     0,    28,   171,    91,   154,     0,
    73,    15,   265,     0,   202,     9,    73,    15,   265,     0,
   155,   204,   156,     0,   155,   154,   204,   156,     0,    28,
   204,    94,   154,     0,    28,   154,   204,    94,   154,     0,
     0,   204,    95,   271,   205,   171,     0,   204,    96,   205,
   171,     0,    28,     0,   154,     0,   173,     0,    28,   171,
    85,   154,     0,     0,   207,    68,   260,   173,     0,     0,
   208,    68,   260,    28,   171,     0,     0,    69,   173,     0,
     0,    69,    28,   171,     0,   212,     0,     0,   213,    75,
     0,   213,    33,    75,     0,   213,    33,    75,    15,   265,
     0,   213,    75,    15,   265,     0,   212,     9,   213,    75,
     0,   212,     9,   213,    33,    75,     0,   212,     9,   213,
    33,    75,    15,   265,     0,   212,     9,   213,    75,    15,
   265,     0,     0,   128,     0,   129,     0,   255,     0,   215,
     0,   249,     0,     0,   246,     0,   275,     0,    33,   273,
     0,   215,     9,   246,     0,   215,     9,   275,     0,   215,
     9,    33,   273,     0,   216,     9,   217,     0,   217,     0,
    75,     0,   157,   272,     0,   157,   155,   271,   156,     0,
   218,     9,    75,     0,   218,     9,    75,    15,   265,     0,
    75,     0,    75,    15,   265,     0,   219,   220,     0,     0,
   237,   241,   154,     0,   242,   154,     0,   223,     0,     0,
     0,   238,   250,   221,   183,    73,   222,   152,   211,   153,
   235,     0,   106,   224,   225,     0,   255,     0,   224,     9,
   255,     0,   154,     0,   155,   226,   156,     0,     0,   227,
     0,   228,     0,   227,   228,     0,   229,   154,     0,   233,
   154,     0,   232,   107,   230,     0,   255,     0,   230,     9,
   255,     0,    73,     0,   232,     0,   255,   146,    73,     0,
   231,    92,   234,    73,     0,   231,    92,   240,     0,     0,
   240,     0,   154,     0,     0,   155,   236,   171,   156,     0,
   239,     0,   115,     0,     0,   239,     0,   240,     0,   239,
   240,     0,   114,     0,   113,     0,   112,     0,   109,     0,
   110,     0,   111,     0,   241,     9,    75,     0,   241,     9,
    75,    15,   265,     0,    75,     0,    75,    15,   265,     0,
   242,     9,    73,    15,   265,     0,   101,    73,    15,   265,
     0,   243,     9,   271,     0,   271,     0,     0,   245,     0,
   245,     9,   271,     0,   271,     0,   127,   152,   294,   153,
    15,   271,     0,   275,    15,   271,     0,   275,    15,    33,
   275,     0,   275,    15,    33,    64,   256,   263,     0,    64,
   256,   263,     0,    65,   271,     0,   275,    16,   271,     0,
   275,    17,   271,     0,   275,    18,   271,     0,   275,    19,
   271,     0,   275,    20,   271,     0,   275,    21,   271,     0,
   275,    22,   271,     0,   275,    23,   271,     0,   275,    24,
   271,     0,   275,    25,   271,     0,   275,    26,   271,     0,
   274,    53,     0,    53,   274,     0,   274,    54,     0,    54,
   274,     0,   271,    29,   271,     0,   271,    30,   271,     0,
   271,    10,   271,     0,   271,    12,   271,     0,   271,    11,
   271,     0,   271,    31,   271,     0,   271,    33,   271,     0,
   271,    32,   271,     0,   271,    46,   271,     0,   271,    44,
   271,     0,   271,    45,   271,     0,   271,    47,   271,     0,
   271,    48,   271,     0,   271,    49,   271,     0,   271,    42,
   271,     0,   271,    43,   271,     0,    44,   271,     0,    45,
   271,     0,    50,   271,     0,    52,   271,     0,   271,    36,
   271,     0,   271,    37,   271,     0,   271,    34,   271,     0,
   271,    35,   271,     0,   271,    38,   271,     0,   271,    39,
   271,     0,   271,    40,   271,     0,   271,    41,   271,     0,
   271,    51,   256,     0,   260,     0,   271,    27,   271,    28,
   271,     0,   271,    27,    28,   271,     0,   301,     0,    55,
   271,     0,    56,   271,     0,    57,   271,     0,    58,   271,
     0,    59,   271,     0,    60,   271,     0,    61,   271,     0,
    66,   261,     0,    62,   271,     0,   267,     0,   128,   152,
   296,   153,     0,    63,   296,   158,     0,   159,   262,   159,
     0,    13,   271,     0,    14,     0,     0,   250,   183,   152,
   247,   211,   153,   251,   155,   171,   156,     0,     0,   109,
   250,   183,   152,   248,   211,   153,   251,   155,   171,   156,
     0,    14,     0,    14,   275,     0,    14,   271,   126,   246,
     0,    14,   271,   126,   275,     0,   100,     0,     0,   106,
   152,   252,   153,     0,   252,     9,    75,     0,   252,     9,
    33,    75,     0,    75,     0,    33,    75,     0,   163,   152,
   214,   153,     0,   147,   151,   163,   152,   214,   153,     0,
   151,   163,   152,   214,   153,     0,   254,   146,   292,   152,
   214,   153,     0,   254,   146,   281,   152,   214,   153,     0,
   283,   146,   292,   152,   214,   153,     0,   283,   146,   281,
   152,   214,   153,     0,   281,   152,   214,   153,     0,   109,
     0,   163,     0,   147,   151,   163,     0,   151,   163,     0,
   163,     0,   147,   151,   163,     0,   151,   163,     0,   254,
     0,   257,     0,   286,   125,   290,   258,     0,   286,     0,
   258,   259,     0,     0,   125,   290,     0,   152,   271,   153,
     0,   152,   249,   153,     0,     0,   152,   153,     0,   260,
     0,     0,    80,     0,   298,     0,     0,   152,   214,   153,
     0,    71,     0,    72,     0,    81,     0,   134,     0,   135,
     0,   149,     0,   130,     0,   131,     0,   132,     0,   133,
     0,   148,     0,   142,    80,   143,     0,   142,   143,     0,
   264,     0,   163,     0,   147,   151,   163,     0,   151,   163,
     0,    44,   265,     0,    45,   265,     0,   128,   152,   268,
   153,     0,    63,   268,   158,     0,   266,     0,   254,   146,
    73,     0,    74,     0,   303,     0,   163,     0,   147,   151,
   163,     0,   151,   163,     0,   264,     0,   160,   298,   160,
     0,   142,   298,   143,     0,     0,   270,   269,     0,     0,
     9,     0,   270,     9,   265,   126,   265,     0,   270,     9,
   265,     0,   265,   126,   265,     0,   265,     0,   272,     0,
   246,     0,   275,     0,   275,     0,   275,     0,   285,   125,
   290,   280,   276,     0,   285,     0,   276,   277,     0,     0,
   125,   290,   280,     0,   278,    63,   289,   158,     0,   279,
    63,   289,   158,     0,   152,   214,   153,     0,   279,     0,
   278,     0,     0,   287,     0,   293,   287,     0,   254,   146,
   281,     0,   283,   146,   281,     0,   287,     0,   284,    63,
   289,   158,     0,   253,    63,   289,   158,     0,   286,     0,
   284,     0,   253,     0,   287,     0,   293,   287,     0,   282,
     0,   287,    63,   289,   158,     0,   287,   155,   271,   156,
     0,   288,     0,    75,     0,   157,   155,   271,   156,     0,
     0,   271,     0,   291,     0,   281,     0,   291,    63,   289,
   158,     0,   291,   155,   271,   156,     0,   292,     0,    73,
     0,   155,   271,   156,     0,   157,     0,   293,   157,     0,
   294,     9,   295,     0,   295,     0,   275,     0,   127,   152,
   294,   153,     0,     0,     0,   297,   269,     0,   297,     9,
   271,   126,   271,     0,   297,     9,   271,     0,   271,   126,
   271,     0,   271,     0,   297,     9,   271,   126,    33,   273,
     0,   297,     9,    33,   273,     0,   271,   126,    33,   273,
     0,    33,   273,     0,   298,   299,     0,   298,    80,     0,
   299,     0,    80,   299,     0,    75,     0,    75,    63,   300,
   158,     0,    75,   125,    73,     0,   144,   271,   156,     0,
   144,    74,    63,   271,   158,   156,     0,   145,   275,   156,
     0,    73,     0,    76,     0,    75,     0,   117,   152,   302,
   153,     0,   118,   152,   275,   153,     0,     4,   271,     0,
     5,   271,     0,     6,   152,   271,   153,     0,     7,   271,
     0,     8,   271,     0,   275,     0,   302,     9,   275,     0,
   254,   146,    73,     0,   283,   146,    73,     0
};

#endif

#if YYDEBUG != 0
static const short yyrline[] = { 0,
   186,   190,   191,   194,   196,   199,   200,   201,   201,   202,
   203,   204,   205,   205,   206,   206,   207,   208,   209,   220,
   222,   225,   227,   228,   229,   232,   241,   251,   253,   257,
   259,   260,   261,   265,   267,   270,   272,   273,   274,   275,
   276,   285,   286,   287,   288,   289,   290,   291,   292,   293,
   294,   295,   296,   297,   298,   299,   300,   304,   308,   309,
   310,   318,   320,   321,   325,   327,   330,   332,   336,   341,
   343,   346,   350,   354,   359,   361,   365,   371,   378,   383,
   390,   393,   402,   405,   416,   418,   419,   420,   423,   425,
   428,   432,   434,   437,   439,   442,   446,   449,   451,   455,
   457,   460,   462,   466,   468,   472,   474,   478,   480,   484,
   486,   487,   488,   492,   494,   495,   499,   501,   505,   507,
   512,   514,   518,   520,   524,   526,   530,   532,   536,   538,
   542,   548,   554,   560,   565,   570,   576,   582,   589,   591,
   592,   593,   597,   598,   599,   602,   604,   605,   606,   607,
   608,   611,   613,   617,   622,   626,   630,   632,   633,   634,
   638,   640,   644,   646,   647,   648,   657,   658,   661,   665,
   667,   670,   672,   675,   677,   680,   682,   685,   687,   690,
   694,   696,   699,   701,   704,   708,   710,   713,   715,   718,
   720,   725,   728,   730,   733,   735,   738,   740,   743,   745,
   746,   747,   748,   749,   752,   765,   776,   787,   800,   813,
   824,   826,   830,   832,   835,   837,   840,   842,   847,   848,
   849,   850,   851,   852,   853,   854,   855,   856,   857,   858,
   859,   860,   861,   862,   863,   864,   865,   866,   867,   868,
   869,   870,   871,   872,   873,   874,   875,   876,   877,   878,
   879,   880,   881,   882,   883,   884,   885,   886,   887,   888,
   889,   890,   891,   892,   893,   894,   895,   896,   899,   901,
   902,   903,   904,   905,   906,   907,   908,   909,   910,   911,
   912,   913,   914,   915,   916,   917,   919,   922,   924,   928,
   930,   931,   932,   935,   939,   941,   944,   946,   947,   948,
   951,   955,   958,   961,   964,   967,   970,   973,   978,   980,
   981,   982,   985,   987,   988,   993,   995,   999,  1003,  1007,
  1009,  1013,  1017,  1018,  1021,  1023,  1024,  1027,  1029,  1030,
  1034,  1036,  1040,  1042,  1043,  1044,  1045,  1046,  1047,  1048,
  1049,  1050,  1051,  1052,  1053,  1057,  1059,  1060,  1061,  1062,
  1063,  1064,  1065,  1066,  1069,  1073,  1075,  1076,  1077,  1078,
  1079,  1080,  1081,  1085,  1087,  1090,  1092,  1095,  1097,  1098,
  1099,  1102,  1104,  1107,  1112,  1116,  1120,  1122,  1125,  1127,
  1131,  1135,  1137,  1140,  1146,  1148,  1149,  1152,  1154,  1157,
  1159,  1163,  1167,  1169,  1173,  1175,  1176,  1180,  1182,  1183,
  1186,  1188,  1189,  1192,  1194,  1197,  1199,  1203,  1205,  1208,
  1210,  1211,  1214,  1216,  1219,  1221,  1224,  1226,  1230,  1232,
  1233,  1237,  1239,  1242,  1244,  1245,  1246,  1247,  1248,  1249,
  1250,  1253,  1255,  1256,  1257,  1262,  1264,  1265,  1266,  1267,
  1268,  1272,  1274,  1275,  1279,  1281,  1282,  1283,  1284,  1285,
  1286,  1289,  1291,  1294,  1296
};
#endif


#if YYDEBUG != 0 || defined (YYERROR_VERBOSE)

static const char * const yytname[] = {   "$","error","$undefined.","\"end of file\"",
"\"include (T_INCLUDE)\"","\"include_once (T_INCLUDE_ONCE)\"","\"eval (T_EVAL)\"",
"\"require (T_REQUIRE)\"","\"require_once (T_REQUIRE_ONCE)\"","','","\"or (T_LOGICAL_OR)\"",
"\"xor (T_LOGICAL_XOR)\"","\"and (T_LOGICAL_AND)\"","\"print (T_PRINT)\"","\"yield (T_YIELD)\"",
"'='","\"+= (T_PLUS_EQUAL)\"","\"-= (T_MINUS_EQUAL)\"","\"*= (T_MUL_EQUAL)\"",
"\"/= (T_DIV_EQUAL)\"","\".= (T_CONCAT_EQUAL)\"","\"%= (T_MOD_EQUAL)\"","\"&= (T_AND_EQUAL)\"",
"\"|= (T_OR_EQUAL)\"","\"^= (T_XOR_EQUAL)\"","\"<<= (T_SL_EQUAL)\"","\">>= (T_SR_EQUAL)\"",
"'?'","':'","\"|| (T_BOOLEAN_OR)\"","\"&& (T_BOOLEAN_AND)\"","'|'","'^'","'&'",
"\"== (T_IS_EQUAL)\"","\"!= (T_IS_NOT_EQUAL)\"","\"=== (T_IS_IDENTICAL)\"","\"!== (T_IS_NOT_IDENTICAL)\"",
"'<'","\"<= (T_IS_SMALLER_OR_EQUAL)\"","'>'","\">= (T_IS_GREATER_OR_EQUAL)\"",
"\"<< (T_SL)\"","\">> (T_SR)\"","'+'","'-'","'.'","'*'","'/'","'%'","'!'","\"instanceof (T_INSTANCEOF)\"",
"'~'","\"++ (T_INC)\"","\"-- (T_DEC)\"","\"(int) (T_INT_CAST)\"","\"(double) (T_DOUBLE_CAST)\"",
"\"(string) (T_STRING_CAST)\"","\"(array) (T_ARRAY_CAST)\"","\"(object) (T_OBJECT_CAST)\"",
"\"(bool) (T_BOOL_CAST)\"","\"(unset) (T_UNSET_CAST)\"","'@'","'['","\"new (T_NEW)\"",
"\"clone (T_CLONE)\"","\"exit (T_EXIT)\"","\"if (T_IF)\"","\"elseif (T_ELSEIF)\"",
"\"else (T_ELSE)\"","\"endif (T_ENDIF)\"","\"integer number (T_LNUMBER)\"","\"floating-point number (T_DNUMBER)\"",
"\"identifier (T_STRING)\"","\"variable name (T_STRING_VARNAME)\"","\"variable (T_VARIABLE)\"",
"\"number (T_NUM_STRING)\"","T_INLINE_HTML","T_CHARACTER","T_BAD_CHARACTER",
"\"quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)\"","\"quoted-string (T_CONSTANT_ENCAPSED_STRING)\"",
"\"echo (T_ECHO)\"","\"do (T_DO)\"","\"while (T_WHILE)\"","\"endwhile (T_ENDWHILE)\"",
"\"for (T_FOR)\"","\"endfor (T_ENDFOR)\"","\"foreach (T_FOREACH)\"","\"endforeach (T_ENDFOREACH)\"",
"\"declare (T_DECLARE)\"","\"enddeclare (T_ENDDECLARE)\"","\"as (T_AS)\"","\"switch (T_SWITCH)\"",
"\"endswitch (T_ENDSWITCH)\"","\"case (T_CASE)\"","\"default (T_DEFAULT)\"",
"\"break (T_BREAK)\"","\"continue (T_CONTINUE)\"","\"goto (T_GOTO)\"","\"function (T_FUNCTION)\"",
"\"const (T_CONST)\"","\"return (T_RETURN)\"","\"try (T_TRY)\"","\"catch (T_CATCH)\"",
"\"throw (T_THROW)\"","\"use (T_USE)\"","\"insteadof (T_INSTEADOF)\"","\"global (T_GLOBAL)\"",
"\"static (T_STATIC)\"","\"abstract (T_ABSTRACT)\"","\"final (T_FINAL)\"","\"private (T_PRIVATE)\"",
"\"protected (T_PROTECTED)\"","\"public (T_PUBLIC)\"","\"var (T_VAR)\"","\"unset (T_UNSET)\"",
"\"isset (T_ISSET)\"","\"empty (T_EMPTY)\"","\"__halt_compiler (T_HALT_COMPILER)\"",
"\"class (T_CLASS)\"","\"trait (T_TRAIT)\"","\"interface (T_INTERFACE)\"","\"extends (T_EXTENDS)\"",
"\"implements (T_IMPLEMENTS)\"","\"-> (T_OBJECT_OPERATOR)\"","\"=> (T_DOUBLE_ARROW)\"",
"\"list (T_LIST)\"","\"array (T_ARRAY)\"","\"callable (T_CALLABLE)\"","\"__CLASS__ (T_CLASS_C)\"",
"\"__TRAIT__ (T_TRAIT_C)\"","\"__METHOD__ (T_METHOD_C)\"","\"__FUNCTION__ (T_FUNC_C)\"",
"\"__LINE__ (T_LINE)\"","\"__FILE__ (T_FILE)\"","\"comment (T_COMMENT)\"","\"doc comment (T_DOC_COMMENT)\"",
"\"open tag (T_OPEN_TAG)\"","\"open tag with echo (T_OPEN_TAG_WITH_ECHO)\"",
"\"close tag (T_CLOSE_TAG)\"","\"whitespace (T_WHITESPACE)\"","\"heredoc start (T_START_HEREDOC)\"",
"\"heredoc end (T_END_HEREDOC)\"","\"${ (T_DOLLAR_OPEN_CURLY_BRACES)\"","\"{$ (T_CURLY_OPEN)\"",
"\":: (T_PAAMAYIM_NEKUDOTAYIM)\"","\"namespace (T_NAMESPACE)\"","\"__NAMESPACE__ (T_NS_C)\"",
"\"__DIR__ (T_DIR)\"","\"define (T_DEFINE)\"","\"\\\\ (T_NS_SEPARATOR)\"","'('",
"')'","';'","'{'","'}'","'$'","']'","'`'","'\\\"'","start","top_statement_list",
"namespace_name","top_statement","@1","@2","@3","use_declarations","use_declaration",
"constant_declaration","inner_statement_list","inner_statement","statement",
"unticked_statement","@4","additional_catches","non_empty_additional_catches",
"additional_catch","unset_variables","unset_variable","function_declaration_statement",
"class_declaration_statement","is_reference","unticked_function_declaration_statement",
"@5","@6","@7","unticked_class_declaration_statement","@8","@9","class_entry_type",
"extends_from","interface_entry","interface_extends_list","implements_list",
"interface_list","foreach_optional_arg","foreach_variable","for_statement","foreach_statement",
"declare_statement","declare_list","switch_case_list","case_list","case_separator",
"while_statement","elseif_list","new_elseif_list","else_single","new_else_single",
"parameter_list","non_empty_parameter_list","optional_class_type","function_call_parameter_list",
"non_empty_function_call_parameter_list","global_var_list","global_var","static_var_list",
"class_statement_list","class_statement","@10","@11","trait_use_statement","trait_list",
"trait_adaptations","trait_adaptation_list","non_empty_trait_adaptation_list",
"trait_adaptation_statement","trait_precedence","trait_reference_list","trait_method_reference",
"trait_method_reference_fully_qualified","trait_alias","trait_modifiers","method_body",
"@12","variable_modifiers","method_modifiers","non_empty_member_modifiers","member_modifier",
"class_variable_declaration","class_constant_declaration","echo_expr_list","for_expr",
"non_empty_for_expr","expr_without_variable","@13","@14","yield_expr","function",
"lexical_vars","lexical_var_list","function_call","class_name","fully_qualified_class_name",
"class_name_reference","dynamic_class_name_reference","dynamic_class_name_variable_properties",
"dynamic_class_name_variable_property","parenthesis_expr","exit_expr","backticks_expr",
"ctor_arguments","common_scalar","static_scalar","static_class_constant","scalar",
"static_array_pair_list","possible_comma","non_empty_static_array_pair_list",
"expr","r_variable","w_variable","rw_variable","variable","variable_properties",
"variable_property","array_method_dereference","method","method_or_not","variable_without_objects",
"static_member","variable_class_name","array_function_dereference","base_variable_with_function_calls",
"base_variable","reference_variable","compound_variable","dim_offset","object_property",
"object_dim_list","variable_name","simple_indirect_reference","assignment_list",
"assignment_list_element","array_pair_list","non_empty_array_pair_list","encaps_list",
"encaps_var","encaps_var_offset","internal_functions_in_yacc","isset_variables",
"class_constant", NULL
};
#endif

static const short yyr1[] = {     0,
   161,   162,   162,   163,   163,   164,   165,   164,   164,   164,
   164,   164,   166,   164,   167,   164,   164,   164,   164,   168,
   168,   169,   169,   169,   169,   170,   170,   171,   171,   172,
   172,   172,   172,   173,   173,   174,   174,   174,   174,   174,
   174,   174,   174,   174,   174,   174,   174,   174,   174,   174,
   174,   174,   174,   174,   174,   174,   174,   174,   174,   174,
   175,   174,   174,   174,   176,   176,   177,   177,   178,   179,
   179,   180,   181,   182,   183,   183,   185,   186,   187,   184,
   189,   188,   190,   188,   191,   191,   191,   191,   192,   192,
   193,   194,   194,   195,   195,   196,   196,   197,   197,   198,
   198,   199,   199,   200,   200,   201,   201,   202,   202,   203,
   203,   203,   203,   204,   204,   204,   205,   205,   206,   206,
   207,   207,   208,   208,   209,   209,   210,   210,   211,   211,
   212,   212,   212,   212,   212,   212,   212,   212,   213,   213,
   213,   213,   214,   214,   214,   215,   215,   215,   215,   215,
   215,   216,   216,   217,   217,   217,   218,   218,   218,   218,
   219,   219,   220,   220,   220,   221,   222,   220,   223,   224,
   224,   225,   225,   226,   226,   227,   227,   228,   228,   229,
   230,   230,   231,   231,   232,   233,   233,   234,   234,   235,
   236,   235,   237,   237,   238,   238,   239,   239,   240,   240,
   240,   240,   240,   240,   241,   241,   241,   241,   242,   242,
   243,   243,   244,   244,   245,   245,   246,   246,   246,   246,
   246,   246,   246,   246,   246,   246,   246,   246,   246,   246,
   246,   246,   246,   246,   246,   246,   246,   246,   246,   246,
   246,   246,   246,   246,   246,   246,   246,   246,   246,   246,
   246,   246,   246,   246,   246,   246,   246,   246,   246,   246,
   246,   246,   246,   246,   246,   246,   246,   246,   246,   246,
   246,   246,   246,   246,   246,   246,   246,   246,   246,   246,
   246,   246,   246,   246,   246,   247,   246,   248,   246,   249,
   249,   249,   249,   250,   251,   251,   252,   252,   252,   252,
   253,   253,   253,   253,   253,   253,   253,   253,   254,   254,
   254,   254,   255,   255,   255,   256,   256,   257,   257,   258,
   258,   259,   260,   260,   261,   261,   261,   262,   262,   262,
   263,   263,   264,   264,   264,   264,   264,   264,   264,   264,
   264,   264,   264,   264,   264,   265,   265,   265,   265,   265,
   265,   265,   265,   265,   266,   267,   267,   267,   267,   267,
   267,   267,   267,   268,   268,   269,   269,   270,   270,   270,
   270,   271,   271,   272,   273,   274,   275,   275,   276,   276,
   277,   278,   278,   279,   280,   280,   280,   281,   281,   282,
   282,   283,   284,   284,   285,   285,   285,   286,   286,   286,
   287,   287,   287,   288,   288,   289,   289,   290,   290,   291,
   291,   291,   292,   292,   293,   293,   294,   294,   295,   295,
   295,   296,   296,   297,   297,   297,   297,   297,   297,   297,
   297,   298,   298,   298,   298,   299,   299,   299,   299,   299,
   299,   300,   300,   300,   301,   301,   301,   301,   301,   301,
   301,   302,   302,   303,   303
};

static const short yyr2[] = {     0,
     1,     2,     0,     1,     3,     1,     0,     4,     1,     1,
     4,     3,     0,     6,     0,     5,     3,     2,     1,     3,
     1,     1,     3,     2,     4,     5,     4,     2,     0,     1,
     1,     1,     4,     1,     2,     3,     5,     8,     5,     5,
     9,     3,     2,     3,     2,     3,     2,     3,     3,     2,
     3,     3,     3,     1,     2,     5,     8,     8,     5,     1,
     0,    14,     3,     3,     1,     0,     1,     2,     8,     1,
     3,     1,     1,     1,     0,     1,     0,     0,     0,    12,
     0,     8,     0,     7,     1,     2,     1,     2,     0,     2,
     1,     0,     2,     0,     2,     1,     3,     0,     2,     1,
     2,     1,     4,     1,     4,     1,     4,     3,     5,     3,
     4,     4,     5,     0,     5,     4,     1,     1,     1,     4,
     0,     4,     0,     5,     0,     2,     0,     3,     1,     0,
     2,     3,     5,     4,     4,     5,     7,     6,     0,     1,
     1,     1,     1,     1,     0,     1,     1,     2,     3,     3,
     4,     3,     1,     1,     2,     4,     3,     5,     1,     3,
     2,     0,     3,     2,     1,     0,     0,    10,     3,     1,
     3,     1,     3,     0,     1,     1,     2,     2,     2,     3,
     1,     3,     1,     1,     3,     4,     3,     0,     1,     1,
     0,     4,     1,     1,     0,     1,     1,     2,     1,     1,
     1,     1,     1,     1,     3,     5,     1,     3,     5,     4,
     3,     1,     0,     1,     3,     1,     6,     3,     4,     6,
     3,     2,     3,     3,     3,     3,     3,     3,     3,     3,
     3,     3,     3,     2,     2,     2,     2,     3,     3,     3,
     3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
     3,     3,     3,     2,     2,     2,     2,     3,     3,     3,
     3,     3,     3,     3,     3,     3,     1,     5,     4,     1,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     1,
     4,     3,     3,     2,     1,     0,    10,     0,    11,     1,
     2,     4,     4,     1,     0,     4,     3,     4,     1,     2,
     4,     6,     5,     6,     6,     6,     6,     4,     1,     1,
     3,     2,     1,     3,     2,     1,     1,     4,     1,     2,
     0,     2,     3,     3,     0,     2,     1,     0,     1,     1,
     0,     3,     1,     1,     1,     1,     1,     1,     1,     1,
     1,     1,     1,     3,     2,     1,     1,     3,     2,     2,
     2,     4,     3,     1,     3,     1,     1,     1,     3,     2,
     1,     3,     3,     0,     2,     0,     1,     5,     3,     3,
     1,     1,     1,     1,     1,     1,     5,     1,     2,     0,
     3,     4,     4,     3,     1,     1,     0,     1,     2,     3,
     3,     1,     4,     4,     1,     1,     1,     1,     2,     1,
     4,     4,     1,     1,     4,     0,     1,     1,     1,     4,
     4,     1,     1,     3,     1,     2,     3,     1,     1,     4,
     0,     0,     2,     5,     3,     3,     1,     6,     4,     4,
     2,     2,     2,     1,     2,     1,     4,     3,     3,     6,
     3,     1,     1,     1,     4,     4,     2,     2,     4,     2,
     2,     1,     3,     3,     3
};

static const short yydefact[] = {     3,
     0,    19,     0,     0,     0,     0,     0,     0,   285,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   422,     0,     0,   325,     0,   333,   334,
     4,   356,   404,    54,   335,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,    77,     0,     0,     0,     0,
     0,     0,   309,     0,     0,     0,     0,     0,     0,    85,
    87,    91,     0,     0,   339,   340,   341,   342,   336,   337,
     0,     0,   343,   338,     0,     0,     0,    60,    29,   415,
   328,     0,   358,     2,     0,     6,    34,     9,    10,    73,
    74,     0,     0,   373,     0,    75,   397,     0,   267,   361,
   280,     0,   372,     0,   374,     0,   400,     0,   396,   378,
   395,   398,   403,     0,   270,   357,   285,     4,   294,   309,
     0,   447,   448,     0,   450,   451,   284,     0,   374,   254,
   255,   256,   257,   309,     0,     0,   310,     0,   235,   376,
     0,   237,   271,   272,   273,   274,   275,   276,   277,   279,
     0,   427,     0,   366,     0,     0,   310,   316,   331,   317,
     0,   319,   398,     0,   222,     0,   327,   278,     0,    35,
     0,   212,     0,     0,   213,     0,     0,     0,    43,     0,
    45,     0,     0,    75,     0,    47,   373,     0,   374,    29,
     0,     0,    22,     0,    21,   154,     0,     0,   153,   159,
     0,    75,    86,    88,     0,     0,     0,     0,   421,   422,
   436,     0,   345,     0,     0,     0,   434,     0,    15,     0,
     7,   360,     0,     0,     0,     0,   329,     0,   330,     0,
     0,     0,   145,     0,    18,    81,    83,    50,    76,     0,
   406,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,    55,   234,
   236,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   145,     0,   406,     0,   406,     0,   416,
   399,     0,     0,     0,   312,     0,     0,   431,   375,     0,
   282,   367,   423,     0,   312,     0,   145,   221,     0,     0,
   399,   326,    29,   121,     0,    53,     0,     0,     0,   214,
   216,   373,   374,     0,     0,   114,   114,    42,    44,    46,
    64,     0,     0,    48,    49,     0,    63,    24,     0,     0,
    17,     0,   155,   374,     0,    51,     0,     0,    52,     0,
     0,    70,    72,   452,     0,     0,     0,     0,   419,     0,
   418,     0,     0,     0,   344,   435,   356,     0,     0,   433,
   363,   432,   359,     3,    12,    13,     0,   145,   324,   323,
     0,    36,    28,    30,    31,    32,     0,   283,   362,     5,
     0,     0,   143,   373,   144,   374,     0,    89,    92,   286,
   407,     0,   454,     0,   390,   388,     0,     0,   240,   242,
   241,     0,     0,   238,   239,   243,   245,   244,   260,   261,
   258,   259,   262,   263,   264,   265,   252,   253,   247,   248,
   246,   249,   250,   251,   266,     0,   218,   223,   224,   225,
   226,   227,   228,   229,   230,   231,   232,   233,     0,   455,
   391,     0,     0,   413,   409,   387,   408,   412,     0,     0,
   449,   373,   374,   311,     0,   426,     0,   425,   311,   390,
     0,   391,   321,   123,   125,   211,     0,     0,   213,     0,
     0,     0,     0,     0,     0,   114,     0,   114,     0,    78,
     0,     0,   364,     0,     0,     0,     0,   347,     0,   346,
    27,   354,     0,     0,    23,    20,     0,   152,   160,   157,
   288,     0,     0,     0,   445,   446,    11,   421,   421,     0,
   281,   442,   444,   443,     0,   438,     0,   439,   441,   145,
     0,     3,     8,     0,     0,   405,   148,   301,     0,     0,
     0,    94,     0,     0,   139,   394,     0,   145,   145,   389,
   269,     0,     0,   219,   308,   145,   145,   393,   145,   386,
   385,   380,   406,     0,   401,   402,   430,   429,     0,   332,
   318,   127,     0,     0,    37,    40,    29,   119,    39,     0,
   215,    98,     0,    98,   100,   108,     0,    29,   106,    59,
     0,     0,     0,     0,     0,   110,     0,   350,   351,   371,
     0,   366,   364,     0,     0,   349,     0,     0,    25,   156,
     0,   139,    71,    56,   453,     0,   417,     0,   437,     0,
     0,    16,     0,   303,     0,     0,   373,   374,    26,     0,
     0,   313,    90,     0,     0,    93,    96,   162,   140,   141,
     0,   129,     0,   142,   414,     0,     0,   268,   331,     0,
     0,     0,   406,   406,   377,     0,     0,     0,   424,     0,
   320,     0,     0,     0,     0,   126,     0,   213,     0,     0,
   101,     0,     0,     0,     0,   112,     0,   117,   118,    29,
   111,   139,     0,   353,   367,   365,     0,   348,   355,     0,
   158,     0,   420,   217,     0,   302,    14,    33,   151,     0,
   315,    95,   162,     0,   195,   295,   139,     0,   131,   305,
   304,   220,   307,   306,   384,     0,     0,     0,   379,   410,
   411,   428,   322,     0,    29,     0,   122,     0,     0,    99,
     0,     0,   109,     0,   113,    29,   116,     0,   370,   369,
   352,     0,   295,   440,   314,   195,    97,     0,     0,   202,
   203,   204,   201,   200,   199,   194,    84,   161,   165,     0,
     0,   193,   197,     0,     0,     0,     0,   132,     0,   382,
   383,   387,    29,   128,    38,   120,     0,    29,   104,    58,
    57,   107,   115,     0,     0,    61,     0,    82,     0,     0,
   170,   207,     0,   166,   198,     0,   164,     0,    29,     0,
   135,     0,   134,   381,   124,    29,   102,    41,     0,    79,
   368,     0,    29,     0,     0,   172,   174,   169,     0,     0,
   163,    75,     0,     0,   299,     0,     0,   136,     0,   133,
     0,     0,    29,     0,     0,   210,   171,     4,     0,   175,
   176,     0,     0,   184,     0,     0,   208,   205,     0,     0,
   300,     0,   296,   287,     0,   138,     0,   105,     0,    29,
   289,   173,   177,   178,   188,     0,   179,     0,     0,   167,
   209,     0,   297,   137,   103,    80,     0,     0,   187,   180,
   181,   185,   206,     0,   298,    66,   186,     0,   139,     0,
    62,    65,    67,   182,     0,     0,    68,     0,     0,   190,
   191,   168,     0,    29,     0,     0,    29,   192,     0,    69,
     0,     0,     0
};

static const short yydefgoto[] = {   911,
     1,    83,    84,   377,   532,   374,   194,   195,    85,   225,
   383,   384,    87,   812,   891,   892,   893,   351,   352,   385,
   386,   240,    90,   184,   597,   833,    91,   398,   399,    92,
   542,    93,   544,   635,   636,   670,   584,   808,   780,   590,
   325,   328,   487,   680,   579,   475,   572,   575,   664,   641,
   642,   643,   392,   393,   198,   199,   201,   705,   758,   822,
   884,   759,   790,   818,   839,   840,   841,   842,   880,   843,
   844,   845,   878,   902,   904,   760,   761,   762,   763,   793,
   764,   171,   319,   320,    94,   545,   612,    95,    96,   766,
   826,    97,    98,   644,   159,   160,   571,   661,    99,   168,
   228,   308,   100,   600,   502,   101,   601,   303,   602,   102,
   103,   298,   104,   105,   655,   719,   560,   561,   562,   106,
   107,   108,   109,   110,   111,   112,   113,   402,   456,   457,
   458,   114,   360,   361,   153,   154,   216,   217,   525,   115,
   355,   116
};

static const short yypact[] = {-32768,
  1524,-32768,  6212,  6212,   -92,  6212,  6212,  6212,  6212,  6212,
  6212,  6212,  6212,   346,   346,  6212,  6212,  6212,  6212,  6212,
  6212,  6212,  6212,  4603,   377,  6212,   -85,   -74,-32768,-32768,
    53,-32768,-32768,-32768,-32768,  6212,  4471,   -67,   -64,   -55,
   -16,   -74,  4735,  4867,    72,    59,   149,  4999,    77,  6212,
   -38,    49,   -28,   115,   124,    94,    96,    98,   104,-32768,
-32768,-32768,   106,   110,-32768,-32768,-32768,-32768,-32768,-32768,
   316,   -25,-32768,-32768,   113,   220,  6344,-32768,-32768,   151,
   139,   362,   -56,-32768,    19,-32768,-32768,-32768,-32768,-32768,
-32768,   235,   247,-32768,   171,   295,   323,   207,-32768,-32768,
-32768,  6910,-32768,   290,  1696,   237,-32768,   249,   334,   275,
-32768,   -32,-32768,    60,-32768,-32768,-32768,-32768,-32768,   302,
   254,  7404,  7404,  6212,  7404,  7404,  1826,  7205,  1188,-32768,
-32768,   357,-32768,-32768,   262,   220,   -77,   274,-32768,-32768,
   277,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
   346,  7247,   272,   424,   284,   220,   293,   301,   289,-32768,
   303,   338,   -34,    60,-32768,  5131,-32768,-32768,  3711,-32768,
    23,  7404,   397,  6212,  6212,  6212,   409,    29,-32768,  6952,
-32768,  6994,   331,   295,   474,-32768,   342,  7404,   345,-32768,
  7036,   220,   160,    25,-32768,-32768,   281,    32,-32768,   486,
    33,   295,-32768,-32768,   346,   346,   346,   349,   337,  4603,
   -27,   313,-32768,  6476,   346,   329,-32768,   220,-32768,   230,
-32768,   186,   369,  7078,  1970,  6212,   -29,   352,   368,   -29,
   234,   435,  5263,   450,-32768,-32768,-32768,-32768,-32768,   373,
  6212,    71,  6212,  6212,  6212,  5420,  6212,  6212,  6212,  6212,
  6212,  6212,  6212,  6212,  6212,  6212,  6212,  6212,  6212,  6212,
  6212,  6212,  6212,  6212,  6212,  6212,  6212,   377,-32768,-32768,
-32768,  5552,  6212,  6212,  6212,  6212,  6212,  6212,  6212,  6212,
  6212,  6212,  6212,  5263,   143,  6212,   161,  6212,  6212,   151,
   -12,  7120,  6212,   220,    78,   161,   161,-32768,-32768,  5684,
-32768,  5816,-32768,   220,   293,    66,  5263,-32768,    66,   161,
   -30,-32768,-32768,-32768,  6212,-32768,   -74,  7162,   376,   532,
  7404,   452,  1139,   533,    43,   396,   401,-32768,-32768,-32768,
-32768,   483,  1348,-32768,-32768,  2102,-32768,   185,   491,   -38,
-32768,  6212,-32768,-32768,    49,-32768,  1348,   490,-32768,   418,
    44,-32768,-32768,-32768,    45,   421,   426,   423,-32768,    46,
-32768,   430,   164,   514,-32768,-32768,   529,  6610,   439,-32768,
-32768,-32768,   195,-32768,-32768,-32768,   443,  5263,-32768,-32768,
   447,-32768,-32768,-32768,-32768,-32768,  6652,-32768,-32768,-32768,
   346,   449,   591,    47,-32768,    85,   586,   480,   482,-32768,
  7404,   451,   454,  6212,   458,   -30,   459,    60,  7445,  7483,
  1826,  6212,  7348,  7528,  7549,  4653,  4785,  4915,  5047,  5047,
  5047,  5047,  1065,  1065,  1065,  1065,   605,   605,   530,   530,
   530,   357,   357,   357,-32768,   267,  1826,  1826,  1826,  1826,
  1826,  1826,  1826,  1826,  1826,  1826,  1826,  1826,   455,   454,
   461,   463,   460,-32768,-32768,   464,    30,-32768,   465,  6694,
-32768,   181,  1232,   206,   346,  7404,   346,  7306,   293,-32768,
   466,-32768,-32768,  3554,   347,  7404,   468,  3868,  6212,  6212,
   346,   198,  1348,   551,  4025,-32768,   279,-32768,    -9,-32768,
  1348,  1348,  1348,   475,   144,   478,   220,   -69,   484,-32768,
-32768,-32768,   522,   558,-32768,-32768,  6738,-32768,-32768,   617,
-32768,   346,   479,   346,-32768,-32768,-32768,   337,   337,   621,
-32768,-32768,-32768,-32768,   485,-32768,  6212,-32768,-32768,  5263,
  1681,-32768,-32768,   488,   493,-32768,-32768,-32768,  5948,  1348,
   170,   534,   170,   505,   278,-32768,  6780,  5263,  5263,   -30,
  7506,  6212,   377,-32768,-32768,  5263,  5263,-32768,  5263,   575,
   598,-32768,  6212,  6212,-32768,-32768,-32768,-32768,  6080,-32768,
   537,   358,   -74,  4471,-32768,-32768,-32768,-32768,-32768,   509,
  7404,   538,   346,   538,-32768,-32768,   651,-32768,-32768,-32768,
   420,   516,  6212,    48,   146,-32768,   520,-32768,-32768,   547,
   519,   665,  1348,   535,   220,    61,   606,   531,-32768,-32768,
  1348,   278,-32768,-32768,-32768,    55,-32768,  6212,-32768,   121,
   528,-32768,  1838,-32768,   540,   346,    56,  1048,-32768,   536,
   220,   293,-32768,   170,   527,   675,-32768,-32768,-32768,-32768,
   539,   676,    16,-32768,-32768,   542,   543,  7506,   289,   546,
   548,   549,  6212,  6212,   563,   550,  6822,   346,  7404,   161,
-32768,   -74,   661,   630,  4471,-32768,  2234,  6212,   198,   552,
-32768,   553,  1348,  2366,   556,-32768,  6868,-32768,-32768,-32768,
-32768,   278,  1348,-32768,  1348,-32768,   560,    74,-32768,   170,
-32768,   562,-32768,  1826,   561,-32768,-32768,-32768,-32768,   220,
   293,   675,-32768,   170,   448,   585,   201,   629,   694,-32768,
-32768,-32768,-32768,-32768,-32768,   566,   567,   161,-32768,-32768,
-32768,-32768,-32768,   683,-32768,   564,-32768,   572,   576,-32768,
  4182,  4182,-32768,   574,-32768,-32768,  3554,   577,-32768,   590,
-32768,   645,   585,-32768,   293,   698,-32768,   658,   170,-32768,
-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,   657,
   302,   719,-32768,    35,   584,   583,    17,   725,  1348,-32768,
-32768,   464,-32768,  3554,-32768,-32768,  4339,-32768,-32768,-32768,
-32768,-32768,  3554,   587,  1348,-32768,   588,-32768,   726,    21,
-32768,   731,    36,-32768,-32768,   693,-32768,   180,-32768,   681,
   753,  1348,-32768,-32768,  3554,-32768,-32768,-32768,  2498,-32768,
-32768,   616,-32768,  1348,   170,-32768,   176,-32768,  1348,   695,
-32768,   295,   757,   699,-32768,    57,  2630,   758,  1348,-32768,
  2762,   622,-32768,   620,  2894,-32768,-32768,   686,   624,   176,
-32768,   627,   690,   679,   633,   637,-32768,   775,   729,  1348,
-32768,   182,-32768,-32768,  1348,-32768,   652,-32768,  3026,-32768,
-32768,-32768,-32768,-32768,   684,   170,-32768,   743,  1348,-32768,
-32768,   739,-32768,-32768,-32768,-32768,  3158,   744,   747,   812,
-32768,-32768,-32768,   670,-32768,   720,-32768,   170,   278,   673,
-32768,   720,-32768,-32768,   674,   170,-32768,   285,   759,-32768,
-32768,-32768,   682,-32768,   685,  3290,-32768,-32768,  3422,-32768,
   837,   838,-32768
};

static const short yypgoto[] = {-32768,
  -351,   -14,-32768,-32768,-32768,-32768,-32768,   502,-32768,  -185,
-32768,     2,-32768,-32768,-32768,-32768,   -49,-32768,   332,    11,
    12,  -182,-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,
-32768,-32768,-32768,-32768,   211,   263,   177,-32768,   116,-32768,
-32768,-32768,  -306,   172,-32768,-32768,-32768,-32768,-32768,  -593,
-32768,   150,  -244,-32768,-32768,   506,-32768,   147,-32768,-32768,
-32768,-32768,-32768,-32768,-32768,-32768,    13,-32768,-32768,-32768,
-32768,-32768,-32768,-32768,-32768,-32768,-32768,-32768,  -736,-32768,
-32768,-32768,  -465,-32768,   414,-32768,-32768,   -39,   -47,   117,
-32768,-32768,    54,  -516,  -250,-32768,-32768,-32768,   -20,-32768,
-32768,   209,   704,   555,-32768,-32768,   256,   259,-32768,   741,
   666,  -348,   456,   884,-32768,-32768,-32768,-32768,    90,  -226,
-32768,   934,-32768,-32768,    -1,   -15,-32768,  -271,  -301,-32768,
   169,   -21,   348,   350,   654,-32768,   394,   355,-32768,-32768,
-32768,-32768
};


#define	YYLAST		7600


static const short yytable[] = {   137,
   137,   332,    86,   164,   336,   202,   167,   169,   473,   163,
   157,    88,    89,   580,   453,   405,   459,   435,   692,   350,
   489,   178,   531,   162,   633,   795,   637,   234,   288,   815,
   288,   315,   288,   340,   118,   363,   193,   223,   173,   449,
   345,   348,   537,   796,   820,   211,   200,   118,   708,   800,
   288,   484,   512,   514,   519,  -146,   326,   220,   451,   124,
   455,   222,   471,   519,  -149,   852,   166,   138,   138,   405,
   451,   119,   202,   232,   233,   678,  -310,    77,   158,   470,
   170,   232,   472,   455,   174,   593,   594,   175,   738,  -310,
   709,   801,   563,  -147,   232,   233,   176,   364,   291,   272,
   273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
   283,  -392,   192,  -392,   214,   215,   567,   637,   568,  -388,
   289,   295,   289,   196,   289,   218,   223,   474,   879,   219,
   243,   244,   245,   534,    33,   177,   137,  -376,  -376,  -389,
    33,   305,   289,   403,   183,    33,   596,   246,   311,   247,
   248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
   258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
   314,   268,   235,   742,   816,   817,   316,   338,   341,   591,
   623,   595,   137,   327,   564,   346,   349,   747,   797,   821,
   137,   137,   137,   395,   137,   485,   513,   515,   520,  -146,
   137,   679,   729,   373,   138,   197,  -312,   693,  -149,   853,
  -294,   232,   824,   211,   872,   450,   290,    33,   227,  -311,
   408,   185,    80,   604,   232,   404,   406,    80,   232,   378,
   583,   190,   791,   454,   203,    33,   522,  -147,   523,   524,
   593,   594,   118,   204,   395,   205,   164,   206,   838,   207,
   138,   339,   163,   157,   825,   208,   873,   209,   138,   138,
   138,   210,   138,   408,   221,   408,   162,   395,   138,   406,
   118,   406,    33,   118,   408,   408,   504,   699,   695,   464,
   406,   406,   214,   215,   408,   621,   213,   408,   408,   469,
   406,   656,   118,   406,   406,   895,   477,   404,   837,    80,
   846,   681,   649,   646,   647,   226,   134,   236,   211,   722,
   232,   650,   651,   370,   652,   404,   630,    80,   498,   237,
   631,   158,   630,   846,   238,   193,   631,   239,   639,   640,
   553,  -312,   498,  -292,  -292,   232,   232,   378,   395,   118,
  -311,    33,   270,   271,   135,   232,   530,   630,   136,   881,
   118,   631,   242,   118,    80,    33,   232,   530,   723,   272,
   273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
   283,   894,   592,   593,   594,   134,   137,   214,   215,   899,
   232,   716,   717,   375,   376,   241,   499,   211,   284,   134,
   211,   667,   550,   389,   285,   212,   286,  -376,  -376,   287,
   499,   119,   674,   211,   218,   639,   640,   268,   370,   118,
   407,    33,   294,   135,   573,   574,   772,   136,   118,   296,
    33,   137,   297,    80,   630,   662,   663,   135,   631,   301,
  -130,   136,   302,   455,   304,   342,   211,    80,   900,   901,
   307,   230,   211,   232,   138,   134,   306,   370,   309,   118,
   137,    33,   137,   452,   134,   365,   214,   215,   213,   214,
   215,   187,   310,   358,   407,   452,   137,   137,   498,   139,
   142,   371,   214,   215,   229,   231,   498,   498,   498,   578,
   317,   324,   606,   135,   331,   134,   589,   136,   333,   138,
   395,   455,   135,    80,   737,   334,   136,   137,   335,   137,
   347,   357,    80,   137,   137,   214,   215,   390,   395,   395,
   388,   214,   215,   675,   593,   594,   395,   395,   138,   395,
   138,   379,   397,   155,   400,   498,   632,   156,   632,   479,
   632,   164,    86,    80,   138,   138,   499,   163,   157,   774,
   480,    88,    89,   481,   499,   499,   499,   483,   748,   486,
   783,   162,   665,   749,   488,   490,   750,   751,   752,   753,
   754,   755,   756,   505,   510,   138,   366,   138,   137,   511,
   372,   138,   138,   516,   518,   666,   265,   266,   267,   517,
   268,   366,   521,   372,   366,   372,   526,   805,   498,   322,
   688,   527,   809,   499,   529,   533,   498,   632,   535,   539,
   540,   538,   541,   757,   543,  -413,   158,   555,   546,   548,
   549,   137,   556,   827,   557,   559,   701,   558,   570,   632,
   831,   576,   565,   587,    86,   608,   603,   835,   605,   607,
   609,   611,   614,    88,    89,   618,   138,   653,   408,   849,
   624,   724,   619,   137,   406,   625,   394,   859,   262,   263,
   264,   265,   266,   267,   137,   268,   499,   634,   498,   638,
   654,   660,   668,   669,   499,   673,   727,   632,   498,   676,
   498,   682,   683,   685,   877,   632,   684,   365,   689,   138,
   696,   703,   690,   704,   707,   745,   700,   718,   725,   632,
   765,   706,   632,   698,   710,   711,   408,   394,   713,   726,
   714,   715,   406,   768,   731,   732,   462,   720,   769,   735,
   773,   138,   741,   794,   743,   785,   744,   775,   906,   786,
   394,   909,   138,   770,   771,   776,   499,   782,   777,   784,
   789,   792,   779,   779,   632,   798,   499,   799,   499,   802,
   814,   810,   813,   122,   123,   819,   125,   126,   127,   128,
   130,   131,   132,   133,   498,   828,   143,   144,   145,   146,
   147,   148,   149,   150,   152,   823,   165,   829,   834,   848,
   498,   850,   855,   851,   860,   858,   172,  -183,   807,   862,
   864,   865,   868,   180,   182,   866,   867,   498,   188,   869,
   191,   394,   750,   751,   752,   753,   754,   755,   748,   498,
   632,   870,   632,   749,   498,   875,   750,   751,   752,   753,
   754,   755,   756,   885,   498,   882,   887,   224,  -196,  -189,
   888,   889,   499,   890,   896,   632,   898,   750,   751,   752,
   753,   754,   755,   903,   905,   498,   912,   913,   499,   907,
   498,   506,   897,   613,   702,   730,   672,   781,   736,   746,
   508,   632,   863,   788,   498,   499,   767,   712,   687,   787,
   686,   804,   343,   362,   292,   616,     0,   499,   617,     0,
     0,     0,   499,   632,   632,     0,     0,     0,     0,     0,
     0,   632,   499,     0,     0,     0,     0,   501,     0,     0,
     0,     0,   129,     0,     0,     0,     0,   140,   140,     0,
     0,   509,     0,   499,     0,     0,   224,     0,   499,     0,
     0,     0,     0,     0,   318,   321,   188,     0,     0,     0,
     0,     0,   499,     0,     0,     0,     0,     0,     0,     0,
     0,   189,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   394,     0,     0,     0,   141,   141,     0,
   152,     0,   627,     0,   368,     0,     0,     0,   161,     0,
     0,   394,   394,     0,     0,     0,   387,     0,     0,   394,
   394,     0,   394,   188,     0,     0,     0,     0,     0,     0,
     0,   401,     0,   409,   410,   411,   413,   414,   415,   416,
   417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
   427,   428,   429,   430,   431,   432,   433,   434,     0,     0,
     0,     0,   437,   438,   439,   440,   441,   442,   443,   444,
   445,   446,   447,   448,   188,     0,   401,     0,   401,   460,
     0,     0,     0,   188,   299,     0,   500,   586,     0,     0,
   466,     0,   468,     0,     0,   598,   599,   188,     0,     0,
   500,     0,     0,     0,     0,   476,  -150,     0,     0,   323,
     0,     0,   272,   273,   274,   275,   276,   277,   278,   279,
   280,   281,   282,   283,     0,     0,     0,     0,     0,     0,
   344,     0,   507,     0,   141,     0,     0,     0,   353,   354,
   356,     0,   359,     0,   629,     0,     0,     0,   369,     0,
  -376,  -376,-32768,-32768,-32768,-32768,   260,   261,   262,   263,
   264,   265,   266,   267,     0,   268,   396,     0,   188,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   141,     0,     0,     0,     0,     0,     0,     0,   141,   141,
   141,     0,   141,     0,   547,     0,     0,     0,   141,     0,
     0,     0,   551,   272,   273,   274,   275,   276,   277,   278,
   279,   280,   281,   282,   283,   691,     0,   396,     0,     0,
     0,     0,     0,     0,     0,     0,   463,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   500,     0,     0,     0,
   396,  -376,  -376,     0,   500,   500,   500,     0,     0,     0,
  -150,   161,   272,   273,   274,   275,   276,   277,   278,   279,
   280,   281,   282,   283,     0,     0,     0,     0,     0,   321,
   581,     0,     0,     0,     0,     0,     0,   733,     0,     0,
   482,     0,     0,     0,     0,     0,     0,   739,     0,   740,
  -376,  -376,     0,   500,     0,     0,   272,   273,   274,   275,
   276,   277,   278,   279,   280,   281,   282,   283,     0,     0,
     0,   396,     0,     0,     0,     0,     0,   620,     0,     0,
   188,     0,     0,     0,   299,     0,     0,     0,     0,   188,
     0,     0,     0,     0,  -376,  -376,     0,     0,   188,   188,
     0,     0,   648,     0,     0,     0,   188,   188,     0,   188,
     0,     0,     0,   401,   657,     0,   500,     0,     0,   659,
     0,     0,     0,     0,   500,     0,     0,     0,     0,   554,
     0,     0,     0,   803,   141,     0,     0,     0,     0,     0,
     0,     0,     0,   677,     0,     0,     0,     0,     0,   811,
  -291,  -291,     0,     0,     0,     0,     0,     0,   299,     0,
   299,     0,     0,     0,     0,     0,   830,     0,   694,     0,
     0,     0,     0,     0,   582,   585,     0,     0,   836,   141,
     0,     0,     0,   847,     0,     0,   500,     0,     0,     0,
     0,     0,     0,   856,  -293,  -293,   500,     0,   500,     0,
     0,   491,   492,   401,   401,   353,     0,   615,   141,     0,
   141,   359,   359,     0,   871,     0,     0,     0,   321,   874,
   493,     0,     0,   396,   141,   141,     0,     0,    29,    30,
   118,     0,   628,   883,     0,     0,     0,     0,    35,     0,
     0,   396,   396,     0,     0,     0,     0,     0,     0,   396,
   396,     0,   396,     0,     0,   141,     0,   141,     0,     0,
     0,   141,   141,     0,     0,     0,   134,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   671,     0,     0,     0,
     0,     0,   500,     0,     0,   494,     0,    65,    66,    67,
    68,    69,    70,     0,     0,     0,   161,     0,   500,   495,
     0,     0,     0,     0,   496,    73,    74,     0,   497,     0,
     0,     0,     0,     0,     0,   500,     0,     0,     0,   299,
     0,     0,     0,     0,     0,     0,   141,   500,     0,     0,
     0,     0,   500,    -1,     2,     0,     0,     3,     4,     5,
     6,     7,   500,     0,     0,     0,     8,     9,     0,     0,
     0,   299,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   585,   500,     0,     0,     0,     0,   500,   141,
     0,     0,     0,     0,     0,     0,     0,    10,    11,     0,
     0,     0,   500,    12,     0,    13,    14,    15,    16,    17,
    18,    19,    20,    21,    22,    23,    24,    25,    26,    27,
    28,   141,     0,     0,    29,    30,    31,    32,    33,     0,
    34,     0,   141,     0,    35,    36,    37,    38,     0,    39,
     0,    40,     0,    41,     0,     0,    42,     0,     0,     0,
    43,    44,    45,    46,    47,    48,    49,     0,    50,    51,
     0,    52,    53,    54,    55,     0,     0,     0,     0,    56,
    57,    58,    59,    60,    61,    62,     0,     0,     0,     0,
    63,    64,     0,    65,    66,    67,    68,    69,    70,     0,
     0,     0,     0,     0,     0,    71,     0,     0,     0,     0,
    72,    73,    74,    75,    76,    77,     0,    78,    79,     0,
    80,     2,    81,    82,     3,     4,     5,     6,     7,     0,
     0,     0,     0,     8,     9,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
   282,   283,     0,     0,    10,    11,     0,     0,     0,     0,
    12,     0,    13,    14,    15,    16,    17,    18,    19,    20,
    21,    22,    23,    24,    25,    26,    27,    28,  -376,  -376,
     0,    29,    30,    31,    32,    33,     0,    34,     0,     0,
     0,    35,    36,    37,    38,     0,    39,     0,    40,     0,
    41,     0,     0,    42,     0,     0,     0,    43,    44,    45,
    46,    47,    48,    49,     0,    50,    51,     0,    52,    53,
    54,    55,     0,     0,     0,     0,    56,    57,    58,    59,
    60,    61,    62,     0,     0,     0,     0,    63,    64,     0,
    65,    66,    67,    68,    69,    70,     0,     0,     0,     0,
     0,     0,    71,     0,     0,     0,     0,    72,    73,    74,
    75,    76,    77,     0,    78,    79,   622,    80,     2,    81,
    82,     3,     4,     5,     6,     7,     0,     0,     0,     0,
     8,     9,   246,     0,   247,   248,   249,   250,   251,   252,
   253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
   263,   264,   265,   266,   267,     0,   268,     0,     0,     0,
     0,    10,    11,     0,     0,     0,     0,    12,     0,    13,
    14,    15,    16,    17,    18,    19,    20,    21,    22,    23,
    24,    25,    26,    27,    28,     0,     0,     0,    29,    30,
    31,    32,    33,     0,    34,     0,     0,     0,    35,    36,
    37,    38,     0,    39,     0,    40,     0,    41,     0,     0,
    42,     0,     0,     0,    43,    44,    45,    46,    47,    48,
    49,     0,    50,    51,     0,    52,    53,    54,    55,     0,
     0,     0,     0,    56,    57,    58,    59,    60,    61,    62,
     0,     0,     0,     0,    63,    64,     0,    65,    66,    67,
    68,    69,    70,     3,     4,     5,     6,     7,     0,    71,
     0,     0,     8,     9,    72,    73,    74,    75,    76,    77,
     0,    78,    79,   697,    80,     0,    81,    82,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,    10,    11,     0,     0,     0,     0,    12,
     0,    13,    14,    15,    16,    17,    18,    19,    20,    21,
    22,    23,    24,    25,    26,    27,    28,     0,     0,     0,
    29,    30,    31,    32,    33,     0,    34,     0,     0,     0,
    35,    36,    37,    38,     0,    39,     0,    40,     0,    41,
     0,     0,    42,     0,     0,     0,    43,    44,    45,    46,
     0,    48,    49,     0,    50,     0,     0,    52,    53,    54,
    55,     0,     0,     0,     0,    56,    57,    58,   381,    60,
    61,    62,     0,     0,     0,     0,    63,    64,     0,    65,
    66,    67,    68,    69,    70,     3,     4,     5,     6,     7,
     0,    71,     0,     0,     8,     9,   121,    73,    74,     0,
    76,    77,     0,    78,    79,   382,    80,     0,    81,    82,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,    10,    11,     0,     0,     0,
     0,    12,     0,    13,    14,    15,    16,    17,    18,    19,
    20,    21,    22,    23,    24,    25,    26,    27,    28,     0,
     0,     0,    29,    30,    31,    32,    33,     0,    34,     0,
     0,     0,    35,    36,    37,    38,     0,    39,     0,    40,
     0,    41,     0,     0,    42,     0,     0,     0,    43,    44,
    45,    46,     0,    48,    49,     0,    50,     0,     0,    52,
    53,    54,    55,     0,     0,     0,     0,    56,    57,    58,
   381,    60,    61,    62,     0,     0,     0,     0,    63,    64,
     0,    65,    66,    67,    68,    69,    70,     3,     4,     5,
     6,     7,     0,    71,     0,     0,     8,     9,   121,    73,
    74,     0,    76,    77,     0,    78,    79,   503,    80,     0,
    81,    82,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,    10,    11,     0,
     0,     0,     0,    12,     0,    13,    14,    15,    16,    17,
    18,    19,    20,    21,    22,    23,    24,    25,    26,    27,
    28,     0,     0,     0,    29,    30,    31,    32,    33,     0,
    34,     0,     0,     0,    35,    36,    37,    38,   728,    39,
     0,    40,     0,    41,     0,     0,    42,     0,     0,     0,
    43,    44,    45,    46,     0,    48,    49,     0,    50,     0,
     0,    52,    53,    54,    55,     0,     0,     0,     0,    56,
    57,    58,   381,    60,    61,    62,     0,     0,     0,     0,
    63,    64,     0,    65,    66,    67,    68,    69,    70,     3,
     4,     5,     6,     7,     0,    71,     0,     0,     8,     9,
   121,    73,    74,     0,    76,    77,     0,    78,    79,     0,
    80,     0,    81,    82,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,    10,
    11,     0,     0,     0,     0,    12,     0,    13,    14,    15,
    16,    17,    18,    19,    20,    21,    22,    23,    24,    25,
    26,    27,    28,     0,     0,     0,    29,    30,    31,    32,
    33,     0,    34,     0,     0,     0,    35,    36,    37,    38,
     0,    39,     0,    40,     0,    41,   734,     0,    42,     0,
     0,     0,    43,    44,    45,    46,     0,    48,    49,     0,
    50,     0,     0,    52,    53,    54,    55,     0,     0,     0,
     0,    56,    57,    58,   381,    60,    61,    62,     0,     0,
     0,     0,    63,    64,     0,    65,    66,    67,    68,    69,
    70,     3,     4,     5,     6,     7,     0,    71,     0,     0,
     8,     9,   121,    73,    74,     0,    76,    77,     0,    78,
    79,     0,    80,     0,    81,    82,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,    10,    11,     0,     0,     0,     0,    12,     0,    13,
    14,    15,    16,    17,    18,    19,    20,    21,    22,    23,
    24,    25,    26,    27,    28,     0,     0,     0,    29,    30,
    31,    32,    33,     0,    34,     0,     0,     0,    35,    36,
    37,    38,     0,    39,     0,    40,   832,    41,     0,     0,
    42,     0,     0,     0,    43,    44,    45,    46,     0,    48,
    49,     0,    50,     0,     0,    52,    53,    54,    55,     0,
     0,     0,     0,    56,    57,    58,   381,    60,    61,    62,
     0,     0,     0,     0,    63,    64,     0,    65,    66,    67,
    68,    69,    70,     3,     4,     5,     6,     7,     0,    71,
     0,     0,     8,     9,   121,    73,    74,     0,    76,    77,
     0,    78,    79,     0,    80,     0,    81,    82,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,    10,    11,     0,     0,     0,     0,    12,
     0,    13,    14,    15,    16,    17,    18,    19,    20,    21,
    22,    23,    24,    25,    26,    27,    28,     0,     0,     0,
    29,    30,    31,    32,    33,     0,    34,     0,     0,     0,
    35,    36,    37,    38,     0,    39,     0,    40,     0,    41,
     0,     0,    42,     0,     0,     0,    43,    44,    45,    46,
     0,    48,    49,     0,    50,     0,     0,    52,    53,    54,
    55,     0,     0,     0,     0,    56,    57,    58,   381,    60,
    61,    62,     0,     0,     0,     0,    63,    64,     0,    65,
    66,    67,    68,    69,    70,     3,     4,     5,     6,     7,
     0,    71,     0,     0,     8,     9,   121,    73,    74,     0,
    76,    77,     0,    78,    79,   854,    80,     0,    81,    82,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,    10,    11,     0,     0,     0,
     0,    12,     0,    13,    14,    15,    16,    17,    18,    19,
    20,    21,    22,    23,    24,    25,    26,    27,    28,     0,
     0,     0,    29,    30,    31,    32,    33,     0,    34,     0,
     0,     0,    35,    36,    37,    38,     0,    39,   857,    40,
     0,    41,     0,     0,    42,     0,     0,     0,    43,    44,
    45,    46,     0,    48,    49,     0,    50,     0,     0,    52,
    53,    54,    55,     0,     0,     0,     0,    56,    57,    58,
   381,    60,    61,    62,     0,     0,     0,     0,    63,    64,
     0,    65,    66,    67,    68,    69,    70,     3,     4,     5,
     6,     7,     0,    71,     0,     0,     8,     9,   121,    73,
    74,     0,    76,    77,     0,    78,    79,     0,    80,     0,
    81,    82,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,    10,    11,     0,
     0,     0,     0,    12,     0,    13,    14,    15,    16,    17,
    18,    19,    20,    21,    22,    23,    24,    25,    26,    27,
    28,     0,     0,     0,    29,    30,    31,    32,    33,     0,
    34,     0,     0,     0,    35,    36,    37,    38,     0,    39,
     0,    40,     0,    41,     0,     0,    42,     0,     0,     0,
    43,    44,    45,    46,     0,    48,    49,     0,    50,     0,
     0,    52,    53,    54,    55,     0,     0,     0,     0,    56,
    57,    58,   381,    60,    61,    62,     0,     0,     0,     0,
    63,    64,     0,    65,    66,    67,    68,    69,    70,     3,
     4,     5,     6,     7,     0,    71,     0,     0,     8,     9,
   121,    73,    74,     0,    76,    77,     0,    78,    79,   861,
    80,     0,    81,    82,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,    10,
    11,     0,     0,     0,     0,    12,     0,    13,    14,    15,
    16,    17,    18,    19,    20,    21,    22,    23,    24,    25,
    26,    27,    28,     0,     0,     0,    29,    30,    31,    32,
    33,     0,    34,     0,     0,     0,    35,    36,    37,    38,
     0,    39,     0,    40,     0,    41,     0,     0,    42,     0,
     0,     0,    43,    44,    45,    46,     0,    48,    49,     0,
    50,     0,     0,    52,    53,    54,    55,     0,     0,     0,
     0,    56,    57,    58,   381,    60,    61,    62,     0,     0,
     0,     0,    63,    64,     0,    65,    66,    67,    68,    69,
    70,     3,     4,     5,     6,     7,     0,    71,     0,     0,
     8,     9,   121,    73,    74,     0,    76,    77,     0,    78,
    79,   876,    80,     0,    81,    82,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,    10,    11,     0,     0,     0,     0,    12,     0,    13,
    14,    15,    16,    17,    18,    19,    20,    21,    22,    23,
    24,    25,    26,    27,    28,     0,     0,     0,    29,    30,
    31,    32,    33,     0,    34,     0,     0,     0,    35,    36,
    37,    38,     0,    39,     0,    40,     0,    41,     0,     0,
    42,     0,     0,     0,    43,    44,    45,    46,     0,    48,
    49,     0,    50,     0,     0,    52,    53,    54,    55,     0,
     0,     0,     0,    56,    57,    58,   381,    60,    61,    62,
     0,     0,     0,     0,    63,    64,     0,    65,    66,    67,
    68,    69,    70,     3,     4,     5,     6,     7,     0,    71,
     0,     0,     8,     9,   121,    73,    74,     0,    76,    77,
     0,    78,    79,   886,    80,     0,    81,    82,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,    10,    11,     0,     0,     0,     0,    12,
     0,    13,    14,    15,    16,    17,    18,    19,    20,    21,
    22,    23,    24,    25,    26,    27,    28,     0,     0,     0,
    29,    30,    31,    32,    33,     0,    34,     0,     0,     0,
    35,    36,    37,    38,     0,    39,     0,    40,     0,    41,
     0,     0,    42,     0,     0,     0,    43,    44,    45,    46,
     0,    48,    49,     0,    50,     0,     0,    52,    53,    54,
    55,     0,     0,     0,     0,    56,    57,    58,   381,    60,
    61,    62,     0,     0,     0,     0,    63,    64,     0,    65,
    66,    67,    68,    69,    70,     3,     4,     5,     6,     7,
     0,    71,     0,     0,     8,     9,   121,    73,    74,     0,
    76,    77,     0,    78,    79,   908,    80,     0,    81,    82,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,    10,    11,     0,     0,     0,
     0,    12,     0,    13,    14,    15,    16,    17,    18,    19,
    20,    21,    22,    23,    24,    25,    26,    27,    28,     0,
     0,     0,    29,    30,    31,    32,    33,     0,    34,     0,
     0,     0,    35,    36,    37,    38,     0,    39,     0,    40,
     0,    41,     0,     0,    42,     0,     0,     0,    43,    44,
    45,    46,     0,    48,    49,     0,    50,     0,     0,    52,
    53,    54,    55,     0,     0,     0,     0,    56,    57,    58,
   381,    60,    61,    62,     0,     0,     0,     0,    63,    64,
     0,    65,    66,    67,    68,    69,    70,     3,     4,     5,
     6,     7,     0,    71,     0,     0,     8,     9,   121,    73,
    74,     0,    76,    77,     0,    78,    79,   910,    80,     0,
    81,    82,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,    10,    11,     0,
     0,     0,     0,    12,     0,    13,    14,    15,    16,    17,
    18,    19,    20,    21,    22,    23,    24,    25,    26,    27,
    28,     0,     0,     0,    29,    30,    31,    32,    33,     0,
    34,     0,     0,     0,    35,    36,    37,    38,     0,    39,
     0,    40,     0,    41,     0,     0,    42,     0,     0,     0,
    43,    44,    45,    46,     0,    48,    49,     0,    50,     0,
     0,    52,    53,    54,    55,     0,     0,     0,     0,    56,
    57,    58,   381,    60,    61,    62,     0,     0,     0,     0,
    63,    64,     0,    65,    66,    67,    68,    69,    70,     0,
     0,     0,     0,     0,     0,    71,     0,     0,     0,     0,
   121,    73,    74,     0,    76,    77,     0,    78,    79,     0,
    80,     0,    81,    82,     3,     4,     5,     6,     7,     0,
     0,     0,     0,     8,     9,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   313,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,    10,    11,     0,     0,     0,     0,
    12,     0,    13,    14,    15,    16,    17,    18,    19,    20,
    21,    22,    23,    24,    25,    26,    27,    28,     0,     0,
     0,    29,    30,    31,    32,    33,     0,    34,     0,     0,
     0,    35,    36,    37,    38,     0,    39,     0,    40,     0,
    41,     0,     0,    42,     0,     0,     0,    43,    44,    45,
   119,     0,    48,    49,     0,    50,     0,     0,    52,    53,
     0,     0,     0,     0,     0,     0,    56,    57,    58,     0,
     0,     0,     0,     0,     0,     0,     0,    63,    64,     0,
    65,    66,    67,    68,    69,    70,     0,     0,     0,     0,
     0,     0,    71,     0,     0,     0,     0,   121,    73,    74,
     0,    76,    77,     0,    78,    79,     0,    80,     0,    81,
    82,     3,     4,     5,     6,     7,     0,     0,     0,     0,
     8,     9,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   577,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,    10,    11,     0,     0,     0,     0,    12,     0,    13,
    14,    15,    16,    17,    18,    19,    20,    21,    22,    23,
    24,    25,    26,    27,    28,     0,     0,     0,    29,    30,
    31,    32,    33,     0,    34,     0,     0,     0,    35,    36,
    37,    38,     0,    39,     0,    40,     0,    41,     0,     0,
    42,     0,     0,     0,    43,    44,    45,   119,     0,    48,
    49,     0,    50,     0,     0,    52,    53,     0,     0,     0,
     0,     0,     0,    56,    57,    58,     0,     0,     0,     0,
     0,     0,     0,     0,    63,    64,     0,    65,    66,    67,
    68,    69,    70,     0,     0,     0,     0,     0,     0,    71,
     0,     0,     0,     0,   121,    73,    74,     0,    76,    77,
     0,    78,    79,     0,    80,     0,    81,    82,     3,     4,
     5,     6,     7,     0,     0,     0,     0,     8,     9,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   588,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,    10,    11,
     0,     0,     0,     0,    12,     0,    13,    14,    15,    16,
    17,    18,    19,    20,    21,    22,    23,    24,    25,    26,
    27,    28,     0,     0,     0,    29,    30,    31,    32,    33,
     0,    34,     0,     0,     0,    35,    36,    37,    38,     0,
    39,     0,    40,     0,    41,     0,     0,    42,     0,     0,
     0,    43,    44,    45,   119,     0,    48,    49,     0,    50,
     0,     0,    52,    53,     0,     0,     0,     0,     0,     0,
    56,    57,    58,     0,     0,     0,     0,     0,     0,     0,
     0,    63,    64,     0,    65,    66,    67,    68,    69,    70,
     0,     0,     0,     0,     0,     0,    71,     0,     0,     0,
     0,   121,    73,    74,     0,    76,    77,     0,    78,    79,
     0,    80,     0,    81,    82,     3,     4,     5,     6,     7,
     0,     0,     0,     0,     8,     9,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   778,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,    10,    11,     0,     0,     0,
     0,    12,     0,    13,    14,    15,    16,    17,    18,    19,
    20,    21,    22,    23,    24,    25,    26,    27,    28,     0,
     0,     0,    29,    30,    31,    32,    33,     0,    34,     0,
     0,     0,    35,    36,    37,    38,     0,    39,     0,    40,
     0,    41,     0,     0,    42,     0,     0,     0,    43,    44,
    45,   119,     0,    48,    49,     0,    50,     0,     0,    52,
    53,     0,     0,     0,     0,     0,     0,    56,    57,    58,
     0,     0,     0,     0,     0,     0,     0,     0,    63,    64,
     0,    65,    66,    67,    68,    69,    70,     0,     0,     0,
     0,     0,     0,    71,     0,     0,     0,     0,   121,    73,
    74,     0,    76,    77,     0,    78,    79,     0,    80,     0,
    81,    82,     3,     4,     5,     6,     7,     0,     0,     0,
     0,     8,     9,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   806,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,    10,    11,     0,     0,     0,     0,    12,     0,
    13,    14,    15,    16,    17,    18,    19,    20,    21,    22,
    23,    24,    25,    26,    27,    28,     0,     0,     0,    29,
    30,    31,    32,    33,     0,    34,     0,     0,     0,    35,
    36,    37,    38,     0,    39,     0,    40,     0,    41,     0,
     0,    42,     0,     0,     0,    43,    44,    45,   119,     0,
    48,    49,     0,    50,     0,     0,    52,    53,     0,     0,
     0,     0,     0,     0,    56,    57,    58,     0,     0,     0,
     0,     0,     0,     0,     0,    63,    64,     0,    65,    66,
    67,    68,    69,    70,     3,     4,     5,     6,     7,     0,
    71,     0,     0,     8,     9,   121,    73,    74,     0,    76,
    77,     0,    78,    79,     0,    80,     0,    81,    82,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,    10,    11,     0,     0,     0,     0,
    12,     0,    13,    14,    15,    16,    17,    18,    19,    20,
    21,    22,    23,    24,    25,    26,    27,    28,     0,     0,
     0,    29,    30,    31,    32,    33,     0,    34,     0,     0,
     0,    35,    36,    37,    38,     0,    39,     0,    40,     0,
    41,     0,     0,    42,     0,     0,     0,    43,    44,    45,
   119,     0,    48,    49,     0,    50,     0,     0,    52,    53,
     0,     0,     0,     0,     0,     0,    56,    57,    58,     0,
     0,     0,     0,     0,     0,     0,     0,    63,    64,     0,
    65,    66,    67,    68,    69,    70,     3,     4,     5,     6,
     7,     0,    71,     0,     0,     8,   117,   121,    73,    74,
     0,    76,    77,     0,    78,    79,     0,    80,     0,    81,
    82,     0,     0,     0,     0,   151,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,    10,    11,     0,     0,
     0,     0,    12,     0,    13,    14,    15,    16,    17,    18,
    19,    20,    21,    22,    23,    24,    25,    26,    27,     0,
     0,     0,     0,    29,    30,   118,    32,    33,     0,     0,
     0,     0,     0,    35,   250,   251,   252,   253,   254,   255,
   256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
   266,   267,   119,   268,     0,     0,     0,     0,     0,     0,
     0,   120,     0,     0,     0,     0,     0,     0,     0,    57,
    58,     0,     0,     0,     0,     0,     0,     0,     0,    63,
    64,     0,    65,    66,    67,    68,    69,    70,     3,     4,
     5,     6,     7,     0,    71,     0,     0,     8,   117,   121,
    73,    74,     0,    76,    77,     0,     0,     0,     0,    80,
     0,    81,    82,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,    10,    11,
     0,     0,     0,     0,    12,     0,    13,    14,    15,    16,
    17,    18,    19,    20,    21,    22,    23,    24,    25,    26,
    27,     0,     0,     0,     0,    29,    30,   118,    32,    33,
     0,     0,     0,     0,     0,    35,     0,   251,   252,   253,
   254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
   264,   265,   266,   267,   119,   268,     0,     0,     0,     0,
     0,     0,     0,   120,     0,     0,     0,     0,     0,     0,
     0,    57,    58,     0,     0,     0,     0,     0,     0,     0,
     0,    63,    64,     0,    65,    66,    67,    68,    69,    70,
     3,     4,     5,     6,     7,     0,    71,     0,     0,     8,
   117,   121,    73,    74,     0,    76,    77,     0,   179,     0,
     0,    80,     0,    81,    82,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    10,    11,     0,     0,     0,     0,    12,     0,    13,    14,
    15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
    25,    26,    27,     0,     0,     0,     0,    29,    30,   118,
    32,    33,     0,     0,     0,     0,     0,    35,   252,   253,
   254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
   264,   265,   266,   267,     0,   268,   119,     0,     0,     0,
     0,     0,     0,     0,     0,   120,     0,     0,     0,     0,
     0,     0,     0,    57,    58,     0,     0,     0,     0,     0,
     0,     0,     0,    63,    64,     0,    65,    66,    67,    68,
    69,    70,     3,     4,     5,     6,     7,     0,    71,     0,
     0,     8,   117,   121,    73,    74,     0,    76,    77,     0,
   181,     0,     0,    80,     0,    81,    82,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,    10,    11,     0,     0,     0,     0,    12,     0,
    13,    14,    15,    16,    17,    18,    19,    20,    21,    22,
    23,    24,    25,    26,    27,     0,     0,     0,     0,    29,
    30,   118,    32,    33,     0,     0,     0,     0,     0,    35,
-32768,-32768,-32768,-32768,   256,   257,   258,   259,   260,   261,
   262,   263,   264,   265,   266,   267,     0,   268,   119,     0,
     0,     0,     0,     0,     0,     0,     0,   120,     0,     0,
     0,     0,     0,     0,     0,    57,    58,     0,     0,     0,
     0,     0,     0,     0,     0,    63,    64,     0,    65,    66,
    67,    68,    69,    70,     3,     4,     5,     6,     7,     0,
    71,     0,     0,     8,     9,   121,    73,    74,     0,    76,
    77,     0,   186,     0,     0,    80,     0,    81,    82,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,    10,    11,     0,     0,     0,     0,
    12,     0,    13,    14,    15,    16,    17,    18,    19,    20,
    21,    22,    23,    24,    25,    26,    27,     0,     0,     0,
     0,    29,    30,   118,    32,    33,     0,     0,     0,     0,
     0,    35,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   119,     0,     0,     0,     0,     0,     0,     0,     0,   120,
     0,     0,     0,     0,     0,     0,     0,    57,    58,     0,
     0,     0,     0,     0,     0,     0,     0,    63,    64,     0,
    65,    66,    67,    68,    69,    70,     3,     4,     5,     6,
     7,     0,    71,     0,     0,     8,     9,   121,    73,    74,
     0,    76,    77,   312,     0,     0,     0,    80,     0,    81,
    82,     0,     0,     0,     0,   391,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,    10,    11,     0,     0,
     0,     0,    12,     0,    13,    14,    15,    16,    17,    18,
    19,    20,    21,    22,    23,    24,    25,    26,    27,     0,
     0,     0,     0,    29,    30,   118,    32,    33,     0,     0,
     0,     0,     0,    35,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   119,     0,     0,     0,     0,     0,     0,     0,
     0,   120,     0,     0,     0,     0,     0,     0,     0,    57,
    58,     0,     0,     0,     0,     0,     0,     0,     0,    63,
    64,     0,    65,    66,    67,    68,    69,    70,     0,     0,
     0,     0,     0,     0,    71,     0,     0,     0,     0,   121,
    73,    74,     0,    76,    77,     0,     0,     0,     0,    80,
     0,    81,    82,     3,     4,     5,     6,     7,     0,     0,
     0,     0,     8,   117,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   412,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,    10,    11,     0,     0,     0,     0,    12,
     0,    13,    14,    15,    16,    17,    18,    19,    20,    21,
    22,    23,    24,    25,    26,    27,     0,     0,     0,     0,
    29,    30,   118,    32,    33,     0,     0,     0,     0,     0,
    35,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   119,
     0,     0,     0,     0,     0,     0,     0,     0,   120,     0,
     0,     0,     0,     0,     0,     0,    57,    58,     0,     0,
     0,     0,     0,     0,     0,     0,    63,    64,     0,    65,
    66,    67,    68,    69,    70,     3,     4,     5,     6,     7,
     0,    71,     0,     0,     8,   117,   121,    73,    74,     0,
    76,    77,     0,     0,     0,     0,    80,     0,    81,    82,
     0,     0,     0,     0,   436,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,    10,    11,     0,     0,     0,
     0,    12,     0,    13,    14,    15,    16,    17,    18,    19,
    20,    21,    22,    23,    24,    25,    26,    27,     0,     0,
     0,     0,    29,    30,   118,    32,    33,     0,     0,     0,
     0,     0,    35,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   119,     0,     0,     0,     0,     0,     0,     0,     0,
   120,     0,     0,     0,     0,     0,     0,     0,    57,    58,
     0,     0,     0,     0,     0,     0,     0,     0,    63,    64,
     0,    65,    66,    67,    68,    69,    70,     3,     4,     5,
     6,     7,     0,    71,     0,     0,     8,   117,   121,    73,
    74,     0,    76,    77,     0,     0,     0,     0,    80,     0,
    81,    82,     0,     0,     0,     0,   465,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,    10,    11,     0,
     0,     0,     0,    12,     0,    13,    14,    15,    16,    17,
    18,    19,    20,    21,    22,    23,    24,    25,    26,    27,
     0,     0,     0,     0,    29,    30,   118,    32,    33,     0,
     0,     0,     0,     0,    35,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   119,     0,     0,     0,     0,     0,     0,
     0,     0,   120,     0,     0,     0,     0,     0,     0,     0,
    57,    58,     0,     0,     0,     0,     0,     0,     0,     0,
    63,    64,     0,    65,    66,    67,    68,    69,    70,     3,
     4,     5,     6,     7,     0,    71,     0,     0,     8,   117,
   121,    73,    74,     0,    76,    77,     0,     0,     0,     0,
    80,     0,    81,    82,     0,     0,     0,     0,   467,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,    10,
    11,     0,     0,     0,     0,    12,     0,    13,    14,    15,
    16,    17,    18,    19,    20,    21,    22,    23,    24,    25,
    26,    27,     0,     0,     0,     0,    29,    30,   118,    32,
    33,     0,     0,     0,     0,     0,    35,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   119,     0,     0,     0,     0,
     0,     0,     0,     0,   120,     0,     0,     0,     0,     0,
     0,     0,    57,    58,     0,     0,     0,     0,     0,     0,
     0,     0,    63,    64,     0,    65,    66,    67,    68,    69,
    70,     3,     4,     5,     6,     7,     0,    71,     0,     0,
     8,   117,   121,    73,    74,     0,    76,    77,     0,     0,
     0,     0,    80,     0,    81,    82,     0,     0,     0,     0,
   626,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,    10,    11,     0,     0,     0,     0,    12,     0,    13,
    14,    15,    16,    17,    18,    19,    20,    21,    22,    23,
    24,    25,    26,    27,     0,     0,     0,     0,    29,    30,
   118,    32,    33,     0,     0,     0,     0,     0,    35,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   119,     0,     0,
     0,     0,     0,     0,     0,     0,   120,     0,     0,     0,
     0,     0,     0,     0,    57,    58,     0,     0,     0,     0,
     0,     0,     0,     0,    63,    64,     0,    65,    66,    67,
    68,    69,    70,     3,     4,     5,     6,     7,     0,    71,
     0,     0,     8,   117,   121,    73,    74,     0,    76,    77,
     0,     0,     0,     0,    80,     0,    81,    82,     0,     0,
     0,     0,   658,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,    10,    11,     0,     0,     0,     0,    12,
     0,    13,    14,    15,    16,    17,    18,    19,    20,    21,
    22,    23,    24,    25,    26,    27,     0,     0,     0,     0,
    29,    30,   118,    32,    33,     0,     0,     0,     0,     0,
    35,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   119,
     0,     0,     0,     0,     0,     0,     0,     0,   120,     0,
     0,     0,     0,     0,     0,     0,    57,    58,     0,     0,
     0,     0,     0,     0,     0,     0,    63,    64,     0,    65,
    66,    67,    68,    69,    70,     3,     4,     5,     6,     7,
     0,    71,     0,     0,     8,   117,   121,    73,    74,     0,
    76,    77,     0,     0,     0,     0,    80,     0,    81,    82,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,    10,    11,     0,     0,     0,
     0,    12,     0,    13,    14,    15,    16,    17,    18,    19,
    20,    21,    22,    23,    24,    25,    26,    27,     0,     0,
     0,     0,    29,    30,   118,    32,    33,     0,     0,     0,
     0,     0,    35,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   119,     0,     0,     0,     0,     0,     0,     0,     0,
   120,     0,     0,     0,     0,     0,     0,     0,    57,    58,
     0,     0,     0,     0,     0,     0,     0,     0,    63,    64,
     0,    65,    66,    67,    68,    69,    70,     3,     4,     5,
     6,     7,     0,    71,     0,     0,     8,     9,   121,    73,
    74,     0,    76,    77,     0,     0,     0,     0,    80,     0,
    81,    82,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,    10,    11,     0,
     0,     0,     0,    12,     0,    13,    14,    15,    16,    17,
    18,    19,    20,    21,    22,    23,    24,    25,    26,    27,
     0,     0,     0,     0,    29,    30,   118,    32,    33,     0,
     0,     0,     0,     0,    35,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   119,     0,     0,     0,     0,     0,     0,
     0,     0,   120,     0,     0,     0,     0,     0,     0,     0,
    57,    58,     0,     0,     0,     0,     0,     0,     0,     0,
    63,    64,     0,    65,    66,    67,    68,    69,    70,     3,
     4,     5,     6,     7,     0,    71,     0,     0,     8,   117,
   121,    73,    74,     0,    76,    77,     0,     0,     0,     0,
    80,     0,    81,    82,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,    10,
    11,     0,     0,     0,     0,    12,     0,    13,    14,    15,
    16,    17,    18,    19,    20,    21,    22,    23,    24,    25,
    26,    27,     0,     0,     0,     0,    29,    30,   118,   367,
    33,     0,     0,     0,     0,     0,    35,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   119,     0,     0,     0,     0,
     0,     0,     0,     0,   120,     0,     0,     0,     0,     0,
     0,     0,    57,    58,     0,     0,     0,     0,     0,     0,
     0,     0,    63,    64,     0,    65,    66,    67,    68,    69,
    70,     0,     0,     0,     0,     0,     0,    71,     0,   243,
   244,   245,   121,    73,    74,     0,    76,    77,     0,     0,
     0,     0,    80,     0,    81,    82,   246,     0,   247,   248,
   249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
   259,   260,   261,   262,   263,   264,   265,   266,   267,     0,
   268,   243,   244,   245,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   246,     0,
   247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
   257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
   267,     0,   268,   243,   244,   245,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   246,     0,   247,   248,   249,   250,   251,   252,   253,   254,
   255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
   265,   266,   267,     0,   268,     0,     0,   243,   244,   245,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   246,   528,   247,   248,   249,   250,
   251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
   261,   262,   263,   264,   265,   266,   267,     0,   268,   243,
   244,   245,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   246,   536,   247,   248,
   249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
   259,   260,   261,   262,   263,   264,   265,   266,   267,     0,
   268,   243,   244,   245,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   246,   566,
   247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
   257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
   267,     0,   268,     0,     0,     0,     0,   243,   244,   245,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   610,   246,   678,   247,   248,   249,   250,
   251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
   261,   262,   263,   264,   265,   266,   267,     0,   268,   243,
   244,   245,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,   645,   246,     0,   247,   248,
   249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
   259,   260,   261,   262,   263,   264,   265,   266,   267,     0,
   268,   243,   244,   245,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,   721,   246,     0,
   247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
   257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
   267,     0,   268,   243,   244,   245,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   246,   679,   247,   248,   249,   250,   251,   252,   253,   254,
   255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
   265,   266,   267,     0,   268,   243,   244,   245,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   246,   269,   247,   248,   249,   250,   251,   252,
   253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
   263,   264,   265,   266,   267,     0,   268,   243,   244,   245,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   246,   329,   247,   248,   249,   250,
   251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
   261,   262,   263,   264,   265,   266,   267,     0,   268,   243,
   244,   245,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,   246,   330,   247,   248,
   249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
   259,   260,   261,   262,   263,   264,   265,   266,   267,     0,
   268,   243,   244,   245,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,   246,   337,
   247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
   257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
   267,     0,   268,     0,   243,   244,   245,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   380,   246,     0,   247,   248,   249,   250,   251,   252,   253,
   254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
   264,   265,   266,   267,     0,   268,   243,   244,   245,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   461,   246,     0,   247,   248,   249,   250,   251,
   252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
   262,   263,   264,   265,   266,   267,     0,   268,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,   478,   243,   244,   245,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   293,     0,   246,     0,   247,   248,   249,   250,   251,   252,
   253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
   263,   264,   265,   266,   267,     0,   268,   243,   244,   245,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   300,     0,   246,   552,   247,   248,   249,   250,
   251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
   261,   262,   263,   264,   265,   266,   267,     0,   268,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,   243,   244,   245,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   246,   569,   247,   248,   249,   250,   251,   252,   253,   254,
   255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
   265,   266,   267,     0,   268,   244,   245,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,   246,     0,   247,   248,   249,   250,   251,   252,   253,
   254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
   264,   265,   266,   267,   245,   268,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   246,
     0,   247,   248,   249,   250,   251,   252,   253,   254,   255,
   256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
   266,   267,     0,   268,   247,   248,   249,   250,   251,   252,
   253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
   263,   264,   265,   266,   267,     0,   268,   248,   249,   250,
   251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
   261,   262,   263,   264,   265,   266,   267,     0,   268,   249,
   250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
   260,   261,   262,   263,   264,   265,   266,   267,     0,   268
};

static const short yycheck[] = {    14,
    15,   184,     1,    25,   190,    53,    27,    28,   310,    25,
    25,     1,     1,   479,   286,   242,   288,   268,   612,   202,
   327,    42,   374,    25,   541,   762,   543,     9,    63,     9,
    63,     9,    63,     9,    73,    63,    51,    77,    37,   284,
     9,     9,   391,     9,     9,    75,    75,    73,    33,    33,
    63,     9,     9,     9,     9,     9,    28,    72,   285,   152,
   287,    76,   307,     9,     9,     9,   152,    14,    15,   296,
   297,   100,   120,   151,   152,    28,   146,   152,    25,   306,
    28,   151,   309,   310,   152,    95,    96,   152,   682,   146,
    75,    75,    63,     9,   151,   152,   152,   125,   114,    15,
    16,    17,    18,    19,    20,    21,    22,    23,    24,    25,
    26,   146,   151,   146,   144,   145,   465,   634,   467,   152,
   155,   136,   155,    75,   155,   151,   166,   313,   865,   155,
    10,    11,    12,   378,    75,   152,   151,    53,    54,   152,
    75,   156,   155,    73,    73,    75,   156,    27,   164,    29,
    30,    31,    32,    33,    34,    35,    36,    37,    38,    39,
    40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
   169,    51,   154,   690,   154,   155,   154,   192,   154,   486,
   532,   488,   197,   155,   155,   154,   154,   704,   154,   154,
   205,   206,   207,   233,   209,   153,   153,   153,   153,   153,
   215,   154,   668,   218,   151,   157,   146,   153,   153,   153,
   152,   151,    33,    75,    33,    73,   157,    75,    80,   146,
   242,    73,   157,    80,   151,   155,   242,   157,   151,   152,
    33,   155,   749,    73,   120,    75,    73,   153,    75,    76,
    95,    96,    73,   120,   284,   152,   268,   152,    73,   152,
   197,    92,   268,   268,    75,   152,    75,   152,   205,   206,
   207,   152,   209,   285,   152,   287,   268,   307,   215,   285,
    73,   287,    75,    73,   296,   297,    92,   626,   158,   294,
   296,   297,   144,   145,   306,   530,   143,   309,   310,   304,
   306,   563,    73,   309,   310,   889,   317,   155,   815,   157,
   817,   156,   553,   548,   549,   155,   109,    73,    75,   658,
   151,   556,   557,    80,   559,   155,   147,   157,   333,    73,
   151,   268,   147,   840,   154,   340,   151,    33,   128,   129,
    64,   146,   347,   153,   154,   151,   151,   152,   378,    73,
   146,    75,    53,    54,   147,   151,   152,   147,   151,   866,
    73,   151,   146,    73,   157,    75,   151,   152,   660,    15,
    16,    17,    18,    19,    20,    21,    22,    23,    24,    25,
    26,   888,    94,    95,    96,   109,   391,   144,   145,   896,
   151,   653,   654,   154,   155,    63,   333,    75,   152,   109,
    75,   577,   408,   160,   146,    80,    63,    53,    54,   125,
   347,   100,   588,    75,   151,   128,   129,    51,    80,    73,
   242,    75,   151,   147,    68,    69,   718,   151,    73,   146,
    75,   436,   146,   157,   147,    68,    69,   147,   151,   158,
   153,   151,     9,   660,   151,   155,    75,   157,   154,   155,
   152,    80,    75,   151,   391,   109,   146,    80,   146,    73,
   465,    75,   467,   285,   109,   143,   144,   145,   143,   144,
   145,    48,   125,   127,   296,   297,   481,   482,   483,    14,
    15,   143,   144,   145,    81,    82,   491,   492,   493,   478,
    84,    73,   497,   147,   154,   109,   485,   151,    15,   436,
   530,   718,   147,   157,   680,   154,   151,   512,   154,   514,
    15,   153,   157,   518,   519,   144,   145,    73,   548,   549,
   159,   144,   145,    94,    95,    96,   556,   557,   465,   559,
   467,   153,    73,   147,   152,   540,   541,   151,   543,   154,
   545,   553,   531,   157,   481,   482,   483,   553,   553,   725,
     9,   531,   531,    92,   491,   492,   493,    15,   101,   154,
   736,   553,   573,   106,   154,    73,   109,   110,   111,   112,
   113,   114,   115,    73,    75,   512,   212,   514,   583,   152,
   216,   518,   519,   153,   152,   574,    47,    48,    49,   154,
    51,   227,   153,   229,   230,   231,    73,   773,   603,   176,
   605,    63,   778,   540,   156,   153,   611,   612,   152,     9,
    15,   153,   123,   156,   123,   152,   553,   153,   158,   152,
   152,   626,   152,   799,   152,   152,   631,   158,   153,   634,
   806,   154,   158,    73,   623,   104,   152,   813,   151,   146,
    73,    15,   154,   623,   623,    15,   583,    63,   660,   822,
   153,   662,   158,   658,   660,   153,   233,   833,    44,    45,
    46,    47,    48,    49,   669,    51,   603,   124,   673,   155,
    63,   125,   154,   126,   611,    15,   665,   682,   683,   154,
   685,   152,   126,     9,   860,   690,   158,   143,    73,   626,
   153,   155,   152,     9,     9,   700,   151,   125,    28,   704,
   106,   153,   707,   154,   153,   153,   718,   284,   153,    70,
   153,   153,   718,    75,   153,   153,   293,   158,    15,   154,
    28,   658,   153,   761,   153,   126,   156,   154,   904,    75,
   307,   907,   669,   158,   158,   154,   673,   154,   153,   153,
    73,    75,   731,   732,   749,   152,   683,   155,   685,    15,
    15,   155,   155,     3,     4,    15,     6,     7,     8,     9,
    10,    11,    12,    13,   769,    75,    16,    17,    18,    19,
    20,    21,    22,    23,    24,    73,    26,    15,   153,    75,
   785,    15,    15,    75,   155,   154,    36,    92,   777,   156,
   154,    92,   146,    43,    44,   107,   154,   802,    48,    15,
    50,   378,   109,   110,   111,   112,   113,   114,   101,   814,
   815,    73,   817,   106,   819,   154,   109,   110,   111,   112,
   113,   114,   115,    75,   829,    73,    73,    77,   100,    73,
     9,   152,   769,   104,   152,   840,   153,   109,   110,   111,
   112,   113,   114,    75,   153,   850,     0,     0,   785,   155,
   855,   340,   892,   512,   634,   669,   584,   732,   677,   703,
   345,   866,   840,   156,   869,   802,   707,   649,   603,   743,
   602,   772,   197,   210,   124,   518,    -1,   814,   519,    -1,
    -1,    -1,   819,   888,   889,    -1,    -1,    -1,    -1,    -1,
    -1,   896,   829,    -1,    -1,    -1,    -1,   333,    -1,    -1,
    -1,    -1,     9,    -1,    -1,    -1,    -1,    14,    15,    -1,
    -1,   347,    -1,   850,    -1,    -1,   166,    -1,   855,    -1,
    -1,    -1,    -1,    -1,   174,   175,   176,    -1,    -1,    -1,
    -1,    -1,   869,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    48,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,   530,    -1,    -1,    -1,    14,    15,    -1,
   210,    -1,   539,    -1,   214,    -1,    -1,    -1,    25,    -1,
    -1,   548,   549,    -1,    -1,    -1,   226,    -1,    -1,   556,
   557,    -1,   559,   233,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,   241,    -1,   243,   244,   245,   246,   247,   248,   249,
   250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
   260,   261,   262,   263,   264,   265,   266,   267,    -1,    -1,
    -1,    -1,   272,   273,   274,   275,   276,   277,   278,   279,
   280,   281,   282,   283,   284,    -1,   286,    -1,   288,   289,
    -1,    -1,    -1,   293,   151,    -1,   333,   483,    -1,    -1,
   300,    -1,   302,    -1,    -1,   491,   492,   307,    -1,    -1,
   347,    -1,    -1,    -1,    -1,   315,     9,    -1,    -1,   176,
    -1,    -1,    15,    16,    17,    18,    19,    20,    21,    22,
    23,    24,    25,    26,    -1,    -1,    -1,    -1,    -1,    -1,
   197,    -1,   342,    -1,   151,    -1,    -1,    -1,   205,   206,
   207,    -1,   209,    -1,   540,    -1,    -1,    -1,   215,    -1,
    53,    54,    38,    39,    40,    41,    42,    43,    44,    45,
    46,    47,    48,    49,    -1,    51,   233,    -1,   378,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
   197,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   205,   206,
   207,    -1,   209,    -1,   404,    -1,    -1,    -1,   215,    -1,
    -1,    -1,   412,    15,    16,    17,    18,    19,    20,    21,
    22,    23,    24,    25,    26,   611,    -1,   284,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,   293,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,   483,    -1,    -1,    -1,
   307,    53,    54,    -1,   491,   492,   493,    -1,    -1,    -1,
   153,   268,    15,    16,    17,    18,    19,    20,    21,    22,
    23,    24,    25,    26,    -1,    -1,    -1,    -1,    -1,   479,
   480,    -1,    -1,    -1,    -1,    -1,    -1,   673,    -1,    -1,
    92,    -1,    -1,    -1,    -1,    -1,    -1,   683,    -1,   685,
    53,    54,    -1,   540,    -1,    -1,    15,    16,    17,    18,
    19,    20,    21,    22,    23,    24,    25,    26,    -1,    -1,
    -1,   378,    -1,    -1,    -1,    -1,    -1,   527,    -1,    -1,
   530,    -1,    -1,    -1,   391,    -1,    -1,    -1,    -1,   539,
    -1,    -1,    -1,    -1,    53,    54,    -1,    -1,   548,   549,
    -1,    -1,   552,    -1,    -1,    -1,   556,   557,    -1,   559,
    -1,    -1,    -1,   563,   564,    -1,   603,    -1,    -1,   569,
    -1,    -1,    -1,    -1,   611,    -1,    -1,    -1,    -1,   436,
    -1,    -1,    -1,   769,   391,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,   593,    -1,    -1,    -1,    -1,    -1,   785,
   153,   154,    -1,    -1,    -1,    -1,    -1,    -1,   465,    -1,
   467,    -1,    -1,    -1,    -1,    -1,   802,    -1,   618,    -1,
    -1,    -1,    -1,    -1,   481,   482,    -1,    -1,   814,   436,
    -1,    -1,    -1,   819,    -1,    -1,   673,    -1,    -1,    -1,
    -1,    -1,    -1,   829,   153,   154,   683,    -1,   685,    -1,
    -1,    44,    45,   653,   654,   512,    -1,   514,   465,    -1,
   467,   518,   519,    -1,   850,    -1,    -1,    -1,   668,   855,
    63,    -1,    -1,   530,   481,   482,    -1,    -1,    71,    72,
    73,    -1,   539,   869,    -1,    -1,    -1,    -1,    81,    -1,
    -1,   548,   549,    -1,    -1,    -1,    -1,    -1,    -1,   556,
   557,    -1,   559,    -1,    -1,   512,    -1,   514,    -1,    -1,
    -1,   518,   519,    -1,    -1,    -1,   109,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,   583,    -1,    -1,    -1,
    -1,    -1,   769,    -1,    -1,   128,    -1,   130,   131,   132,
   133,   134,   135,    -1,    -1,    -1,   553,    -1,   785,   142,
    -1,    -1,    -1,    -1,   147,   148,   149,    -1,   151,    -1,
    -1,    -1,    -1,    -1,    -1,   802,    -1,    -1,    -1,   626,
    -1,    -1,    -1,    -1,    -1,    -1,   583,   814,    -1,    -1,
    -1,    -1,   819,     0,     1,    -1,    -1,     4,     5,     6,
     7,     8,   829,    -1,    -1,    -1,    13,    14,    -1,    -1,
    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,   669,   850,    -1,    -1,    -1,    -1,   855,   626,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    44,    45,    -1,
    -1,    -1,   869,    50,    -1,    52,    53,    54,    55,    56,
    57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
    67,   658,    -1,    -1,    71,    72,    73,    74,    75,    -1,
    77,    -1,   669,    -1,    81,    82,    83,    84,    -1,    86,
    -1,    88,    -1,    90,    -1,    -1,    93,    -1,    -1,    -1,
    97,    98,    99,   100,   101,   102,   103,    -1,   105,   106,
    -1,   108,   109,   110,   111,    -1,    -1,    -1,    -1,   116,
   117,   118,   119,   120,   121,   122,    -1,    -1,    -1,    -1,
   127,   128,    -1,   130,   131,   132,   133,   134,   135,    -1,
    -1,    -1,    -1,    -1,    -1,   142,    -1,    -1,    -1,    -1,
   147,   148,   149,   150,   151,   152,    -1,   154,   155,    -1,
   157,     1,   159,   160,     4,     5,     6,     7,     8,    -1,
    -1,    -1,    -1,    13,    14,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
    25,    26,    -1,    -1,    44,    45,    -1,    -1,    -1,    -1,
    50,    -1,    52,    53,    54,    55,    56,    57,    58,    59,
    60,    61,    62,    63,    64,    65,    66,    67,    53,    54,
    -1,    71,    72,    73,    74,    75,    -1,    77,    -1,    -1,
    -1,    81,    82,    83,    84,    -1,    86,    -1,    88,    -1,
    90,    -1,    -1,    93,    -1,    -1,    -1,    97,    98,    99,
   100,   101,   102,   103,    -1,   105,   106,    -1,   108,   109,
   110,   111,    -1,    -1,    -1,    -1,   116,   117,   118,   119,
   120,   121,   122,    -1,    -1,    -1,    -1,   127,   128,    -1,
   130,   131,   132,   133,   134,   135,    -1,    -1,    -1,    -1,
    -1,    -1,   142,    -1,    -1,    -1,    -1,   147,   148,   149,
   150,   151,   152,    -1,   154,   155,   156,   157,     1,   159,
   160,     4,     5,     6,     7,     8,    -1,    -1,    -1,    -1,
    13,    14,    27,    -1,    29,    30,    31,    32,    33,    34,
    35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
    45,    46,    47,    48,    49,    -1,    51,    -1,    -1,    -1,
    -1,    44,    45,    -1,    -1,    -1,    -1,    50,    -1,    52,
    53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
    63,    64,    65,    66,    67,    -1,    -1,    -1,    71,    72,
    73,    74,    75,    -1,    77,    -1,    -1,    -1,    81,    82,
    83,    84,    -1,    86,    -1,    88,    -1,    90,    -1,    -1,
    93,    -1,    -1,    -1,    97,    98,    99,   100,   101,   102,
   103,    -1,   105,   106,    -1,   108,   109,   110,   111,    -1,
    -1,    -1,    -1,   116,   117,   118,   119,   120,   121,   122,
    -1,    -1,    -1,    -1,   127,   128,    -1,   130,   131,   132,
   133,   134,   135,     4,     5,     6,     7,     8,    -1,   142,
    -1,    -1,    13,    14,   147,   148,   149,   150,   151,   152,
    -1,   154,   155,   156,   157,    -1,   159,   160,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    44,    45,    -1,    -1,    -1,    -1,    50,
    -1,    52,    53,    54,    55,    56,    57,    58,    59,    60,
    61,    62,    63,    64,    65,    66,    67,    -1,    -1,    -1,
    71,    72,    73,    74,    75,    -1,    77,    -1,    -1,    -1,
    81,    82,    83,    84,    -1,    86,    -1,    88,    -1,    90,
    -1,    -1,    93,    -1,    -1,    -1,    97,    98,    99,   100,
    -1,   102,   103,    -1,   105,    -1,    -1,   108,   109,   110,
   111,    -1,    -1,    -1,    -1,   116,   117,   118,   119,   120,
   121,   122,    -1,    -1,    -1,    -1,   127,   128,    -1,   130,
   131,   132,   133,   134,   135,     4,     5,     6,     7,     8,
    -1,   142,    -1,    -1,    13,    14,   147,   148,   149,    -1,
   151,   152,    -1,   154,   155,   156,   157,    -1,   159,   160,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    44,    45,    -1,    -1,    -1,
    -1,    50,    -1,    52,    53,    54,    55,    56,    57,    58,
    59,    60,    61,    62,    63,    64,    65,    66,    67,    -1,
    -1,    -1,    71,    72,    73,    74,    75,    -1,    77,    -1,
    -1,    -1,    81,    82,    83,    84,    -1,    86,    -1,    88,
    -1,    90,    -1,    -1,    93,    -1,    -1,    -1,    97,    98,
    99,   100,    -1,   102,   103,    -1,   105,    -1,    -1,   108,
   109,   110,   111,    -1,    -1,    -1,    -1,   116,   117,   118,
   119,   120,   121,   122,    -1,    -1,    -1,    -1,   127,   128,
    -1,   130,   131,   132,   133,   134,   135,     4,     5,     6,
     7,     8,    -1,   142,    -1,    -1,    13,    14,   147,   148,
   149,    -1,   151,   152,    -1,   154,   155,   156,   157,    -1,
   159,   160,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    44,    45,    -1,
    -1,    -1,    -1,    50,    -1,    52,    53,    54,    55,    56,
    57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
    67,    -1,    -1,    -1,    71,    72,    73,    74,    75,    -1,
    77,    -1,    -1,    -1,    81,    82,    83,    84,    85,    86,
    -1,    88,    -1,    90,    -1,    -1,    93,    -1,    -1,    -1,
    97,    98,    99,   100,    -1,   102,   103,    -1,   105,    -1,
    -1,   108,   109,   110,   111,    -1,    -1,    -1,    -1,   116,
   117,   118,   119,   120,   121,   122,    -1,    -1,    -1,    -1,
   127,   128,    -1,   130,   131,   132,   133,   134,   135,     4,
     5,     6,     7,     8,    -1,   142,    -1,    -1,    13,    14,
   147,   148,   149,    -1,   151,   152,    -1,   154,   155,    -1,
   157,    -1,   159,   160,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    44,
    45,    -1,    -1,    -1,    -1,    50,    -1,    52,    53,    54,
    55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
    65,    66,    67,    -1,    -1,    -1,    71,    72,    73,    74,
    75,    -1,    77,    -1,    -1,    -1,    81,    82,    83,    84,
    -1,    86,    -1,    88,    -1,    90,    91,    -1,    93,    -1,
    -1,    -1,    97,    98,    99,   100,    -1,   102,   103,    -1,
   105,    -1,    -1,   108,   109,   110,   111,    -1,    -1,    -1,
    -1,   116,   117,   118,   119,   120,   121,   122,    -1,    -1,
    -1,    -1,   127,   128,    -1,   130,   131,   132,   133,   134,
   135,     4,     5,     6,     7,     8,    -1,   142,    -1,    -1,
    13,    14,   147,   148,   149,    -1,   151,   152,    -1,   154,
   155,    -1,   157,    -1,   159,   160,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    44,    45,    -1,    -1,    -1,    -1,    50,    -1,    52,
    53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
    63,    64,    65,    66,    67,    -1,    -1,    -1,    71,    72,
    73,    74,    75,    -1,    77,    -1,    -1,    -1,    81,    82,
    83,    84,    -1,    86,    -1,    88,    89,    90,    -1,    -1,
    93,    -1,    -1,    -1,    97,    98,    99,   100,    -1,   102,
   103,    -1,   105,    -1,    -1,   108,   109,   110,   111,    -1,
    -1,    -1,    -1,   116,   117,   118,   119,   120,   121,   122,
    -1,    -1,    -1,    -1,   127,   128,    -1,   130,   131,   132,
   133,   134,   135,     4,     5,     6,     7,     8,    -1,   142,
    -1,    -1,    13,    14,   147,   148,   149,    -1,   151,   152,
    -1,   154,   155,    -1,   157,    -1,   159,   160,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    44,    45,    -1,    -1,    -1,    -1,    50,
    -1,    52,    53,    54,    55,    56,    57,    58,    59,    60,
    61,    62,    63,    64,    65,    66,    67,    -1,    -1,    -1,
    71,    72,    73,    74,    75,    -1,    77,    -1,    -1,    -1,
    81,    82,    83,    84,    -1,    86,    -1,    88,    -1,    90,
    -1,    -1,    93,    -1,    -1,    -1,    97,    98,    99,   100,
    -1,   102,   103,    -1,   105,    -1,    -1,   108,   109,   110,
   111,    -1,    -1,    -1,    -1,   116,   117,   118,   119,   120,
   121,   122,    -1,    -1,    -1,    -1,   127,   128,    -1,   130,
   131,   132,   133,   134,   135,     4,     5,     6,     7,     8,
    -1,   142,    -1,    -1,    13,    14,   147,   148,   149,    -1,
   151,   152,    -1,   154,   155,   156,   157,    -1,   159,   160,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    44,    45,    -1,    -1,    -1,
    -1,    50,    -1,    52,    53,    54,    55,    56,    57,    58,
    59,    60,    61,    62,    63,    64,    65,    66,    67,    -1,
    -1,    -1,    71,    72,    73,    74,    75,    -1,    77,    -1,
    -1,    -1,    81,    82,    83,    84,    -1,    86,    87,    88,
    -1,    90,    -1,    -1,    93,    -1,    -1,    -1,    97,    98,
    99,   100,    -1,   102,   103,    -1,   105,    -1,    -1,   108,
   109,   110,   111,    -1,    -1,    -1,    -1,   116,   117,   118,
   119,   120,   121,   122,    -1,    -1,    -1,    -1,   127,   128,
    -1,   130,   131,   132,   133,   134,   135,     4,     5,     6,
     7,     8,    -1,   142,    -1,    -1,    13,    14,   147,   148,
   149,    -1,   151,   152,    -1,   154,   155,    -1,   157,    -1,
   159,   160,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    44,    45,    -1,
    -1,    -1,    -1,    50,    -1,    52,    53,    54,    55,    56,
    57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
    67,    -1,    -1,    -1,    71,    72,    73,    74,    75,    -1,
    77,    -1,    -1,    -1,    81,    82,    83,    84,    -1,    86,
    -1,    88,    -1,    90,    -1,    -1,    93,    -1,    -1,    -1,
    97,    98,    99,   100,    -1,   102,   103,    -1,   105,    -1,
    -1,   108,   109,   110,   111,    -1,    -1,    -1,    -1,   116,
   117,   118,   119,   120,   121,   122,    -1,    -1,    -1,    -1,
   127,   128,    -1,   130,   131,   132,   133,   134,   135,     4,
     5,     6,     7,     8,    -1,   142,    -1,    -1,    13,    14,
   147,   148,   149,    -1,   151,   152,    -1,   154,   155,   156,
   157,    -1,   159,   160,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    44,
    45,    -1,    -1,    -1,    -1,    50,    -1,    52,    53,    54,
    55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
    65,    66,    67,    -1,    -1,    -1,    71,    72,    73,    74,
    75,    -1,    77,    -1,    -1,    -1,    81,    82,    83,    84,
    -1,    86,    -1,    88,    -1,    90,    -1,    -1,    93,    -1,
    -1,    -1,    97,    98,    99,   100,    -1,   102,   103,    -1,
   105,    -1,    -1,   108,   109,   110,   111,    -1,    -1,    -1,
    -1,   116,   117,   118,   119,   120,   121,   122,    -1,    -1,
    -1,    -1,   127,   128,    -1,   130,   131,   132,   133,   134,
   135,     4,     5,     6,     7,     8,    -1,   142,    -1,    -1,
    13,    14,   147,   148,   149,    -1,   151,   152,    -1,   154,
   155,   156,   157,    -1,   159,   160,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    44,    45,    -1,    -1,    -1,    -1,    50,    -1,    52,
    53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
    63,    64,    65,    66,    67,    -1,    -1,    -1,    71,    72,
    73,    74,    75,    -1,    77,    -1,    -1,    -1,    81,    82,
    83,    84,    -1,    86,    -1,    88,    -1,    90,    -1,    -1,
    93,    -1,    -1,    -1,    97,    98,    99,   100,    -1,   102,
   103,    -1,   105,    -1,    -1,   108,   109,   110,   111,    -1,
    -1,    -1,    -1,   116,   117,   118,   119,   120,   121,   122,
    -1,    -1,    -1,    -1,   127,   128,    -1,   130,   131,   132,
   133,   134,   135,     4,     5,     6,     7,     8,    -1,   142,
    -1,    -1,    13,    14,   147,   148,   149,    -1,   151,   152,
    -1,   154,   155,   156,   157,    -1,   159,   160,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    44,    45,    -1,    -1,    -1,    -1,    50,
    -1,    52,    53,    54,    55,    56,    57,    58,    59,    60,
    61,    62,    63,    64,    65,    66,    67,    -1,    -1,    -1,
    71,    72,    73,    74,    75,    -1,    77,    -1,    -1,    -1,
    81,    82,    83,    84,    -1,    86,    -1,    88,    -1,    90,
    -1,    -1,    93,    -1,    -1,    -1,    97,    98,    99,   100,
    -1,   102,   103,    -1,   105,    -1,    -1,   108,   109,   110,
   111,    -1,    -1,    -1,    -1,   116,   117,   118,   119,   120,
   121,   122,    -1,    -1,    -1,    -1,   127,   128,    -1,   130,
   131,   132,   133,   134,   135,     4,     5,     6,     7,     8,
    -1,   142,    -1,    -1,    13,    14,   147,   148,   149,    -1,
   151,   152,    -1,   154,   155,   156,   157,    -1,   159,   160,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    44,    45,    -1,    -1,    -1,
    -1,    50,    -1,    52,    53,    54,    55,    56,    57,    58,
    59,    60,    61,    62,    63,    64,    65,    66,    67,    -1,
    -1,    -1,    71,    72,    73,    74,    75,    -1,    77,    -1,
    -1,    -1,    81,    82,    83,    84,    -1,    86,    -1,    88,
    -1,    90,    -1,    -1,    93,    -1,    -1,    -1,    97,    98,
    99,   100,    -1,   102,   103,    -1,   105,    -1,    -1,   108,
   109,   110,   111,    -1,    -1,    -1,    -1,   116,   117,   118,
   119,   120,   121,   122,    -1,    -1,    -1,    -1,   127,   128,
    -1,   130,   131,   132,   133,   134,   135,     4,     5,     6,
     7,     8,    -1,   142,    -1,    -1,    13,    14,   147,   148,
   149,    -1,   151,   152,    -1,   154,   155,   156,   157,    -1,
   159,   160,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    44,    45,    -1,
    -1,    -1,    -1,    50,    -1,    52,    53,    54,    55,    56,
    57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
    67,    -1,    -1,    -1,    71,    72,    73,    74,    75,    -1,
    77,    -1,    -1,    -1,    81,    82,    83,    84,    -1,    86,
    -1,    88,    -1,    90,    -1,    -1,    93,    -1,    -1,    -1,
    97,    98,    99,   100,    -1,   102,   103,    -1,   105,    -1,
    -1,   108,   109,   110,   111,    -1,    -1,    -1,    -1,   116,
   117,   118,   119,   120,   121,   122,    -1,    -1,    -1,    -1,
   127,   128,    -1,   130,   131,   132,   133,   134,   135,    -1,
    -1,    -1,    -1,    -1,    -1,   142,    -1,    -1,    -1,    -1,
   147,   148,   149,    -1,   151,   152,    -1,   154,   155,    -1,
   157,    -1,   159,   160,     4,     5,     6,     7,     8,    -1,
    -1,    -1,    -1,    13,    14,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    28,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    44,    45,    -1,    -1,    -1,    -1,
    50,    -1,    52,    53,    54,    55,    56,    57,    58,    59,
    60,    61,    62,    63,    64,    65,    66,    67,    -1,    -1,
    -1,    71,    72,    73,    74,    75,    -1,    77,    -1,    -1,
    -1,    81,    82,    83,    84,    -1,    86,    -1,    88,    -1,
    90,    -1,    -1,    93,    -1,    -1,    -1,    97,    98,    99,
   100,    -1,   102,   103,    -1,   105,    -1,    -1,   108,   109,
    -1,    -1,    -1,    -1,    -1,    -1,   116,   117,   118,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,   127,   128,    -1,
   130,   131,   132,   133,   134,   135,    -1,    -1,    -1,    -1,
    -1,    -1,   142,    -1,    -1,    -1,    -1,   147,   148,   149,
    -1,   151,   152,    -1,   154,   155,    -1,   157,    -1,   159,
   160,     4,     5,     6,     7,     8,    -1,    -1,    -1,    -1,
    13,    14,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    28,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    44,    45,    -1,    -1,    -1,    -1,    50,    -1,    52,
    53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
    63,    64,    65,    66,    67,    -1,    -1,    -1,    71,    72,
    73,    74,    75,    -1,    77,    -1,    -1,    -1,    81,    82,
    83,    84,    -1,    86,    -1,    88,    -1,    90,    -1,    -1,
    93,    -1,    -1,    -1,    97,    98,    99,   100,    -1,   102,
   103,    -1,   105,    -1,    -1,   108,   109,    -1,    -1,    -1,
    -1,    -1,    -1,   116,   117,   118,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,   127,   128,    -1,   130,   131,   132,
   133,   134,   135,    -1,    -1,    -1,    -1,    -1,    -1,   142,
    -1,    -1,    -1,    -1,   147,   148,   149,    -1,   151,   152,
    -1,   154,   155,    -1,   157,    -1,   159,   160,     4,     5,
     6,     7,     8,    -1,    -1,    -1,    -1,    13,    14,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    28,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    44,    45,
    -1,    -1,    -1,    -1,    50,    -1,    52,    53,    54,    55,
    56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
    66,    67,    -1,    -1,    -1,    71,    72,    73,    74,    75,
    -1,    77,    -1,    -1,    -1,    81,    82,    83,    84,    -1,
    86,    -1,    88,    -1,    90,    -1,    -1,    93,    -1,    -1,
    -1,    97,    98,    99,   100,    -1,   102,   103,    -1,   105,
    -1,    -1,   108,   109,    -1,    -1,    -1,    -1,    -1,    -1,
   116,   117,   118,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,   127,   128,    -1,   130,   131,   132,   133,   134,   135,
    -1,    -1,    -1,    -1,    -1,    -1,   142,    -1,    -1,    -1,
    -1,   147,   148,   149,    -1,   151,   152,    -1,   154,   155,
    -1,   157,    -1,   159,   160,     4,     5,     6,     7,     8,
    -1,    -1,    -1,    -1,    13,    14,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    28,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    44,    45,    -1,    -1,    -1,
    -1,    50,    -1,    52,    53,    54,    55,    56,    57,    58,
    59,    60,    61,    62,    63,    64,    65,    66,    67,    -1,
    -1,    -1,    71,    72,    73,    74,    75,    -1,    77,    -1,
    -1,    -1,    81,    82,    83,    84,    -1,    86,    -1,    88,
    -1,    90,    -1,    -1,    93,    -1,    -1,    -1,    97,    98,
    99,   100,    -1,   102,   103,    -1,   105,    -1,    -1,   108,
   109,    -1,    -1,    -1,    -1,    -1,    -1,   116,   117,   118,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   127,   128,
    -1,   130,   131,   132,   133,   134,   135,    -1,    -1,    -1,
    -1,    -1,    -1,   142,    -1,    -1,    -1,    -1,   147,   148,
   149,    -1,   151,   152,    -1,   154,   155,    -1,   157,    -1,
   159,   160,     4,     5,     6,     7,     8,    -1,    -1,    -1,
    -1,    13,    14,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    28,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    44,    45,    -1,    -1,    -1,    -1,    50,    -1,
    52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
    62,    63,    64,    65,    66,    67,    -1,    -1,    -1,    71,
    72,    73,    74,    75,    -1,    77,    -1,    -1,    -1,    81,
    82,    83,    84,    -1,    86,    -1,    88,    -1,    90,    -1,
    -1,    93,    -1,    -1,    -1,    97,    98,    99,   100,    -1,
   102,   103,    -1,   105,    -1,    -1,   108,   109,    -1,    -1,
    -1,    -1,    -1,    -1,   116,   117,   118,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,   127,   128,    -1,   130,   131,
   132,   133,   134,   135,     4,     5,     6,     7,     8,    -1,
   142,    -1,    -1,    13,    14,   147,   148,   149,    -1,   151,
   152,    -1,   154,   155,    -1,   157,    -1,   159,   160,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    44,    45,    -1,    -1,    -1,    -1,
    50,    -1,    52,    53,    54,    55,    56,    57,    58,    59,
    60,    61,    62,    63,    64,    65,    66,    67,    -1,    -1,
    -1,    71,    72,    73,    74,    75,    -1,    77,    -1,    -1,
    -1,    81,    82,    83,    84,    -1,    86,    -1,    88,    -1,
    90,    -1,    -1,    93,    -1,    -1,    -1,    97,    98,    99,
   100,    -1,   102,   103,    -1,   105,    -1,    -1,   108,   109,
    -1,    -1,    -1,    -1,    -1,    -1,   116,   117,   118,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,   127,   128,    -1,
   130,   131,   132,   133,   134,   135,     4,     5,     6,     7,
     8,    -1,   142,    -1,    -1,    13,    14,   147,   148,   149,
    -1,   151,   152,    -1,   154,   155,    -1,   157,    -1,   159,
   160,    -1,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    44,    45,    -1,    -1,
    -1,    -1,    50,    -1,    52,    53,    54,    55,    56,    57,
    58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
    -1,    -1,    -1,    71,    72,    73,    74,    75,    -1,    -1,
    -1,    -1,    -1,    81,    32,    33,    34,    35,    36,    37,
    38,    39,    40,    41,    42,    43,    44,    45,    46,    47,
    48,    49,   100,    51,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,   109,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   117,
   118,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   127,
   128,    -1,   130,   131,   132,   133,   134,   135,     4,     5,
     6,     7,     8,    -1,   142,    -1,    -1,    13,    14,   147,
   148,   149,    -1,   151,   152,    -1,    -1,    -1,    -1,   157,
    -1,   159,   160,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    44,    45,
    -1,    -1,    -1,    -1,    50,    -1,    52,    53,    54,    55,
    56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
    66,    -1,    -1,    -1,    -1,    71,    72,    73,    74,    75,
    -1,    -1,    -1,    -1,    -1,    81,    -1,    33,    34,    35,
    36,    37,    38,    39,    40,    41,    42,    43,    44,    45,
    46,    47,    48,    49,   100,    51,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,   109,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,   117,   118,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,   127,   128,    -1,   130,   131,   132,   133,   134,   135,
     4,     5,     6,     7,     8,    -1,   142,    -1,    -1,    13,
    14,   147,   148,   149,    -1,   151,   152,    -1,   154,    -1,
    -1,   157,    -1,   159,   160,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    44,    45,    -1,    -1,    -1,    -1,    50,    -1,    52,    53,
    54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
    64,    65,    66,    -1,    -1,    -1,    -1,    71,    72,    73,
    74,    75,    -1,    -1,    -1,    -1,    -1,    81,    34,    35,
    36,    37,    38,    39,    40,    41,    42,    43,    44,    45,
    46,    47,    48,    49,    -1,    51,   100,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,   109,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,   117,   118,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,   127,   128,    -1,   130,   131,   132,   133,
   134,   135,     4,     5,     6,     7,     8,    -1,   142,    -1,
    -1,    13,    14,   147,   148,   149,    -1,   151,   152,    -1,
   154,    -1,    -1,   157,    -1,   159,   160,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    44,    45,    -1,    -1,    -1,    -1,    50,    -1,
    52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
    62,    63,    64,    65,    66,    -1,    -1,    -1,    -1,    71,
    72,    73,    74,    75,    -1,    -1,    -1,    -1,    -1,    81,
    34,    35,    36,    37,    38,    39,    40,    41,    42,    43,
    44,    45,    46,    47,    48,    49,    -1,    51,   100,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,   117,   118,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,   127,   128,    -1,   130,   131,
   132,   133,   134,   135,     4,     5,     6,     7,     8,    -1,
   142,    -1,    -1,    13,    14,   147,   148,   149,    -1,   151,
   152,    -1,   154,    -1,    -1,   157,    -1,   159,   160,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    44,    45,    -1,    -1,    -1,    -1,
    50,    -1,    52,    53,    54,    55,    56,    57,    58,    59,
    60,    61,    62,    63,    64,    65,    66,    -1,    -1,    -1,
    -1,    71,    72,    73,    74,    75,    -1,    -1,    -1,    -1,
    -1,    81,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
   100,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,   117,   118,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,   127,   128,    -1,
   130,   131,   132,   133,   134,   135,     4,     5,     6,     7,
     8,    -1,   142,    -1,    -1,    13,    14,   147,   148,   149,
    -1,   151,   152,   153,    -1,    -1,    -1,   157,    -1,   159,
   160,    -1,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    44,    45,    -1,    -1,
    -1,    -1,    50,    -1,    52,    53,    54,    55,    56,    57,
    58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
    -1,    -1,    -1,    71,    72,    73,    74,    75,    -1,    -1,
    -1,    -1,    -1,    81,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,   100,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,   109,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   117,
   118,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   127,
   128,    -1,   130,   131,   132,   133,   134,   135,    -1,    -1,
    -1,    -1,    -1,    -1,   142,    -1,    -1,    -1,    -1,   147,
   148,   149,    -1,   151,   152,    -1,    -1,    -1,    -1,   157,
    -1,   159,   160,     4,     5,     6,     7,     8,    -1,    -1,
    -1,    -1,    13,    14,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    28,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    44,    45,    -1,    -1,    -1,    -1,    50,
    -1,    52,    53,    54,    55,    56,    57,    58,    59,    60,
    61,    62,    63,    64,    65,    66,    -1,    -1,    -1,    -1,
    71,    72,    73,    74,    75,    -1,    -1,    -1,    -1,    -1,
    81,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   100,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,   117,   118,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,   127,   128,    -1,   130,
   131,   132,   133,   134,   135,     4,     5,     6,     7,     8,
    -1,   142,    -1,    -1,    13,    14,   147,   148,   149,    -1,
   151,   152,    -1,    -1,    -1,    -1,   157,    -1,   159,   160,
    -1,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    44,    45,    -1,    -1,    -1,
    -1,    50,    -1,    52,    53,    54,    55,    56,    57,    58,
    59,    60,    61,    62,    63,    64,    65,    66,    -1,    -1,
    -1,    -1,    71,    72,    73,    74,    75,    -1,    -1,    -1,
    -1,    -1,    81,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,   100,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
   109,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   117,   118,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   127,   128,
    -1,   130,   131,   132,   133,   134,   135,     4,     5,     6,
     7,     8,    -1,   142,    -1,    -1,    13,    14,   147,   148,
   149,    -1,   151,   152,    -1,    -1,    -1,    -1,   157,    -1,
   159,   160,    -1,    -1,    -1,    -1,    33,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    44,    45,    -1,
    -1,    -1,    -1,    50,    -1,    52,    53,    54,    55,    56,
    57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
    -1,    -1,    -1,    -1,    71,    72,    73,    74,    75,    -1,
    -1,    -1,    -1,    -1,    81,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,   100,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,   109,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
   117,   118,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
   127,   128,    -1,   130,   131,   132,   133,   134,   135,     4,
     5,     6,     7,     8,    -1,   142,    -1,    -1,    13,    14,
   147,   148,   149,    -1,   151,   152,    -1,    -1,    -1,    -1,
   157,    -1,   159,   160,    -1,    -1,    -1,    -1,    33,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    44,
    45,    -1,    -1,    -1,    -1,    50,    -1,    52,    53,    54,
    55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
    65,    66,    -1,    -1,    -1,    -1,    71,    72,    73,    74,
    75,    -1,    -1,    -1,    -1,    -1,    81,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,   100,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,   109,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,   117,   118,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,   127,   128,    -1,   130,   131,   132,   133,   134,
   135,     4,     5,     6,     7,     8,    -1,   142,    -1,    -1,
    13,    14,   147,   148,   149,    -1,   151,   152,    -1,    -1,
    -1,    -1,   157,    -1,   159,   160,    -1,    -1,    -1,    -1,
    33,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    44,    45,    -1,    -1,    -1,    -1,    50,    -1,    52,
    53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
    63,    64,    65,    66,    -1,    -1,    -1,    -1,    71,    72,
    73,    74,    75,    -1,    -1,    -1,    -1,    -1,    81,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,   100,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,   109,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,   117,   118,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,   127,   128,    -1,   130,   131,   132,
   133,   134,   135,     4,     5,     6,     7,     8,    -1,   142,
    -1,    -1,    13,    14,   147,   148,   149,    -1,   151,   152,
    -1,    -1,    -1,    -1,   157,    -1,   159,   160,    -1,    -1,
    -1,    -1,    33,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    44,    45,    -1,    -1,    -1,    -1,    50,
    -1,    52,    53,    54,    55,    56,    57,    58,    59,    60,
    61,    62,    63,    64,    65,    66,    -1,    -1,    -1,    -1,
    71,    72,    73,    74,    75,    -1,    -1,    -1,    -1,    -1,
    81,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   100,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   109,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,   117,   118,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,   127,   128,    -1,   130,
   131,   132,   133,   134,   135,     4,     5,     6,     7,     8,
    -1,   142,    -1,    -1,    13,    14,   147,   148,   149,    -1,
   151,   152,    -1,    -1,    -1,    -1,   157,    -1,   159,   160,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    44,    45,    -1,    -1,    -1,
    -1,    50,    -1,    52,    53,    54,    55,    56,    57,    58,
    59,    60,    61,    62,    63,    64,    65,    66,    -1,    -1,
    -1,    -1,    71,    72,    73,    74,    75,    -1,    -1,    -1,
    -1,    -1,    81,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,   100,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
   109,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   117,   118,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   127,   128,
    -1,   130,   131,   132,   133,   134,   135,     4,     5,     6,
     7,     8,    -1,   142,    -1,    -1,    13,    14,   147,   148,
   149,    -1,   151,   152,    -1,    -1,    -1,    -1,   157,    -1,
   159,   160,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    44,    45,    -1,
    -1,    -1,    -1,    50,    -1,    52,    53,    54,    55,    56,
    57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
    -1,    -1,    -1,    -1,    71,    72,    73,    74,    75,    -1,
    -1,    -1,    -1,    -1,    81,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,   100,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,   109,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
   117,   118,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
   127,   128,    -1,   130,   131,   132,   133,   134,   135,     4,
     5,     6,     7,     8,    -1,   142,    -1,    -1,    13,    14,
   147,   148,   149,    -1,   151,   152,    -1,    -1,    -1,    -1,
   157,    -1,   159,   160,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    44,
    45,    -1,    -1,    -1,    -1,    50,    -1,    52,    53,    54,
    55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
    65,    66,    -1,    -1,    -1,    -1,    71,    72,    73,    74,
    75,    -1,    -1,    -1,    -1,    -1,    81,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,   100,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,   109,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,   117,   118,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,   127,   128,    -1,   130,   131,   132,   133,   134,
   135,    -1,    -1,    -1,    -1,    -1,    -1,   142,    -1,    10,
    11,    12,   147,   148,   149,    -1,   151,   152,    -1,    -1,
    -1,    -1,   157,    -1,   159,   160,    27,    -1,    29,    30,
    31,    32,    33,    34,    35,    36,    37,    38,    39,    40,
    41,    42,    43,    44,    45,    46,    47,    48,    49,    -1,
    51,    10,    11,    12,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    27,    -1,
    29,    30,    31,    32,    33,    34,    35,    36,    37,    38,
    39,    40,    41,    42,    43,    44,    45,    46,    47,    48,
    49,    -1,    51,    10,    11,    12,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    27,    -1,    29,    30,    31,    32,    33,    34,    35,    36,
    37,    38,    39,    40,    41,    42,    43,    44,    45,    46,
    47,    48,    49,    -1,    51,    -1,    -1,    10,    11,    12,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    27,   156,    29,    30,    31,    32,
    33,    34,    35,    36,    37,    38,    39,    40,    41,    42,
    43,    44,    45,    46,    47,    48,    49,    -1,    51,    10,
    11,    12,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    27,   156,    29,    30,
    31,    32,    33,    34,    35,    36,    37,    38,    39,    40,
    41,    42,    43,    44,    45,    46,    47,    48,    49,    -1,
    51,    10,    11,    12,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    27,   156,
    29,    30,    31,    32,    33,    34,    35,    36,    37,    38,
    39,    40,    41,    42,    43,    44,    45,    46,    47,    48,
    49,    -1,    51,    -1,    -1,    -1,    -1,    10,    11,    12,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,   156,    27,    28,    29,    30,    31,    32,
    33,    34,    35,    36,    37,    38,    39,    40,    41,    42,
    43,    44,    45,    46,    47,    48,    49,    -1,    51,    10,
    11,    12,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,   156,    27,    -1,    29,    30,
    31,    32,    33,    34,    35,    36,    37,    38,    39,    40,
    41,    42,    43,    44,    45,    46,    47,    48,    49,    -1,
    51,    10,    11,    12,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,   156,    27,    -1,
    29,    30,    31,    32,    33,    34,    35,    36,    37,    38,
    39,    40,    41,    42,    43,    44,    45,    46,    47,    48,
    49,    -1,    51,    10,    11,    12,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    27,   154,    29,    30,    31,    32,    33,    34,    35,    36,
    37,    38,    39,    40,    41,    42,    43,    44,    45,    46,
    47,    48,    49,    -1,    51,    10,    11,    12,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    27,   154,    29,    30,    31,    32,    33,    34,
    35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
    45,    46,    47,    48,    49,    -1,    51,    10,    11,    12,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    27,   154,    29,    30,    31,    32,
    33,    34,    35,    36,    37,    38,    39,    40,    41,    42,
    43,    44,    45,    46,    47,    48,    49,    -1,    51,    10,
    11,    12,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    27,   154,    29,    30,
    31,    32,    33,    34,    35,    36,    37,    38,    39,    40,
    41,    42,    43,    44,    45,    46,    47,    48,    49,    -1,
    51,    10,    11,    12,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    27,   154,
    29,    30,    31,    32,    33,    34,    35,    36,    37,    38,
    39,    40,    41,    42,    43,    44,    45,    46,    47,    48,
    49,    -1,    51,    -1,    10,    11,    12,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
   153,    27,    -1,    29,    30,    31,    32,    33,    34,    35,
    36,    37,    38,    39,    40,    41,    42,    43,    44,    45,
    46,    47,    48,    49,    -1,    51,    10,    11,    12,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,   153,    27,    -1,    29,    30,    31,    32,    33,
    34,    35,    36,    37,    38,    39,    40,    41,    42,    43,
    44,    45,    46,    47,    48,    49,    -1,    51,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,   153,    10,    11,    12,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
   126,    -1,    27,    -1,    29,    30,    31,    32,    33,    34,
    35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
    45,    46,    47,    48,    49,    -1,    51,    10,    11,    12,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,   126,    -1,    27,    28,    29,    30,    31,    32,
    33,    34,    35,    36,    37,    38,    39,    40,    41,    42,
    43,    44,    45,    46,    47,    48,    49,    -1,    51,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    10,    11,    12,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    27,   126,    29,    30,    31,    32,    33,    34,    35,    36,
    37,    38,    39,    40,    41,    42,    43,    44,    45,    46,
    47,    48,    49,    -1,    51,    11,    12,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    -1,    27,    -1,    29,    30,    31,    32,    33,    34,    35,
    36,    37,    38,    39,    40,    41,    42,    43,    44,    45,
    46,    47,    48,    49,    12,    51,    -1,    -1,    -1,    -1,
    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    27,
    -1,    29,    30,    31,    32,    33,    34,    35,    36,    37,
    38,    39,    40,    41,    42,    43,    44,    45,    46,    47,
    48,    49,    -1,    51,    29,    30,    31,    32,    33,    34,
    35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
    45,    46,    47,    48,    49,    -1,    51,    30,    31,    32,
    33,    34,    35,    36,    37,    38,    39,    40,    41,    42,
    43,    44,    45,    46,    47,    48,    49,    -1,    51,    31,
    32,    33,    34,    35,    36,    37,    38,    39,    40,    41,
    42,    43,    44,    45,    46,    47,    48,    49,    -1,    51
};
/* -*-C-*-  Note some compilers choke on comments on `#line' lines.  */
#line 3 "/usr/local/share/bison.simple"
/* This file comes from bison-1.28.  */

/* Skeleton output parser for bison,
   Copyright (C) 1984, 1989, 1990 Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */

/* As a special exception, when this file is copied by Bison into a
   Bison output file, you may use that output file without restriction.
   This special exception was added by the Free Software Foundation
   in version 1.24 of Bison.  */

/* This is the parser code that is written into each bison parser
  when the %semantic_parser declaration is not specified in the grammar.
  It was written by Richard Stallman by simplifying the hairy parser
  used when %semantic_parser is specified.  */

#ifndef YYSTACK_USE_ALLOCA
#ifdef alloca
#define YYSTACK_USE_ALLOCA
#else /* alloca not defined */
#ifdef __GNUC__
#define YYSTACK_USE_ALLOCA
#define alloca __builtin_alloca
#else /* not GNU C.  */
#if (!defined (__STDC__) && defined (sparc)) || defined (__sparc__) || defined (__sparc) || defined (__sgi) || (defined (__sun) && defined (__i386))
#define YYSTACK_USE_ALLOCA
#include <alloca.h>
#else /* not sparc */
/* We think this test detects Watcom and Microsoft C.  */
/* This used to test MSDOS, but that is a bad idea
   since that symbol is in the user namespace.  */
#if (defined (_MSDOS) || defined (_MSDOS_)) && !defined (__TURBOC__)
#if 0 /* No need for malloc.h, which pollutes the namespace;
	 instead, just don't use alloca.  */
#include <malloc.h>
#endif
#else /* not MSDOS, or __TURBOC__ */
#if defined(_AIX)
/* I don't know what this was needed for, but it pollutes the namespace.
   So I turned it off.   rms, 2 May 1997.  */
/* #include <malloc.h>  */
 #pragma alloca
#define YYSTACK_USE_ALLOCA
#else /* not MSDOS, or __TURBOC__, or _AIX */
#if 0
#ifdef __hpux /* haible@ilog.fr says this works for HPUX 9.05 and up,
		 and on HPUX 10.  Eventually we can turn this on.  */
#define YYSTACK_USE_ALLOCA
#define alloca __builtin_alloca
#endif /* __hpux */
#endif
#endif /* not _AIX */
#endif /* not MSDOS, or __TURBOC__ */
#endif /* not sparc */
#endif /* not GNU C */
#endif /* alloca not defined */
#endif /* YYSTACK_USE_ALLOCA not defined */

#ifdef YYSTACK_USE_ALLOCA
#define YYSTACK_ALLOC alloca
#else
#define YYSTACK_ALLOC malloc
#endif

/* Note: there must be only one dollar sign in this file.
   It is replaced by the list of actions, each action
   as one case of the switch.  */

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		-2
#define YYEOF		0
#define YYACCEPT	goto yyacceptlab
#define YYABORT 	goto yyabortlab
#define YYERROR		goto yyerrlab1
/* Like YYERROR except do call yyerror.
   This remains here temporarily to ease the
   transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */
#define YYFAIL		goto yyerrlab
#define YYRECOVERING()  (!!yyerrstatus)
#define YYBACKUP(token, value) \
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    { yychar = (token), yylval = (value);			\
      yychar1 = YYTRANSLATE (yychar);				\
      YYPOPSTACK;						\
      goto yybackup;						\
    }								\
  else								\
    { yyerror ("syntax error: cannot back up"); YYERROR; }	\
while (0)

#define YYTERROR	1
#define YYERRCODE	256

#ifndef YYPURE
#define YYLEX		yylex()
#endif

#ifdef YYPURE
#ifdef YYLSP_NEEDED
#ifdef YYLEX_PARAM
#define YYLEX		yylex(&yylval, &yylloc, YYLEX_PARAM)
#else
#define YYLEX		yylex(&yylval, &yylloc)
#endif
#else /* not YYLSP_NEEDED */
#ifdef YYLEX_PARAM
#define YYLEX		yylex(&yylval, YYLEX_PARAM)
#else
#define YYLEX		yylex(&yylval)
#endif
#endif /* not YYLSP_NEEDED */
#endif

/* If nonreentrant, generate the variables here */

#ifndef YYPURE

int	yychar;			/*  the lookahead symbol		*/
YYSTYPE	yylval;			/*  the semantic value of the		*/
				/*  lookahead symbol			*/

#ifdef YYLSP_NEEDED
YYLTYPE yylloc;			/*  location data for the lookahead	*/
				/*  symbol				*/
#endif

int yynerrs;			/*  number of parse errors so far       */
#endif  /* not YYPURE */

#if YYDEBUG != 0
int yydebug;			/*  nonzero means print parse trace	*/
/* Since this is uninitialized, it does not stop multiple parsers
   from coexisting.  */
#endif

/*  YYINITDEPTH indicates the initial size of the parser's stacks	*/

#ifndef	YYINITDEPTH
#define YYINITDEPTH 200
#endif

/*  YYMAXDEPTH is the maximum size the stacks can grow to
    (effective only if the built-in stack extension method is used).  */

#if YYMAXDEPTH == 0
#undef YYMAXDEPTH
#endif

#ifndef YYMAXDEPTH
#define YYMAXDEPTH 10000
#endif

/* Define __yy_memcpy.  Note that the size argument
   should be passed with type unsigned int, because that is what the non-GCC
   definitions require.  With GCC, __builtin_memcpy takes an arg
   of type size_t, but it can handle unsigned int.  */

#if __GNUC__ > 1		/* GNU C and GNU C++ define this.  */
#define __yy_memcpy(TO,FROM,COUNT)	__builtin_memcpy(TO,FROM,COUNT)
#else				/* not GNU C or C++ */
#ifndef __cplusplus

/* This is the most reliable way to avoid incompatibilities
   in available built-in functions on various systems.  */
static void
__yy_memcpy (to, from, count)
     char *to;
     char *from;
     unsigned int count;
{
  register char *f = from;
  register char *t = to;
  register int i = count;

  while (i-- > 0)
    *t++ = *f++;
}

#else /* __cplusplus */

/* This is the most reliable way to avoid incompatibilities
   in available built-in functions on various systems.  */
static void
__yy_memcpy (char *to, char *from, unsigned int count)
{
  register char *t = to;
  register char *f = from;
  register int i = count;

  while (i-- > 0)
    *t++ = *f++;
}

#endif
#endif

#line 217 "/usr/local/share/bison.simple"

/* The user can define YYPARSE_PARAM as the name of an argument to be passed
   into yyparse.  The argument should have type void *.
   It should actually point to an object.
   Grammar actions can access the variable by casting it
   to the proper pointer type.  */

#ifdef YYPARSE_PARAM
#ifdef __cplusplus
#define YYPARSE_PARAM_ARG void *YYPARSE_PARAM
#define YYPARSE_PARAM_DECL
#else /* not __cplusplus */
#define YYPARSE_PARAM_ARG YYPARSE_PARAM
#define YYPARSE_PARAM_DECL void *YYPARSE_PARAM;
#endif /* not __cplusplus */
#else /* not YYPARSE_PARAM */
#define YYPARSE_PARAM_ARG
#define YYPARSE_PARAM_DECL
#endif /* not YYPARSE_PARAM */

/* Prevent warning if -Wstrict-prototypes.  */
#ifdef __GNUC__
#ifdef YYPARSE_PARAM
int yyparse (void *);
#else
int yyparse (void);
#endif
#endif

int
yyparse(YYPARSE_PARAM_ARG)
     YYPARSE_PARAM_DECL
{
  register int yystate;
  register int yyn;
  register short *yyssp;
  register YYSTYPE *yyvsp;
  int yyerrstatus;	/*  number of tokens to shift before error messages enabled */
  int yychar1 = 0;		/*  lookahead token as an internal (translated) token number */

  short	yyssa[YYINITDEPTH];	/*  the state stack			*/
  YYSTYPE yyvsa[YYINITDEPTH];	/*  the semantic value stack		*/

  short *yyss = yyssa;		/*  refer to the stacks thru separate pointers */
  YYSTYPE *yyvs = yyvsa;	/*  to allow yyoverflow to reallocate them elsewhere */

#ifdef YYLSP_NEEDED
  YYLTYPE yylsa[YYINITDEPTH];	/*  the location stack			*/
  YYLTYPE *yyls = yylsa;
  YYLTYPE *yylsp;

#define YYPOPSTACK   (yyvsp--, yyssp--, yylsp--)
#else
#define YYPOPSTACK   (yyvsp--, yyssp--)
#endif

  int yystacksize = YYINITDEPTH;
  int yyfree_stacks = 0;

#ifdef YYPURE
  int yychar;
  YYSTYPE yylval;
  int yynerrs;
#ifdef YYLSP_NEEDED
  YYLTYPE yylloc;
#endif
#endif

  YYSTYPE yyval;		/*  the variable used to return		*/
				/*  semantic values from the action	*/
				/*  routines				*/

  int yylen;

#if YYDEBUG != 0
  if (yydebug)
    fprintf(stderr, "Starting parse\n");
#endif

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY;		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss - 1;
  yyvsp = yyvs;
#ifdef YYLSP_NEEDED
  yylsp = yyls;
#endif

/* Push a new state, which is found in  yystate  .  */
/* In all cases, when you get here, the value and location stacks
   have just been pushed. so pushing a state here evens the stacks.  */
yynewstate:

  *++yyssp = yystate;

  if (yyssp >= yyss + yystacksize - 1)
    {
      /* Give user a chance to reallocate the stack */
      /* Use copies of these so that the &'s don't force the real ones into memory. */
      YYSTYPE *yyvs1 = yyvs;
      short *yyss1 = yyss;
#ifdef YYLSP_NEEDED
      YYLTYPE *yyls1 = yyls;
#endif

      /* Get the current used size of the three stacks, in elements.  */
      int size = yyssp - yyss + 1;

#ifdef yyoverflow
      /* Each stack pointer address is followed by the size of
	 the data in use in that stack, in bytes.  */
#ifdef YYLSP_NEEDED
      /* This used to be a conditional around just the two extra args,
	 but that might be undefined if yyoverflow is a macro.  */
      yyoverflow("parser stack overflow",
		 &yyss1, size * sizeof (*yyssp),
		 &yyvs1, size * sizeof (*yyvsp),
		 &yyls1, size * sizeof (*yylsp),
		 &yystacksize);
#else
      yyoverflow("parser stack overflow",
		 &yyss1, size * sizeof (*yyssp),
		 &yyvs1, size * sizeof (*yyvsp),
		 &yystacksize);
#endif

      yyss = yyss1; yyvs = yyvs1;
#ifdef YYLSP_NEEDED
      yyls = yyls1;
#endif
#else /* no yyoverflow */
      /* Extend the stack our own way.  */
      if (yystacksize >= YYMAXDEPTH)
	{
	  yyerror("parser stack overflow");
	  if (yyfree_stacks)
	    {
	      free (yyss);
	      free (yyvs);
#ifdef YYLSP_NEEDED
	      free (yyls);
#endif
	    }
	  return 2;
	}
      yystacksize *= 2;
      if (yystacksize > YYMAXDEPTH)
	yystacksize = YYMAXDEPTH;
#ifndef YYSTACK_USE_ALLOCA
      yyfree_stacks = 1;
#endif
      yyss = (short *) YYSTACK_ALLOC (yystacksize * sizeof (*yyssp));
      __yy_memcpy ((char *)yyss, (char *)yyss1,
		   size * (unsigned int) sizeof (*yyssp));
      yyvs = (YYSTYPE *) YYSTACK_ALLOC (yystacksize * sizeof (*yyvsp));
      __yy_memcpy ((char *)yyvs, (char *)yyvs1,
		   size * (unsigned int) sizeof (*yyvsp));
#ifdef YYLSP_NEEDED
      yyls = (YYLTYPE *) YYSTACK_ALLOC (yystacksize * sizeof (*yylsp));
      __yy_memcpy ((char *)yyls, (char *)yyls1,
		   size * (unsigned int) sizeof (*yylsp));
#endif
#endif /* no yyoverflow */

      yyssp = yyss + size - 1;
      yyvsp = yyvs + size - 1;
#ifdef YYLSP_NEEDED
      yylsp = yyls + size - 1;
#endif

#if YYDEBUG != 0
      if (yydebug)
	fprintf(stderr, "Stack size increased to %d\n", yystacksize);
#endif

      if (yyssp >= yyss + yystacksize - 1)
	YYABORT;
    }

#if YYDEBUG != 0
  if (yydebug)
    fprintf(stderr, "Entering state %d\n", yystate);
#endif

  goto yybackup;
 yybackup:

/* Do appropriate processing given the current state.  */
/* Read a lookahead token if we need one and don't already have one.  */
/* yyresume: */

  /* First try to decide what to do without reference to lookahead token.  */

  yyn = yypact[yystate];
  if (yyn == YYFLAG)
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* yychar is either YYEMPTY or YYEOF
     or a valid token in external form.  */

  if (yychar == YYEMPTY)
    {
#if YYDEBUG != 0
      if (yydebug)
	fprintf(stderr, "Reading a token: ");
#endif
      yychar = YYLEX;
    }

  /* Convert token to internal form (in yychar1) for indexing tables with */

  if (yychar <= 0)		/* This means end of input. */
    {
      yychar1 = 0;
      yychar = YYEOF;		/* Don't call YYLEX any more */

#if YYDEBUG != 0
      if (yydebug)
	fprintf(stderr, "Now at end of input.\n");
#endif
    }
  else
    {
      yychar1 = YYTRANSLATE(yychar);

#if YYDEBUG != 0
      if (yydebug)
	{
	  fprintf (stderr, "Next token is %d (%s", yychar, yytname[yychar1]);
	  /* Give the individual parser a way to print the precise meaning
	     of a token, for further debugging info.  */
#ifdef YYPRINT
	  YYPRINT (stderr, yychar, yylval);
#endif
	  fprintf (stderr, ")\n");
	}
#endif
    }

  yyn += yychar1;
  if (yyn < 0 || yyn > YYLAST || yycheck[yyn] != yychar1)
    goto yydefault;

  yyn = yytable[yyn];

  /* yyn is what to do for this token type in this state.
     Negative => reduce, -yyn is rule number.
     Positive => shift, yyn is new state.
       New state is final state => don't bother to shift,
       just return success.
     0, or most negative number => error.  */

  if (yyn < 0)
    {
      if (yyn == YYFLAG)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }
  else if (yyn == 0)
    goto yyerrlab;

  if (yyn == YYFINAL)
    YYACCEPT;

  /* Shift the lookahead token.  */

#if YYDEBUG != 0
  if (yydebug)
    fprintf(stderr, "Shifting token %d (%s), ", yychar, yytname[yychar1]);
#endif

  /* Discard the token being shifted unless it is eof.  */
  if (yychar != YYEOF)
    yychar = YYEMPTY;

  *++yyvsp = yylval;
#ifdef YYLSP_NEEDED
  *++yylsp = yylloc;
#endif

  /* count tokens shifted since error; after three, turn off error status.  */
  if (yyerrstatus) yyerrstatus--;

  yystate = yyn;
  goto yynewstate;

/* Do the default action for the current state.  */
yydefault:

  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;

/* Do a reduction.  yyn is the number of a rule to reduce with.  */
yyreduce:
  yylen = yyr2[yyn];
  if (yylen > 0)
    yyval = yyvsp[1-yylen]; /* implement default value of the action */

#if YYDEBUG != 0
  if (yydebug)
    {
      int i;

      fprintf (stderr, "Reducing via rule %d (line %d), ",
	       yyn, yyrline[yyn]);

      /* Print the symbols being reduced, and their result.  */
      for (i = yyprhs[yyn]; yyrhs[i] > 0; i++)
	fprintf (stderr, "%s ", yytname[yyrhs[i]]);
      fprintf (stderr, " -> %s\n", yytname[yyr1[yyn]]);
    }
#endif


  switch (yyn) {

case 4:
#line 195 "php.y"
{ yyval = yyvsp[0]; ;
    break;}
case 5:
#line 196 "php.y"
{ yyval = yyvsp[-2] + yyvsp[-1] + yyvsp[0]; ;
    break;}
case 7:
#line 200 "php.y"
{consume_define_args();;
    break;}
case 12:
#line 204 "php.y"
{ PHPParser.setNameSpace( yyvsp[-1] ); ;
    break;}
case 13:
#line 205 "php.y"
{ PHPParser.setNameSpace( yyvsp[-1] ); ;
    break;}
case 15:
#line 206 "php.y"
{PHPParser.setNameSpace( "<global>" );;
    break;}
case 19:
#line 209 "php.y"
{
		//wxPrintf(wxT("error: unexpected %s at line %d, type: %d\n"),
		//		 PHPParser.getYytext().c_str(),
		//		 PHPParser.getLineNumber(),
		//		 PHPParser.getYytype());
		if(PHPParser.getYytype() != 0) {
			RESET_PARSER();
		}
	;
    break;}
case 21:
#line 222 "php.y"
{ yyval = yyvsp[0]; ;
    break;}
case 22:
#line 226 "php.y"
{ PHPParser.addUseStatement(yyvsp[0]); ;
    break;}
case 23:
#line 227 "php.y"
{ PHPParser.addUseStatement(yyvsp[-2], yyvsp[0]); ;
    break;}
case 24:
#line 228 "php.y"
{ PHPParser.addUseStatement(yyvsp[-1] + yyvsp[0]); ;
    break;}
case 25:
#line 229 "php.y"
{ PHPParser.addUseStatement(yyvsp[-3] + yyvsp[-2], yyvsp[0]); ;
    break;}
case 26:
#line 234 "php.y"
{
			PHPParser.getCurrentEntry().setName(yyvsp[-2]);
			PHPParser.getCurrentEntry().setKind(PHP_Kind_Constant);
			PHPParser.getCurrentEntry().addAttribute(PHP_Attr_Const);
            PHPParser.getCurrentEntry().FixDollarPrefix();
			PHPParser.addCurrentEntryToClass();
		;
    break;}
case 27:
#line 242 "php.y"
{
			PHPParser.getCurrentEntry().setName(yyvsp[-2]);
			PHPParser.getCurrentEntry().setKind(PHP_Kind_Constant);
			PHPParser.getCurrentEntry().addAttribute(PHP_Attr_Const);
            PHPParser.getCurrentEntry().FixDollarPrefix();
			PHPParser.addCurrentEntryToClass();
		;
    break;}
case 61:
#line 314 "php.y"
{
			PHPParser.newLocal(yyvsp[0], yyvsp[-1]);
		;
    break;}
case 76:
#line 361 "php.y"
{ PHPParser.getCurrentEntry().addAttribute(PHP_Attr_Reference); ;
    break;}
case 77:
#line 366 "php.y"
{
			// if the current line number is one line below the
			// collected doc comment, attach the doc comment to this
			// function
			PHPParser.assignDocComment();
		;
    break;}
case 78:
#line 372 "php.y"
{
				PHPParser.getCurrentEntry().setName(yyvsp[0]);
				PHPParser.getCurrentEntry().setKind(PHP_Kind_Function);
                PHPParser.getCurrentEntry().FixDollarPrefix();
                PHPParser.getCurrentEntry().setNameSpace( PHPParser.getCurrentNamespace() );
			;
    break;}
case 79:
#line 378 "php.y"
{
				if(PHPParser.getParseOutlineOnly()) {
					// Skip the method body
					consume_method_body();
				}
			;
    break;}
case 80:
#line 384 "php.y"
{
				/* add the function to the results */
				PHPParser.addCurrentEntryToClass();
			;
    break;}
case 81:
#line 391 "php.y"
{ PHPParser.newClass(yyvsp[0]); ;
    break;}
case 82:
#line 397 "php.y"
{
				// class is closed. set the scope back to
				// global scope
				PHPParser.setGlobalScope();
			;
    break;}
case 83:
#line 402 "php.y"
{ PHPParser.newClass(yyvsp[0]); ;
    break;}
case 84:
#line 408 "php.y"
{
				// interface is closed. set the scope back to
				// global scope
				PHPParser.setGlobalScope();
			;
    break;}
case 90:
#line 425 "php.y"
{ PHPParser.getCurrentClass()->setInherits( PHPParser.expandUseStatement(yyvsp[0]) ); ;
    break;}
case 96:
#line 443 "php.y"
{ 
            PHPParser.getCurrentClass()->addInterface( PHPParser.expandUseStatement( yyvsp[0] ) ); 
        ;
    break;}
case 97:
#line 446 "php.y"
{ PHPParser.getCurrentClass()->addInterface( PHPParser.expandUseStatement( yyvsp[0] ) ); ;
    break;}
case 131:
#line 544 "php.y"
{
		PHPParser.getCurrentEntry().newArgument(yyvsp[0]);
		PHPParser.getCurrentEntry().getCurrentArg().setType(yyvsp[-1]);
	;
    break;}
case 132:
#line 549 "php.y"
{
		PHPParser.getCurrentEntry().newArgument(yyvsp[0]);
		PHPParser.getCurrentEntry().getCurrentArg().setType(yyvsp[-2]);
		PHPParser.getCurrentEntry().getCurrentArg().addAttribute(PHP_Attr_Reference);
	;
    break;}
case 133:
#line 555 "php.y"
{
		PHPParser.getCurrentEntry().newArgument(yyvsp[-2]);
		PHPParser.getCurrentEntry().getCurrentArg().setType(yyvsp[-4]);
		PHPParser.getCurrentEntry().getCurrentArg().addAttribute(PHP_Attr_Reference);
	;
    break;}
case 134:
#line 561 "php.y"
{
		PHPParser.getCurrentEntry().newArgument(yyvsp[-2]);
		PHPParser.getCurrentEntry().getCurrentArg().setType(yyvsp[-3]);
	;
    break;}
case 135:
#line 566 "php.y"
{
		PHPParser.getCurrentEntry().newArgument(yyvsp[0]);
		PHPParser.getCurrentEntry().getCurrentArg().setType(yyvsp[-1]);
	;
    break;}
case 136:
#line 571 "php.y"
{
		PHPParser.getCurrentEntry().newArgument(yyvsp[0]);
		PHPParser.getCurrentEntry().getCurrentArg().setType(yyvsp[-2]);
		PHPParser.getCurrentEntry().getCurrentArg().addAttribute(PHP_Attr_Reference);
	;
    break;}
case 137:
#line 577 "php.y"
{
		PHPParser.getCurrentEntry().newArgument(yyvsp[-2]);
		PHPParser.getCurrentEntry().getCurrentArg().setType(yyvsp[-4]);
		PHPParser.getCurrentEntry().getCurrentArg().addAttribute(PHP_Attr_Reference);
	;
    break;}
case 138:
#line 583 "php.y"
{
		PHPParser.getCurrentEntry().newArgument(yyvsp[-2]);
		PHPParser.getCurrentEntry().getCurrentArg().setType(yyvsp[-3]);
	;
    break;}
case 139:
#line 590 "php.y"
{ yyval.Clear(); ;
    break;}
case 140:
#line 591 "php.y"
{ yyval = yyvsp[0]; ;
    break;}
case 141:
#line 592 "php.y"
{ yyval = yyvsp[0]; ;
    break;}
case 142:
#line 593 "php.y"
{ yyval = yyvsp[0]; ;
    break;}
case 154:
#line 619 "php.y"
{
		PHPParser.newLocal(yyvsp[0], wxT(""), PHP_Attr_Global);
	;
    break;}
case 155:
#line 623 "php.y"
{
		PHPParser.newLocal(yyvsp[-1] + yyvsp[0], wxT(""), PHP_Attr_Global);
	;
    break;}
case 166:
#line 648 "php.y"
{
		
        PHPParser.getCurrentEntry().setKind(PHP_Kind_Function);
        PHPParser.getCurrentEntry().setNameSpace( PHPParser.getCurrentNamespace() );
        
		// if the current line number is one line below the
		// collected doc comment, attach the doc comment to this
		// function
		PHPParser.assignDocComment();
	;
    break;}
case 167:
#line 657 "php.y"
{ PHPParser.getCurrentEntry().setName(yyvsp[0]); ;
    break;}
case 170:
#line 666 "php.y"
{ PHPParser.getCurrentClass()->addTrait(yyvsp[0]); ;
    break;}
case 171:
#line 667 "php.y"
{ PHPParser.getCurrentClass()->addTrait(yyvsp[0]); ;
    break;}
case 190:
#line 719 "php.y"
{ PHPParser.addCurrentEntryToClass(); ;
    break;}
case 191:
#line 720 "php.y"
{
			if(PHPParser.getParseOutlineOnly()) {
				// Skip the method body
				consume_method_body();
			}
		;
    break;}
case 192:
#line 725 "php.y"
{ PHPParser.addCurrentEntryToClass(); ;
    break;}
case 199:
#line 744 "php.y"
{ PHPParser.getCurrentEntry().addAttribute(PHP_Access_Public);;
    break;}
case 200:
#line 745 "php.y"
{ PHPParser.getCurrentEntry().addAttribute(PHP_Access_Protected);;
    break;}
case 201:
#line 746 "php.y"
{ PHPParser.getCurrentEntry().addAttribute(PHP_Access_Private);;
    break;}
case 202:
#line 747 "php.y"
{ PHPParser.getCurrentEntry().addAttribute(PHP_Attr_Static);;
    break;}
case 203:
#line 748 "php.y"
{ PHPParser.getCurrentEntry().addAttribute(PHP_Attr_Abstract);;
    break;}
case 204:
#line 749 "php.y"
{ PHPParser.getCurrentEntry().addAttribute(PHP_Attr_Final);;
    break;}
case 205:
#line 754 "php.y"
{
        // member name does not contains the $
		PHPParser.getCurrentEntry().setName(yyvsp[0]);
		PHPParser.getCurrentEntry().setKind(PHP_Kind_Member);
        PHPParser.getCurrentEntry().FixDollarPrefix();
		// if the current line number is one line below the
		// collected doc comment, attach the doc comment to this
		// function
		PHPParser.assignDocComment();
		PHPParser.addCurrentEntryToClass();
	;
    break;}
case 206:
#line 766 "php.y"
{
		PHPParser.getCurrentEntry().setName(yyvsp[-2]);
		PHPParser.getCurrentEntry().setKind(PHP_Kind_Member);
        PHPParser.getCurrentEntry().FixDollarPrefix();
		// if the current line number is one line below the
		// collected doc comment, attach the doc comment to this
		// function
		PHPParser.assignDocComment();
		PHPParser.addCurrentEntryToClass();
	;
    break;}
case 207:
#line 777 "php.y"
{
		PHPParser.getCurrentEntry().setName(yyvsp[0]);
		PHPParser.getCurrentEntry().setKind(PHP_Kind_Member);
        PHPParser.getCurrentEntry().FixDollarPrefix();
		// if the current line number is one line below the
		// collected doc comment, attach the doc comment to this
		// function
		PHPParser.assignDocComment();
		PHPParser.addCurrentEntryToClass();
	;
    break;}
case 208:
#line 788 "php.y"
{
		PHPParser.getCurrentEntry().setName(yyvsp[-2]);
		PHPParser.getCurrentEntry().setKind(PHP_Kind_Member);
        PHPParser.getCurrentEntry().FixDollarPrefix();
		// if the current line number is one line below the
		// collected doc comment, attach the doc comment to this
		// function
		PHPParser.assignDocComment();
		PHPParser.addCurrentEntryToClass();
	;
    break;}
case 209:
#line 802 "php.y"
{
			PHPParser.getCurrentEntry().setKind(PHP_Kind_Constant);
			PHPParser.getCurrentEntry().setName(yyvsp[-2]);
            PHPParser.getCurrentEntry().FixDollarPrefix();
			PHPParser.getCurrentEntry().setDefaultValue(yyvsp[0]);
			// if the current line number is one line below the
			// collected doc comment, attach the doc comment to this
			// function
			PHPParser.assignDocComment();
			PHPParser.addCurrentEntryToClass();
		;
    break;}
case 210:
#line 814 "php.y"
{
			PHPParser.getCurrentEntry().setKind(PHP_Kind_Constant);
			PHPParser.getCurrentEntry().setName(yyvsp[-2]);
			PHPParser.getCurrentEntry().addAttribute(PHP_Attr_Const);
            PHPParser.getCurrentEntry().FixDollarPrefix();
			PHPParser.getCurrentEntry().setDefaultValue(yyvsp[0]);
			PHPParser.addCurrentEntryToClass();
		;
    break;}
case 218:
#line 842 "php.y"
{ 
        if(!update_member_initialization(yyvsp[-2], yyvsp[0])) {
            PHPParser.newLocal(yyvsp[-2], yyvsp[0]);
        }
    ;
    break;}
case 219:
#line 847 "php.y"
{ if(!update_member_initialization(yyvsp[-3], yyvsp[0])) PHPParser.newLocal(yyvsp[-3], wxT(""), PHP_Attr_Reference);    ;
    break;}
case 220:
#line 848 "php.y"
{ if(!update_member_initialization(yyvsp[-5], yyvsp[-1])) PHPParser.newLocal(yyvsp[-5], yyvsp[-1], PHP_Attr_Reference);;
    break;}
case 221:
#line 849 "php.y"
{ yyval = yyvsp[-1]; ;
    break;}
case 223:
#line 851 "php.y"
{ PHPParser.newLocal(yyvsp[-2], yyvsp[0]);;
    break;}
case 224:
#line 852 "php.y"
{ PHPParser.newLocal(yyvsp[-2], yyvsp[0]);;
    break;}
case 225:
#line 853 "php.y"
{ PHPParser.newLocal(yyvsp[-2], yyvsp[0]);;
    break;}
case 226:
#line 854 "php.y"
{ PHPParser.newLocal(yyvsp[-2], yyvsp[0]);;
    break;}
case 227:
#line 855 "php.y"
{ PHPParser.newLocal(yyvsp[-2], yyvsp[0]);;
    break;}
case 228:
#line 856 "php.y"
{ PHPParser.newLocal(yyvsp[-2], yyvsp[0]);;
    break;}
case 229:
#line 857 "php.y"
{ PHPParser.newLocal(yyvsp[-2], yyvsp[0]);;
    break;}
case 230:
#line 858 "php.y"
{ PHPParser.newLocal(yyvsp[-2], yyvsp[0]);;
    break;}
case 231:
#line 859 "php.y"
{ PHPParser.newLocal(yyvsp[-2], yyvsp[0]);;
    break;}
case 232:
#line 860 "php.y"
{ PHPParser.newLocal(yyvsp[-2], yyvsp[0]);;
    break;}
case 233:
#line 861 "php.y"
{ PHPParser.newLocal(yyvsp[-2], yyvsp[0]);;
    break;}
case 286:
#line 917 "php.y"
{ 
        PHPParser.pushAnonymousFunction(); /* switch to annonymous function */
    ;
    break;}
case 287:
#line 921 "php.y"
{ PHPParser.popAnonymousFunction(); ;
    break;}
case 288:
#line 922 "php.y"
{
        PHPParser.pushAnonymousFunction(); /* switch to annonymous function */
    ;
    break;}
case 289:
#line 925 "php.y"
{ PHPParser.popAnonymousFunction(); ;
    break;}
case 309:
#line 979 "php.y"
{ yyval = yyvsp[0]; ;
    break;}
case 310:
#line 980 "php.y"
{ yyval = yyvsp[0]; ;
    break;}
case 311:
#line 981 "php.y"
{ yyval = yyvsp[-2] + yyvsp[-1] + yyvsp[0]; ;
    break;}
case 312:
#line 982 "php.y"
{ yyval = yyvsp[-1] + yyvsp[0];;
    break;}
case 313:
#line 986 "php.y"
{ yyval= yyvsp[0]; ;
    break;}
case 314:
#line 987 "php.y"
{ yyval = yyvsp[-2] + yyvsp[-1] + yyvsp[0];;
    break;}
case 315:
#line 988 "php.y"
{ yyval = yyvsp[-1] + yyvsp[0];;
    break;}
case 323:
#line 1017 "php.y"
{ yyval = yyvsp[-1]; ;
    break;}
case 324:
#line 1018 "php.y"
{ yyval = yyvsp[-1]; ;
    break;}
case 377:
#line 1121 "php.y"
{ yyval = yyvsp[-4] + yyvsp[-3] + yyvsp[-2];;
    break;}
case 378:
#line 1122 "php.y"
{ yyval = yyvsp[0];;
    break;}
case 395:
#line 1174 "php.y"
{ yyval = yyvsp[0];    ;
    break;}
case 396:
#line 1175 "php.y"
{ yyval.Clear(); ;
    break;}
case 397:
#line 1176 "php.y"
{ yyval = yyvsp[0]; ;
    break;}
case 401:
#line 1187 "php.y"
{ yyval = yyvsp[-3];    ;
    break;}
case 402:
#line 1188 "php.y"
{ yyval.Clear(); ;
    break;}
case 403:
#line 1189 "php.y"
{ yyval = yyvsp[0];    ;
    break;}
case 404:
#line 1193 "php.y"
{ yyval = yyvsp[0]; ;
    break;}
}
   /* the action file gets copied in in place of this dollarsign */
#line 543 "/usr/local/share/bison.simple"

  yyvsp -= yylen;
  yyssp -= yylen;
#ifdef YYLSP_NEEDED
  yylsp -= yylen;
#endif

#if YYDEBUG != 0
  if (yydebug)
    {
      short *ssp1 = yyss - 1;
      fprintf (stderr, "state stack now");
      while (ssp1 != yyssp)
	fprintf (stderr, " %d", *++ssp1);
      fprintf (stderr, "\n");
    }
#endif

  *++yyvsp = yyval;

#ifdef YYLSP_NEEDED
  yylsp++;
  if (yylen == 0)
    {
      yylsp->first_line = yylloc.first_line;
      yylsp->first_column = yylloc.first_column;
      yylsp->last_line = (yylsp-1)->last_line;
      yylsp->last_column = (yylsp-1)->last_column;
      yylsp->text = 0;
    }
  else
    {
      yylsp->last_line = (yylsp+yylen-1)->last_line;
      yylsp->last_column = (yylsp+yylen-1)->last_column;
    }
#endif

  /* Now "shift" the result of the reduction.
     Determine what state that goes to,
     based on the state we popped back to
     and the rule number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTBASE] + *yyssp;
  if (yystate >= 0 && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTBASE];

  goto yynewstate;

yyerrlab:   /* here on detecting error */

  if (! yyerrstatus)
    /* If not already recovering from an error, report this error.  */
    {
      ++yynerrs;

#ifdef YYERROR_VERBOSE
      yyn = yypact[yystate];

      if (yyn > YYFLAG && yyn < YYLAST)
	{
	  int size = 0;
	  char *msg;
	  int x, count;

	  count = 0;
	  /* Start X at -yyn if nec to avoid negative indexes in yycheck.  */
	  for (x = (yyn < 0 ? -yyn : 0);
	       x < (sizeof(yytname) / sizeof(char *)); x++)
	    if (yycheck[x + yyn] == x)
	      size += strlen(yytname[x]) + 15, count++;
	  msg = (char *) malloc(size + 15);
	  if (msg != 0)
	    {
	      strcpy(msg, "parse error");

	      if (count < 5)
		{
		  count = 0;
		  for (x = (yyn < 0 ? -yyn : 0);
		       x < (sizeof(yytname) / sizeof(char *)); x++)
		    if (yycheck[x + yyn] == x)
		      {
			strcat(msg, count == 0 ? ", expecting `" : " or `");
			strcat(msg, yytname[x]);
			strcat(msg, "'");
			count++;
		      }
		}
	      yyerror(msg);
	      free(msg);
	    }
	  else
	    yyerror ("parse error; also virtual memory exceeded");
	}
      else
#endif /* YYERROR_VERBOSE */
	yyerror("parse error");
    }

  goto yyerrlab1;
yyerrlab1:   /* here on error raised explicitly by an action */

  if (yyerrstatus == 3)
    {
      /* if just tried and failed to reuse lookahead token after an error, discard it.  */

      /* return failure if at end of input */
      if (yychar == YYEOF)
	YYABORT;

#if YYDEBUG != 0
      if (yydebug)
	fprintf(stderr, "Discarding token %d (%s).\n", yychar, yytname[yychar1]);
#endif

      yychar = YYEMPTY;
    }

  /* Else will try to reuse lookahead token
     after shifting the error token.  */

  yyerrstatus = 3;		/* Each real token shifted decrements this */

  goto yyerrhandle;

yyerrdefault:  /* current state does not do anything special for the error token. */

#if 0
  /* This is wrong; only states that explicitly want error tokens
     should shift them.  */
  yyn = yydefact[yystate];  /* If its default is to accept any token, ok.  Otherwise pop it.*/
  if (yyn) goto yydefault;
#endif

yyerrpop:   /* pop the current state because it cannot handle the error token */

  if (yyssp == yyss) YYABORT;
  yyvsp--;
  yystate = *--yyssp;
#ifdef YYLSP_NEEDED
  yylsp--;
#endif

#if YYDEBUG != 0
  if (yydebug)
    {
      short *ssp1 = yyss - 1;
      fprintf (stderr, "Error: state stack now");
      while (ssp1 != yyssp)
	fprintf (stderr, " %d", *++ssp1);
      fprintf (stderr, "\n");
    }
#endif

yyerrhandle:

  yyn = yypact[yystate];
  if (yyn == YYFLAG)
    goto yyerrdefault;

  yyn += YYTERROR;
  if (yyn < 0 || yyn > YYLAST || yycheck[yyn] != YYTERROR)
    goto yyerrdefault;

  yyn = yytable[yyn];
  if (yyn < 0)
    {
      if (yyn == YYFLAG)
	goto yyerrpop;
      yyn = -yyn;
      goto yyreduce;
    }
  else if (yyn == 0)
    goto yyerrpop;

  if (yyn == YYFINAL)
    YYACCEPT;

#if YYDEBUG != 0
  if (yydebug)
    fprintf(stderr, "Shifting error token, ");
#endif

  *++yyvsp = yylval;
#ifdef YYLSP_NEEDED
  *++yylsp = yylloc;
#endif

  yystate = yyn;
  goto yynewstate;

 yyacceptlab:
  /* YYACCEPT comes here.  */
  if (yyfree_stacks)
    {
      free (yyss);
      free (yyvs);
#ifdef YYLSP_NEEDED
      free (yyls);
#endif
    }
  return 0;

 yyabortlab:
  /* YYABORT comes here.  */
  if (yyfree_stacks)
    {
      free (yyss);
      free (yyvs);
#ifdef YYLSP_NEEDED
      free (yyls);
#endif
    }
  return 1;
}
#line 1299 "php.y"


bool update_member_initialization(const wxString &expr, const wxString &type)
{
	// parse the current expression and see if we are initializing
	// a member variable
	PHPParser.parseString(false, PHP_PREFIX_WITH_SPACE + expr, PHPGlobals::Type_Expr, false);
	if(PHPParser.getCurchain().size() != 2)
		return false;

	if(PHPParser.getCurchain().at(0).getKind() != PHP_Kind_This)
		return false;

	// Must not be in a global scope
	if(PHPParser.getCurrentClass()->isGlobalScopeClass())
		return false;

	PHPEntry *member = PHPParser.getCurrentClass()->findChild(PHPParser.getCurchain().at(1).getName(), PHP_Kind_Member);
	if(member) {
		// We found a match for this member
		// update its type
		member->setType(type);
		return true;
	}
	return false;
}

void consume_method_body()
{
	wxString type, typeScope;
	PHPParser.skipMethodBodyKeepReturnStatement(type, typeScope);
	if(PHPParser.getCurrentEntry().getKind() == PHP_Kind_Function) {
		PHPParser.getCurrentEntry().setType(type);
		PHPParser.getCurrentEntry().setTypeScope(typeScope);
	}
}

void consume_define_args()
{
	YYSTYPE name, value, curvalue;
	int depth = 1;
	while(depth > 0)
	{
		int ch = php_lex();
		if(ch ==0){
			break;
		}
		switch(ch) {
		case ')':
			depth--;
			if(depth == 0) {
				value = curvalue;
				value.RemoveLast();
				php_less(0);
				if(!name.IsEmpty() && !value.IsEmpty()) {
					PHPParser.getCurrentEntry().setName(name);
					PHPParser.getCurrentEntry().setKind(PHP_Kind_Constant);
                    PHPParser.getCurrentEntry().FixDollarPrefix();
					PHPParser.getCurrentEntry().setDefaultValue(value);
					PHPParser.assignDocComment();
					PHPParser.addCurrentEntryToClass();
				}
				return;
			} else {
				curvalue << php_lval << wxT(" ");
			}
			break;
		case T_CONSTANT_ENCAPSED_STRING:
			{
				YYSTYPE tmp;
				tmp = php_lval;
				if(name.IsEmpty()) { // still looking for the name of the define
					if(tmp.StartsWith(wxT("\"")) || tmp.StartsWith(wxT("'")))
						tmp.Remove(0, 1);
						
					if(tmp.EndsWith(wxT("\"")) || tmp.EndsWith(wxT("'")))
						tmp.RemoveLast();
				}
				curvalue << tmp << wxT(" ");
			}
			break;
		case ',':
			name = curvalue;
			name.RemoveLast();
			curvalue.Clear();
			break;
			
		case '(':
			depth++;
			curvalue << php_lval << wxT(" ");
			break;
		default:
			curvalue << php_lval << wxT(" ");
			break;
		}
	}
}
