//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: php_ui.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#ifndef PHP_UI_BASE_CLASSES_H
#define PHP_UI_BASE_CLASSES_H

#include <wx/settings.h>
#include <wx/xrc/xmlres.h>
#include <wx/xrc/xh_bmp.h>
#include <wx/dialog.h>
#include <wx/iconbndl.h>
#include <wx/artprov.h>
#include <wx/sizer.h>
#include <wx/textctrl.h>
#include "php_file_layout_tree.h"
#include <wx/panel.h>
#include <wx/stattext.h>
#include <wx/button.h>
#include <wx/checkbox.h>
#include <wx/filepicker.h>
#include <wx/dataview.h>
#include <wx/treebook.h>
#include <wx/imaglist.h>
#include <wx/choicebk.h>
#include <wx/pen.h>
#include <wx/aui/auibar.h>
#include <map>
#include <wx/menu.h>
#include <wx/toolbar.h>
#include <wx/treectrl.h>
#include "my_tree_view.h"
#include <wx/gauge.h>
#include <wx/aui/auibook.h>
#include "xdebuglocalsviewmodel.h"
#include <wx/bitmap.h>
#include <wx/icon.h>
#include <wx/notebook.h>
#include <wx/stc/stc.h>

class QuickOutlineDlgBase : public wxDialog
{
protected:
    wxTextCtrl* m_textCtrl;
    PHPFileLayoutTree* m_treeCtrlLayout;

protected:
    virtual void OnKeyDown(wxKeyEvent& event) { event.Skip(); }
    virtual void OnTextEntered(wxCommandEvent& event) { event.Skip(); }
    virtual void OnEnter(wxCommandEvent& event) { event.Skip(); }

public:
    QuickOutlineDlgBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = wxT(""), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(400,400), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxBORDER_SUNKEN);
    virtual ~QuickOutlineDlgBase();
};


class NewWorkspaceSelectionDlgBase : public wxDialog
{
protected:
    wxPanel* m_panel1;
    wxStaticText* m_staticText9;
    wxButton* m_button1;
    wxButton* m_button2;

protected:
    virtual void OnClose(wxCloseEvent& event) { event.Skip(); }
    virtual void OnKeyDown(wxKeyEvent& event) { event.Skip(); }
    virtual void OnStandardWorkspace(wxCommandEvent& event) { event.Skip(); }
    virtual void OnPHPWorkspace(wxCommandEvent& event) { event.Skip(); }

public:
    NewWorkspaceSelectionDlgBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("New Workspace Type..."), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(300,-1), long style = wxDEFAULT_DIALOG_STYLE);
    virtual ~NewWorkspaceSelectionDlgBase();
};


class NewPHPWorkspaceBaseDlg : public wxDialog
{
protected:
    wxStaticText* m_staticText2;
    wxTextCtrl* m_textCtrlName;
    wxStaticText* m_staticText3;
    wxTextCtrl* m_textCtrlPath;
    wxButton* m_button49;
    wxCheckBox* m_checkBoxCreateInSeparateDir;
    wxTextCtrl* m_textCtrlPreview;
    wxButton* m_button6;
    wxButton* m_button7;

protected:
    virtual void OnNameUpdated(wxCommandEvent& event) { event.Skip(); }
    virtual void OnBrowse(wxCommandEvent& event) { event.Skip(); }
    virtual void OnCheckMakeSeparateDir(wxCommandEvent& event) { event.Skip(); }
    virtual void OnOK(wxCommandEvent& event) { event.Skip(); }
    virtual void OnOKUI(wxUpdateUIEvent& event) { event.Skip(); }

public:
    NewPHPWorkspaceBaseDlg(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("New PHP Workspace"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1, -1), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER);
    virtual ~NewPHPWorkspaceBaseDlg();
};


class NewFileDlgBase : public wxDialog
{
protected:
    wxStaticText* m_staticText4;
    wxTextCtrl* m_textCtrlName;
    wxStaticText* m_staticText5;
    wxDirPickerCtrl* m_dirPickerPath;
    wxButton* m_button5;
    wxButton* m_button6;

protected:

public:
    NewFileDlgBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("New File"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1, -1), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER);
    virtual ~NewFileDlgBase();
};


class ImportFilesBaseDlg : public wxDialog
{
protected:
    wxStaticText* m_staticText7;
    wxTextCtrl* m_textCtrlFolderPath;
    wxButton* m_button61;
    wxStaticText* m_staticText8;
    wxTextCtrl* m_textCtrlFileExtension;
    wxCheckBox* m_checkBoxSubDirs;
    wxButton* m_button7;
    wxButton* m_button8;

protected:
    virtual void OnBrowse(wxCommandEvent& event) { event.Skip(); }
    virtual void OnOkUI(wxUpdateUIEvent& event) { event.Skip(); }

public:
    ImportFilesBaseDlg(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Import files"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER);
    virtual ~ImportFilesBaseDlg();
};


class OpenResourceDlgBase : public wxDialog
{
protected:
    wxStaticText* m_staticText9;
    wxTextCtrl* m_textCtrlFilter;
    wxDataViewListCtrl* m_dvListCtrl;

protected:
    virtual void OnKeyDown(wxKeyEvent& event) { event.Skip(); }
    virtual void OnFilterText(wxCommandEvent& event) { event.Skip(); }
    virtual void OnFilterEnter(wxCommandEvent& event) { event.Skip(); }
    virtual void OnDVItemActivated(wxDataViewEvent& event) { event.Skip(); }

public:
    OpenResourceDlgBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Open resource..."), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER);
    virtual ~OpenResourceDlgBase();
};


class PHPSettingsBaseDlg : public wxDialog
{
protected:
    wxTreebook* m_treebook9;
    wxPanel* m_panel11;
    wxStaticText* m_staticText9;
    wxFilePickerCtrl* m_filePickerPHPPath;
    wxStaticText* m_staticText11;
    wxTextCtrl* m_textCtrlErrorReporting;
    wxStaticText* m_staticText14;
    wxButton* m_buttonBrowseIncludePath;
    wxTextCtrl* m_textCtrlIncludePath;
    wxPanel* m_panel15;
    wxStaticText* m_staticText13;
    wxButton* m_button15;
    wxTextCtrl* m_textCtrCClIncludePath;
    wxPanel* m_panel13;
    wxStaticText* m_staticText10;
    wxTextCtrl* m_textCtrlXDebugPort;
    wxStaticText* m_staticText152;
    wxTextCtrl* m_textCtrlIdeKey;
    wxButton* m_button9;
    wxButton* m_button10;

protected:
    virtual void OnBrowseForIncludePath(wxCommandEvent& event) { event.Skip(); }
    virtual void OnAddCCPath(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUpdateApplyUI(wxCommandEvent& event) { event.Skip(); }
    virtual void OnOK(wxCommandEvent& event) { event.Skip(); }

public:
    PHPSettingsBaseDlg(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("PHP Settings"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1, -1), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER);
    virtual ~PHPSettingsBaseDlg();
};


class PHPProjectSettingsBase : public wxDialog
{
protected:
    wxTreebook* m_treebook41;
    wxPanel* m_panel43;
    wxChoicebook* m_choicebook1;
    wxPanel* m_panel5;
    wxStaticText* m_staticText19;
    wxFilePickerCtrl* m_filePickerPHPExe;
    wxStaticText* m_staticText75;
    wxFilePickerCtrl* m_filePickerPhpIni;
    wxStaticText* m_staticText15;
    wxFilePickerCtrl* m_filePickerIndex;
    wxStaticText* m_staticText18;
    wxDirPickerCtrl* m_dirPickerWorkingDirectory;
    wxStaticText* m_staticText41;
    wxTextCtrl* m_textCtrlProgramArgs;
    wxCheckBox* m_checkBoxPauseWhenExecutionEnds;
    wxPanel* m_panel6;
    wxStaticText* m_staticText16;
    wxTextCtrl* m_textCtrlWebSiteURL;
    wxCheckBox* m_checkBoxSystemBrowser;
    wxPanel* m_panel59;
    wxStaticText* m_staticText20;
    wxButton* m_button17;
    wxTextCtrl* m_textCtrlPHPIncludePath;
    wxPanel* m_panel45;
    wxStaticText* m_staticText105;
    wxDataViewListCtrl* m_dvListCtrlFileMapping;
    wxPanel* m_panel47;
    wxStaticText* m_staticText13;
    wxButton* m_button15;
    wxTextCtrl* m_textCtrlCCIncludePath;
    wxButton* m_button12;
    wxButton* m_button13;
    wxButton* m_button14;

protected:
    virtual void OnPageChanged(wxChoicebookEvent& event) { event.Skip(); }
    virtual void OnPHPExecChanged(wxFileDirPickerEvent& event) { event.Skip(); }
    virtual void OnPHPIniSelected(wxFileDirPickerEvent& event) { event.Skip(); }
    virtual void OnIndexFileSelected(wxFileDirPickerEvent& event) { event.Skip(); }
    virtual void OnWorkingDirectoryChanged(wxFileDirPickerEvent& event) { event.Skip(); }
    virtual void OnUpdateApplyUI(wxCommandEvent& event) { event.Skip(); }
    virtual void OnPauseWhenExeTerminates(wxCommandEvent& event) { event.Skip(); }
    virtual void OnProjectURLChanged(wxCommandEvent& event) { event.Skip(); }
    virtual void OnUseSystemBrowser(wxCommandEvent& event) { event.Skip(); }
    virtual void OnAddIncludePath(wxCommandEvent& event) { event.Skip(); }
    virtual void OnFileMappingMenu(wxDataViewEvent& event) { event.Skip(); }
    virtual void OnFileMappingItemActivated(wxDataViewEvent& event) { event.Skip(); }
    virtual void OnAddCCPath(wxCommandEvent& event) { event.Skip(); }
    virtual void OnOK(wxCommandEvent& event) { event.Skip(); }
    virtual void OnApply(wxCommandEvent& event) { event.Skip(); }
    virtual void OnApplyUI(wxUpdateUIEvent& event) { event.Skip(); }

public:
    PHPProjectSettingsBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Project Settings"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1, -1), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER);
    virtual ~PHPProjectSettingsBase();
};


class FileMappingDlgBase : public wxDialog
{
protected:
    wxStaticText* m_staticText119;
    wxDirPickerCtrl* m_dirPickerSource;
    wxStaticText* m_staticText123;
    wxDirPickerCtrl* m_dirPickerTarget;
    wxStdDialogButtonSizer* m_stdBtnSizer111;
    wxButton* m_buttonOK;
    wxButton* m_buttonCancel;

protected:
    virtual void OnOkUI(wxUpdateUIEvent& event) { event.Skip(); }

public:
    FileMappingDlgBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("File Mapping"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER);
    virtual ~FileMappingDlgBase();
};


class PHPWorkspaceViewBase : public wxPanel
{
public:
    enum {
        ID_PHP_PROJECT_SETTINGS = 1001,
        ID_UPLOAD_CLOUD = 1002,
    };
protected:
    wxAuiToolBar* m_auibar29;
    std::map<int, wxMenu*> m_dropdownMenus;
    MyTreeView* m_treeCtrlView;
    wxGauge* m_gaugeParseProgress;

    virtual void ShowAuiToolMenu(wxAuiToolBarEvent& event);

protected:
    virtual void OnActiveProjectSettings(wxCommandEvent& event) { event.Skip(); }
    virtual void OnActiveProjectSettingsUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnWorkspaceOpenUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnSetupRemoteUpload(wxAuiToolBarEvent& event) { event.Skip(); }
    virtual void OnMenu(wxTreeEvent& event) { event.Skip(); }
    virtual void OnItemActivated(wxTreeEvent& event) { event.Skip(); }

public:
    PHPWorkspaceViewBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(100,200), long style = wxTAB_TRAVERSAL);
    virtual ~PHPWorkspaceViewBase();
};


class PHPDebugPaneBase : public wxPanel
{
public:
    enum {
        ID_DELETE_ALL_BREAKPOINTS = 1001,
        ID_DELETE_BREAKPOINTS = 1002,
    };
protected:
    wxAuiNotebook* m_auiBook;
    wxPanel* m_panel140;
    wxDataViewListCtrl* m_dvListCtrlStackTrace;
    wxPanel* m_panel142;
    wxDataViewListCtrl* m_dvListCtrlBreakpoints;
    wxAuiToolBar* m_auibar218;

protected:
    virtual void OnCallStackItemActivated(wxDataViewEvent& event) { event.Skip(); }
    virtual void OnBreakpointItemActivated(wxDataViewEvent& event) { event.Skip(); }
    virtual void OnDeleteBreakpoint(wxCommandEvent& event) { event.Skip(); }
    virtual void OnDeleteBreakpointUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnClearAll(wxCommandEvent& event) { event.Skip(); }
    virtual void OnClearAllUI(wxUpdateUIEvent& event) { event.Skip(); }

public:
    PHPDebugPaneBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(300,300), long style = wxTAB_TRAVERSAL);
    virtual ~PHPDebugPaneBase();
};


class LocalsViewBase : public wxPanel
{
protected:
    wxDataViewCtrl* m_dataview;
    wxObjectDataPtr<XDebugLocalsViewModel> m_dataviewModel;


protected:
    virtual void OnLocalCollapsed(wxDataViewEvent& event) { event.Skip(); }
    virtual void OnLocalExpanded(wxDataViewEvent& event) { event.Skip(); }
    virtual void OnLocalExpanding(wxDataViewEvent& event) { event.Skip(); }

public:
    LocalsViewBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxTAB_TRAVERSAL);
    virtual ~LocalsViewBase();
};


class PHPDebuggerImages : public wxImageList
{
protected:
    // Maintain a map of all bitmaps representd by their name
    std::map<wxString, wxBitmap> m_bitmaps;


protected:

public:
    PHPDebuggerImages();
    const wxBitmap& Bitmap(const wxString &name) const {
        if ( !m_bitmaps.count(name) )
            return wxNullBitmap;
        return m_bitmaps.find(name)->second;
    }
    virtual ~PHPDebuggerImages();
};


class EvalPaneBase : public wxPanel
{
protected:
    wxNotebook* m_notebook257;
    wxPanel* m_panel259;
    wxStyledTextCtrl* m_stcOutput;
    wxTextCtrl* m_textCtrlExpression;
    wxButton* m_buttonSend;
    wxPanel* m_panel261;
    wxStyledTextCtrl* m_stcOutputXDebug;
    wxTextCtrl* m_textCtrlExpressionXdebug;
    wxButton* m_buttonSendXdebug;

protected:
    virtual void OnEnter(wxCommandEvent& event) { event.Skip(); }
    virtual void OnSend(wxCommandEvent& event) { event.Skip(); }
    virtual void OnSendUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnSendXDebugCommand(wxCommandEvent& event) { event.Skip(); }
    virtual void OnSendXDebugCommandUI(wxUpdateUIEvent& event) { event.Skip(); }

public:
    EvalPaneBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(500,300), long style = wxTAB_TRAVERSAL);
    virtual ~EvalPaneBase();
};

#endif
