//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: wxcrafter.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#ifndef WXCRAFTER_BASE_CLASSES_H
#define WXCRAFTER_BASE_CLASSES_H

#include <wx/settings.h>
#include <wx/xrc/xmlres.h>
#include <wx/xrc/xh_bmp.h>
#include <wx/frame.h>
#include <wx/iconbndl.h>
#include <wx/artprov.h>
#include <wx/sizer.h>
#include <wx/panel.h>
#include <wx/pen.h>
#include <wx/aui/auibar.h>
#include <map>
#include <wx/toolbar.h>
#include <wx/stc/stc.h>
#include <wx/menu.h>
#include <wx/timer.h>
#include <wx/dialog.h>
#include <wx/stattext.h>
#include <wx/clrpicker.h>
#include <wx/fontpicker.h>
#include <wx/button.h>

class MainFrameBaseClass : public wxFrame
{
protected:
    enum {
        ID_KILL_INFIRIOR = 1001,
        ID_SETTINGS = 1002,
    };
protected:
    wxPanel* m_mainPanel;
    wxAuiToolBar* m_auibar17;
    std::map<int, wxMenu*> m_dropdownMenus;
    wxStyledTextCtrl* m_stc;
    wxMenuBar* m_menuBar;
    wxMenu* m_name6;
    wxMenuItem* m_menuItem7;
    wxMenu* m_name8;
    wxMenuItem* m_menuItem9;
    wxTimer* m_timerMarker;

    virtual void ShowAuiToolMenu(wxAuiToolBarEvent& event);

protected:
    virtual void OnIdle(wxIdleEvent& event) { event.Skip(); }
    virtual void OnClearView(wxCommandEvent& event) { event.Skip(); }
    virtual void OnClearViewUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnTerminateInfirior(wxCommandEvent& event) { event.Skip(); }
    virtual void OnSignalInferiorUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnSignalinferior(wxAuiToolBarEvent& event) { event.Skip(); }
    virtual void OnSettings(wxCommandEvent& event) { event.Skip(); }
    virtual void OnSaveContent(wxCommandEvent& event) { event.Skip(); }
    virtual void OnSaveContentUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnKeyDown(wxKeyEvent& event) { event.Skip(); }
    virtual void OnStcUpdateUI(wxStyledTextEvent& event) { event.Skip(); }
    virtual void OnExit(wxCommandEvent& event) { event.Skip(); }
    virtual void OnAbout(wxCommandEvent& event) { event.Skip(); }
    virtual void OnAddMarker(wxTimerEvent& event) { event.Skip(); }

public:
    MainFrameBaseClass(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("codelite-terminal"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxDEFAULT_FRAME_STYLE);
    virtual ~MainFrameBaseClass();
};


class SettingsDlgBase : public wxDialog
{
protected:
    wxStaticText* m_staticText31;
    wxColourPickerCtrl* m_colourPickerFG;
    wxStaticText* m_staticText35;
    wxColourPickerCtrl* m_colourPickerBG;
    wxStaticText* m_staticText39;
    wxFontPickerCtrl* m_fontPicker;
    wxButton* m_button45;
    wxButton* m_button47;

protected:
    virtual void OnFGColour(wxColourPickerEvent& event) { event.Skip(); }
    virtual void OnBGColour(wxColourPickerEvent& event) { event.Skip(); }
    virtual void OnFontSelected(wxFontPickerEvent& event) { event.Skip(); }

public:
    SettingsDlgBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Settings"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER);
    virtual ~SettingsDlgBase();
};

#endif
